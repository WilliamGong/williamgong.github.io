<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WilliamGong的博客</title>
  
  <subtitle>WilliamGong&#39;s blog</subtitle>
  <link href="https://williamgong.github.io/atom.xml" rel="self"/>
  
  <link href="https://williamgong.github.io/"/>
  <updated>2021-12-04T13:52:12.466Z</updated>
  <id>https://williamgong.github.io/</id>
  
  <author>
    <name>William Gong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LFS 搭建 7 内核与 GRUB</title>
    <link href="https://williamgong.github.io/2021/12/03/lfs%E6%90%AD%E5%BB%BA7/"/>
    <id>https://williamgong.github.io/2021/12/03/lfs%E6%90%AD%E5%BB%BA7/</id>
    <published>2021-12-03T21:35:18.000Z</published>
    <updated>2021-12-04T13:52:12.466Z</updated>
    
    <content type="html"><![CDATA[<p>现在进入最后一部分，内核与 GRUB 的安装。</p><h1 id="构建-Linux-内核"><a href="#构建-Linux-内核" class="headerlink" title="构建 Linux 内核"></a>构建 Linux 内核</h1><p>先解压：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf linux-5.13.12.tar.xz</span><br><span class="line">cd linux-5.13.12</span><br></pre></td></tr></table></figure><p>清理源码树，虽然才解压没什么必要：</p><pre><code>make mrproper</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>此处使用：</p><pre><code>make menuconfig</code></pre><blockquote><p>原来我一直想使用 arch 的配置然后<code>oldconfig</code>，但试了很多次后机器启动一直失败。</p></blockquote><p>配置选项说明参见金步国的博客：<a href="http://www.jinbuguo.com/kernel/longterm-linux-kernel-options.html">http://www.jinbuguo.com/kernel/longterm-linux-kernel-options.html</a><br>虽然是 4.4 的，但大部分选项都没变，尤其是驱动相关。<br>尽量不要改默认的配置，驱动相关的另说。<br>下面是具体的配置选项：<br>General setup 下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[*] Control Group support  ---&gt;</span><br><span class="line"># 手册里没有，但 systemd 建议打开</span><br><span class="line">[*] Checkpoint&#x2F;restore support</span><br><span class="line"></span><br><span class="line">[*] Configure standard kernel features (expert users)  ---&gt;</span><br><span class="line"># 子选项需要关闭以下几个：</span><br><span class="line">    [ ]   Enable 16-bit UID system calls</span><br><span class="line">    [ ]   sgetmask&#x2F;ssetmask syscalls support</span><br><span class="line">    [ ]   Sysfs syscall support</span><br><span class="line">    # 这个取决于主板有没有蜂鸣器</span><br><span class="line">    [ ]   Enable PC-Speaker support</span><br></pre></td></tr></table></figure><p>Processor type and features 下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># EFI 的支持选项：</span><br><span class="line">[*] EFI runtime service support</span><br><span class="line">[*]   EFI stub support</span><br><span class="line">[*]     EFI mixed-mode support</span><br><span class="line"></span><br><span class="line"># 虚拟机需要的选项</span><br><span class="line">[*] Linux guest support  ---&gt;</span><br><span class="line">    # 半虚拟化</span><br><span class="line">    [*]   Enable paravirtualization code</span><br><span class="line">    # KVM</span><br><span class="line">    [*]   KVM Guest support (including kvmclock)</span><br></pre></td></tr></table></figure><p>Firmware Drivers 下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[*] Export DMI identification via sysfs to userspace</span><br><span class="line">EFI (Extensible Firmware Interface) Support  ---&gt;</span><br><span class="line">    &lt; &gt; EFI Variable Support via sysfs</span><br><span class="line">    [*] Export efi runtime maps to sysfs</span><br></pre></td></tr></table></figure><p>Networking support 下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Networking options  ---&gt;</span><br><span class="line">    &lt;*&gt;   The IPv6 protocol ---&gt;</span><br></pre></td></tr></table></figure><p>[*] Enable the block layer 下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Partition Types  ---&gt;</span><br><span class="line">   [*] Advanced partition selection</span><br><span class="line">   [*]   EFI GUID Partition support</span><br></pre></td></tr></table></figure><p>Device Drivers 下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Generic Driver Options  ---&gt;</span><br><span class="line">    [ ] Support for uevent helper</span><br><span class="line">    [*] Maintain a devtmpfs filesystem to mount at &#x2F;dev</span><br><span class="line">    Firmware loader  ---&gt;</span><br><span class="line">        [ ]   Enable the firmware sysfs fallback mechanism</span><br><span class="line">Graphics support  ---&gt;</span><br><span class="line">    Frame buffer Devices  ---&gt;</span><br><span class="line">        --- Support for frame buffer devices</span><br><span class="line">        [*]   EFI-based Framebuffer Support</span><br><span class="line">    Console display driver support  ---&gt;</span><br><span class="line">        [*] Framebuffer Console support</span><br></pre></td></tr></table></figure><p>File systems 下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[*] Inotify support for userspace</span><br><span class="line">Pseudo filesystems  ---&gt;</span><br><span class="line">    [*]   Tmpfs POSIX Access Control Lists</span><br><span class="line">    # 这里可以打成模块也可以直接打进内核</span><br><span class="line">    &lt;M&gt; EFI Variable filesystem</span><br></pre></td></tr></table></figure><p>其他的都不用管。<br>由于 LFS 不使用 initramfs，所以尽量打包进内核，尤其是文件系统相关的不要打成模块。    </p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>配置完成，现在开始编译：</p><pre><code>make</code></pre><p>安装模块：</p><pre><code>make modules_install</code></pre><p>复制内核：</p><pre><code>cp -iv arch/x86_64/boot/bzImage /boot/vmlinuz-5.13.12-lfs-11.0-systemd</code></pre><p>此处的内核文件名称可以自行改变，但要以<code>vmlinuz-</code>开头。<br>复制<code>System.map</code>：</p><pre><code>cp -iv System.map /boot/System.map-5.13.12</code></pre><p>手册这里将配置<code>.config</code>保存到了<code>/boot</code>，但我是认为只要不删除源码，放源码树里就行了。<br>如果要复制配置的话，运行;</p><pre><code>cp -iv .config /boot/config-5.13.12</code></pre><p>安装内核文档：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">install -d &#x2F;usr&#x2F;share&#x2F;doc&#x2F;linux-5.13.12</span><br><span class="line">cp -r Documentation&#x2F;* &#x2F;usr&#x2F;share&#x2F;doc&#x2F;linux-5.13.12</span><br></pre></td></tr></table></figure><p>因为不删除源码树要留以后用，而且源码树里可能有不属于<code>root</code>的文件，现在要切出目录改变所有者：</p><pre><code>chown -R 0:0 .</code></pre><h2 id="配置-Linux-内核模块加载顺序"><a href="#配置-Linux-内核模块加载顺序" class="headerlink" title="配置 Linux 内核模块加载顺序"></a>配置 Linux 内核模块加载顺序</h2><p>创建文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">install -v -m755 -d &#x2F;etc&#x2F;modprobe.d</span><br><span class="line">cat &gt; &#x2F;etc&#x2F;modprobe.d&#x2F;usb.conf &lt;&lt; &quot;EOF&quot;</span><br><span class="line"># Begin &#x2F;etc&#x2F;modprobe.d&#x2F;usb.conf</span><br><span class="line"></span><br><span class="line">install ohci_hcd &#x2F;sbin&#x2F;modprobe ehci_hcd ; &#x2F;sbin&#x2F;modprobe -i ohci_hcd ; true</span><br><span class="line">install uhci_hcd &#x2F;sbin&#x2F;modprobe ehci_hcd ; &#x2F;sbin&#x2F;modprobe -i uhci_hcd ; true</span><br><span class="line"></span><br><span class="line"># End &#x2F;etc&#x2F;modprobe.d&#x2F;usb.conf</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="安装-GRUB"><a href="#安装-GRUB" class="headerlink" title="安装 GRUB"></a>安装 GRUB</h1><h2 id="挂载-EFI-变量文件系统"><a href="#挂载-EFI-变量文件系统" class="headerlink" title="挂载 EFI 变量文件系统"></a>挂载 EFI 变量文件系统</h2><p>打开 UEFI 支持的 grub 需要文件系统<code>efivars</code>。<br>因为需要文件<code>/sys/firmware/efi/efivars</code>，而这个文件在非 UEFI 的机器上是不存在的，因此对于我来说需要将 LFS 硬盘迁移到目标机器挂载，现在就需要 live CD 了。<br>运行：</p><pre><code>mountpoint /sys/firmware/efi/efivars || mount -v -t efivarfs efivarfs /sys/firmware/efi/efivars</code></pre><p>然后安装 grub：</p><pre><code>grub-install --bootloader-id=LFS --recheck</code></pre><p>手动写入<code>grub.cfg</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;boot&#x2F;grub&#x2F;grub.cfg &lt;&lt; EOF</span><br><span class="line"># Begin &#x2F;boot&#x2F;grub&#x2F;grub.cfg</span><br><span class="line">set default&#x3D;0</span><br><span class="line">set timeout&#x3D;5</span><br><span class="line"></span><br><span class="line">insmod part_gpt</span><br><span class="line">insmod ext2</span><br><span class="line">set root&#x3D;(hd0,3)</span><br><span class="line"></span><br><span class="line">if loadfont &#x2F;boot&#x2F;grub&#x2F;fonts&#x2F;unicode.pf2; then</span><br><span class="line">  set gfxmode&#x3D;auto</span><br><span class="line">  insmod all_video</span><br><span class="line">  terminal_output gfxterm</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">menuentry &quot;GNU&#x2F;Linux, Linux 5.13.12-lfs-11.0-systemd&quot;  &#123;</span><br><span class="line">  linux   &#x2F;boot&#x2F;vmlinuz-5.13.12-lfs-11.0-systemd root&#x3D;&#x2F;dev&#x2F;sda3 ro</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">menuentry &quot;Firmware Setup&quot; &#123;</span><br><span class="line">  fwsetup</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="收尾"><a href="#收尾" class="headerlink" title="收尾"></a>收尾</h1><p>现在手册会创建一些描述文件，模板在这，不喜欢可以跳过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">echo 11.0-systemd &gt; &#x2F;etc&#x2F;lfs-release</span><br><span class="line"></span><br><span class="line">cat &gt; &#x2F;etc&#x2F;lsb-release &lt;&lt; &quot;EOF&quot;</span><br><span class="line">DISTRIB_ID&#x3D;&quot;Linux From Scratch&quot;</span><br><span class="line">DISTRIB_RELEASE&#x3D;&quot;11.0-systemd&quot;</span><br><span class="line">DISTRIB_CODENAME&#x3D;&quot;&lt;your name here&gt;&quot;</span><br><span class="line">DISTRIB_DESCRIPTION&#x3D;&quot;Linux From Scratch&quot;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt; &#x2F;etc&#x2F;os-release &lt;&lt; &quot;EOF&quot;</span><br><span class="line">NAME&#x3D;&quot;Linux From Scratch&quot;</span><br><span class="line">VERSION&#x3D;&quot;11.0-systemd&quot;</span><br><span class="line">ID&#x3D;lfs</span><br><span class="line">PRETTY_NAME&#x3D;&quot;Linux From Scratch 11.0-systemd&quot;</span><br><span class="line">VERSION_CODENAME&#x3D;&quot;&lt;your name here&gt;&quot;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>现在是时候重启了。<br>退出 chroot：</p><pre><code>logout</code></pre><p>解挂载：</p><pre><code>umount -Rv $LFS</code></pre><p>重启</p><pre><code>reboot</code></pre><p>至此，LFS 安装完成。</p>]]></content>
    
    
    <summary type="html">现在进入最后一部分，内核与 GRUB 的安装。

构建 Linux 内核
先解压：

1
2


tar -xvf linux-5.13.12.tar.xz
cd linux-5.13.12


清理源码树，虽然才解压没什么必要：

make mrproper

配置
此处使用：

make menuconfig

原来我一直想使用 arch 的配置然后oldconfig，但试了很多次后机器启动一直失败。

配置选项说明参见金步国的博客：http://www.jinbuguo.com/kernel/longterm-linux-kernel-options.html
虽然是 4.4 的，但大部</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>LFS 搭建 6 系统配置</title>
    <link href="https://williamgong.github.io/2021/12/03/lfs%E6%90%AD%E5%BB%BA6/"/>
    <id>https://williamgong.github.io/2021/12/03/lfs%E6%90%AD%E5%BB%BA6/</id>
    <published>2021-12-03T08:46:33.000Z</published>
    <updated>2021-12-04T13:52:12.466Z</updated>
    
    <content type="html"><![CDATA[<p>现在正式进入系统配置阶段。</p><h1 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h1><p>这里使用 systemd-networkd 和 systemd-resolved<br>因为我需要远程登录，因此此处选择静态 ip：</p><h2 id="静态-IP-配置"><a href="#静态-IP-配置" class="headerlink" title="静态 IP 配置"></a>静态 IP 配置</h2><p>这里还不知道目标机器网卡接口名，这个值可以用于大部分有线接口，其他参数自行替换。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;systemd&#x2F;network&#x2F;10-eth-static.network &lt;&lt; &quot;EOF&quot;</span><br><span class="line">[Match]</span><br><span class="line">Name&#x3D;en*</span><br><span class="line"></span><br><span class="line">[Network]</span><br><span class="line">Address&#x3D;192.168.1.105&#x2F;24</span><br><span class="line">Gateway&#x3D;192.168.1.1</span><br><span class="line">DNS&#x3D;192.168.1.1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="创建-etc-resolv-conf-文件"><a href="#创建-etc-resolv-conf-文件" class="headerlink" title="创建 /etc/resolv.conf 文件"></a>创建 /etc/resolv.conf 文件</h2><p>创建一个符号链接：</p><pre><code>ln -sfv /run/systemd/resolve/resolv.conf /etc/resolv.conf</code></pre><h2 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h2><p>创建<code>/etc/hostname</code>：</p><pre><code>echo lfs &gt; /etc/hostname</code></pre><p>创建<code>/etc/hosts</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;hosts &lt;&lt; &quot;EOF&quot;</span><br><span class="line"># Begin &#x2F;etc&#x2F;hosts</span><br><span class="line"></span><br><span class="line">127.0.0.1 localhost.localdomain localhost</span><br><span class="line">192.168.1.105 lfs.williamgong.io    lfs</span><br><span class="line">::1       localhost ip6-localhost ip6-loopback</span><br><span class="line">ff02::1   ip6-allnodes</span><br><span class="line">ff02::2   ip6-allrouters</span><br><span class="line"></span><br><span class="line"># End &#x2F;etc&#x2F;hosts</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>其中写着内网 ip 的那行自行修改。</p><h1 id="时钟设置"><a href="#时钟设置" class="headerlink" title="时钟设置"></a>时钟设置</h1><p>这里使用硬件时钟，在最终重启后运行：</p><pre><code>timedatectl set-local-rtc 1</code></pre><h1 id="Locale"><a href="#Locale" class="headerlink" title="Locale"></a>Locale</h1><p>创建<code>/etc/locale.conf</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;locale.conf &lt;&lt; &quot;EOF&quot;</span><br><span class="line">LANG&#x3D;en_US.utf8</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="创建-etc-inputrc-文件"><a href="#创建-etc-inputrc-文件" class="headerlink" title="创建 /etc/inputrc 文件"></a>创建 /etc/inputrc 文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;inputrc &lt;&lt; &quot;EOF&quot;</span><br><span class="line"># Begin &#x2F;etc&#x2F;inputrc</span><br><span class="line"># Modified by Chris Lynn &lt;roryo@roryo.dynup.net&gt;</span><br><span class="line"></span><br><span class="line"># Allow the command prompt to wrap to the next line</span><br><span class="line">set horizontal-scroll-mode Off</span><br><span class="line"></span><br><span class="line"># Enable 8bit input</span><br><span class="line">set meta-flag On</span><br><span class="line">set input-meta On</span><br><span class="line"></span><br><span class="line"># Turns off 8th bit stripping</span><br><span class="line">set convert-meta Off</span><br><span class="line"></span><br><span class="line"># Keep the 8th bit for display</span><br><span class="line">set output-meta On</span><br><span class="line"></span><br><span class="line"># none, visible or audible</span><br><span class="line">set bell-style none</span><br><span class="line"></span><br><span class="line"># All of the following map the escape sequence of the value</span><br><span class="line"># contained in the 1st argument to the readline specific functions</span><br><span class="line">&quot;\eOd&quot;: backward-word</span><br><span class="line">&quot;\eOc&quot;: forward-word</span><br><span class="line"></span><br><span class="line"># for linux console</span><br><span class="line">&quot;\e[1~&quot;: beginning-of-line</span><br><span class="line">&quot;\e[4~&quot;: end-of-line</span><br><span class="line">&quot;\e[5~&quot;: beginning-of-history</span><br><span class="line">&quot;\e[6~&quot;: end-of-history</span><br><span class="line">&quot;\e[3~&quot;: delete-char</span><br><span class="line">&quot;\e[2~&quot;: quoted-insert</span><br><span class="line"></span><br><span class="line"># for xterm</span><br><span class="line">&quot;\eOH&quot;: beginning-of-line</span><br><span class="line">&quot;\eOF&quot;: end-of-line</span><br><span class="line"></span><br><span class="line"># for Konsole</span><br><span class="line">&quot;\e[H&quot;: beginning-of-line</span><br><span class="line">&quot;\e[F&quot;: end-of-line</span><br><span class="line"></span><br><span class="line"># End &#x2F;etc&#x2F;inputrc</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="创建-etc-shells-文件"><a href="#创建-etc-shells-文件" class="headerlink" title="创建 /etc/shells 文件"></a>创建 /etc/shells 文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;shells &lt;&lt; &quot;EOF&quot;</span><br><span class="line"># Begin &#x2F;etc&#x2F;shells</span><br><span class="line"></span><br><span class="line">&#x2F;bin&#x2F;sh</span><br><span class="line">&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line"># End &#x2F;etc&#x2F;shells</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="systemd-相关"><a href="#systemd-相关" class="headerlink" title="systemd 相关"></a>systemd 相关</h1><p>限制核心转储使用的最大磁盘空间（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv &#x2F;etc&#x2F;systemd&#x2F;coredump.conf.d</span><br><span class="line"></span><br><span class="line">cat &gt; &#x2F;etc&#x2F;systemd&#x2F;coredump.conf.d&#x2F;maxuse.conf &lt;&lt; EOF</span><br><span class="line">[Coredump]</span><br><span class="line">MaxUse&#x3D;5G</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="etc-fstab"><a href="#etc-fstab" class="headerlink" title="/etc/fstab"></a>/etc/fstab</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;fstab &lt;&lt; &quot;EOF&quot;</span><br><span class="line"># Begin &#x2F;etc&#x2F;fstab</span><br><span class="line"># file system mount-point type options dump fsck</span><br><span class="line"># order</span><br><span class="line">&#x2F;dev&#x2F;sda3 &#x2F; ext4 noatime,defaults 1 1</span><br><span class="line">&#x2F;dev&#x2F;sda2 swap swap pri&#x3D;1 0 0</span><br><span class="line">&#x2F;dev&#x2F;sda1 &#x2F;boot&#x2F;efi vfat defaults 0 1</span><br><span class="line"># End &#x2F;etc&#x2F;fstab</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>这是我这台机器上的，参数需要自行修改。     </p><p>至此，配置阶段结束，接下来就是编译内核了。</p>]]></content>
    
    
    <summary type="html">现在正式进入系统配置阶段。

网络配置
这里使用 systemd-networkd 和 systemd-resolved
因为我需要远程登录，因此此处选择静态 ip：

静态 IP 配置
这里还不知道目标机器网卡接口名，这个值可以用于大部分有线接口，其他参数自行替换。

1
2
3
4
5
6
7
8
9


cat &gt; /etc/systemd/network/10-eth-static.network &lt;&lt; &quot;EOF&quot;
[Match]
Name=en*

[Network]
Address=192.168.1.105/24
Gateway=192.168.1.1
DNS=192.168.1</summary>
    
    
    
    <category term="LFS" scheme="https://williamgong.github.io/categories/LFS/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="LFS" scheme="https://williamgong.github.io/tags/LFS/"/>
    
  </entry>
  
  <entry>
    <title>LFS 搭建 5 正式构建 (2)</title>
    <link href="https://williamgong.github.io/2021/12/02/lfs%E6%90%AD%E5%BB%BA5/"/>
    <id>https://williamgong.github.io/2021/12/02/lfs%E6%90%AD%E5%BB%BA5/</id>
    <published>2021-12-02T05:47:11.000Z</published>
    <updated>2021-12-04T13:52:12.466Z</updated>
    
    <content type="html"><![CDATA[<p>现在继续构建剩下的软件包。</p><h1 id="构建软件包"><a href="#构建软件包" class="headerlink" title="构建软件包"></a>构建软件包</h1><h2 id="Inetutils-2-1"><a href="#Inetutils-2-1" class="headerlink" title="Inetutils-2.1"></a>Inetutils-2.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf inetutils-2.1.tar.xz</span><br><span class="line">cd inetutils-2.1</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr        \</span><br><span class="line">            --bindir&#x3D;&#x2F;usr&#x2F;bin    \</span><br><span class="line">            --localstatedir&#x3D;&#x2F;var \</span><br><span class="line">            --disable-logger     \</span><br><span class="line">            --disable-whois      \</span><br><span class="line">            --disable-rcp        \</span><br><span class="line">            --disable-rexec      \</span><br><span class="line">            --disable-rlogin     \</span><br><span class="line">            --disable-rsh        \</span><br><span class="line">            --disable-servers</span><br></pre></td></tr></table></figure><p>编译，检查，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>移动位置：</p><pre><code>mv -v /usr/&#123;,s&#125;bin/ifconfig</code></pre><h2 id="Less-590"><a href="#Less-590" class="headerlink" title="Less-590"></a>Less-590</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf less-590.tar.gz</span><br><span class="line">cd less-590</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --sysconfdir&#x3D;&#x2F;etc</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Perl-5-34-0"><a href="#Perl-5-34-0" class="headerlink" title="Perl-5.34.0"></a>Perl-5.34.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf perl-5.34.0.tar.xz</span><br><span class="line">cp perl-5.34.0-upstream_fixes-1.patch perl-5.34.0</span><br><span class="line">cd perl-5.34.0</span><br><span class="line">patch -Np1 -i perl-5.34.0-upstream_fixes-1.patch</span><br></pre></td></tr></table></figure><p>让<code>perl</code>找到已经安装好的库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export BUILD_ZLIB&#x3D;False</span><br><span class="line">export BUILD_BZIP2&#x3D;0</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sh Configure -des                                         \</span><br><span class="line">             -Dprefix&#x3D;&#x2F;usr                                \</span><br><span class="line">             -Dvendorprefix&#x3D;&#x2F;usr                          \</span><br><span class="line">             -Dprivlib&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;core_perl      \</span><br><span class="line">             -Darchlib&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;core_perl      \</span><br><span class="line">             -Dsitelib&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;site_perl      \</span><br><span class="line">             -Dsitearch&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;site_perl     \</span><br><span class="line">             -Dvendorlib&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;vendor_perl  \</span><br><span class="line">             -Dvendorarch&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;vendor_perl \</span><br><span class="line">             -Dman1dir&#x3D;&#x2F;usr&#x2F;share&#x2F;man&#x2F;man1                \</span><br><span class="line">             -Dman3dir&#x3D;&#x2F;usr&#x2F;share&#x2F;man&#x2F;man3                \</span><br><span class="line">             -Dpager&#x3D;&quot;&#x2F;usr&#x2F;bin&#x2F;less -isR&quot;                 \</span><br><span class="line">             -Duseshrplib                                 \</span><br><span class="line">             -Dusethreads</span><br></pre></td></tr></table></figure><p>编译，测试，安装，清理环境变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make test</span><br><span class="line">make install</span><br><span class="line">unset BUILD_ZLIB BUILD_BZIP2</span><br></pre></td></tr></table></figure><h2 id="XML-Parser-2-46"><a href="#XML-Parser-2-46" class="headerlink" title="XML::Parser-2.46"></a>XML::Parser-2.46</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf XML-Parser-2.46.tar.gz</span><br><span class="line">cd XML-Parser-2.46</span><br><span class="line">perl Makefile.PL</span><br><span class="line">make</span><br><span class="line">make test</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Intltool-0-51-0"><a href="#Intltool-0-51-0" class="headerlink" title="Intltool-0.51.0"></a>Intltool-0.51.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf intltool-0.51.0.tar.gz</span><br><span class="line">cd intltool-0.51.0</span><br></pre></td></tr></table></figure><p>修复由<code>perl-5.22</code>及更新版本导致的警告：</p><pre><code>sed -i &#39;s:\\\$&#123;:\\\$\\&#123;:&#39; intltool-update.in</code></pre><p>构建：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br><span class="line">install -v -Dm644 doc&#x2F;I18N-HOWTO &#x2F;usr&#x2F;share&#x2F;doc&#x2F;intltool-0.51.0&#x2F;I18N-HOWTO</span><br></pre></td></tr></table></figure><h2 id="Autoconf-2-71"><a href="#Autoconf-2-71" class="headerlink" title="Autoconf-2.71"></a>Autoconf-2.71</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf autoconf-2.71.tar.xz</span><br><span class="line">cd autoconf-2.71</span><br><span class="line">make</span><br><span class="line">make check TESTSUITEFLAGS&#x3D;-j5</span><br></pre></td></tr></table></figure><p>这里检查也要开多线程，因为测试时间会很长。</p><h2 id="Automake-1-16-4"><a href="#Automake-1-16-4" class="headerlink" title="Automake-1.16.4"></a>Automake-1.16.4</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf automake-1.16.4.tar.xz</span><br><span class="line">cd automake-1.16.4</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;automake-1.16.4</span><br><span class="line">make</span><br><span class="line">make -j4 check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>此处检查也要开多线程，而且时间要长的多。</p><h2 id="Kmod-29"><a href="#Kmod-29" class="headerlink" title="Kmod-29"></a>Kmod-29</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf kmod-29.tar.xz</span><br><span class="line">cd kmod-29</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr          \</span><br><span class="line">            --sysconfdir&#x3D;&#x2F;etc      \</span><br><span class="line">            --with-xz              \</span><br><span class="line">            --with-zstd            \</span><br><span class="line">            --with-zlib</span><br></pre></td></tr></table></figure><p>编译</p><pre><code>make</code></pre><p>该包的测试因为依赖<code>git</code>，因此跳过。<br>安装该软件包，并创建与 Module-Init-Tools (曾经用于处理 Linux 内核模块的软件包) 兼容的符号链接： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line"></span><br><span class="line">for target in depmod insmod modinfo modprobe rmmod; do</span><br><span class="line">  ln -sfv ..&#x2F;bin&#x2F;kmod &#x2F;usr&#x2F;sbin&#x2F;$target</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">ln -sfv kmod &#x2F;usr&#x2F;bin&#x2F;lsmod</span><br></pre></td></tr></table></figure><h2 id="Elfutils-0-185-中的-Libelf"><a href="#Elfutils-0-185-中的-Libelf" class="headerlink" title="Elfutils-0.185 中的 Libelf"></a>Elfutils-0.185 中的 Libelf</h2><p>libelf 在包<code>elfutils</code>中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf elfutils-0.185.tar.bz2</span><br><span class="line">cd elfutils-0.185</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr                \</span><br><span class="line">            --disable-debuginfod         \</span><br><span class="line">            --enable-libdebuginfod&#x3D;dummy</span><br></pre></td></tr></table></figure><p>编译，检查：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br></pre></td></tr></table></figure><p>我编译时此处会报错<code>FAIL: run-backtrace-native.sh</code>。该错误已于 11 月 14 日提交于 Gentoo 的 bug 处理，但版本是 0.186。不过这里只需要<code>libelf</code>，所以问题不大。    </p><blockquote><p>其实跳过就好了……</p></blockquote><p>只安装<code>libelf</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make -C libelf install</span><br><span class="line">install -vm644 config&#x2F;libelf.pc &#x2F;usr&#x2F;lib&#x2F;pkgconfig</span><br><span class="line">rm &#x2F;usr&#x2F;lib&#x2F;libelf.a</span><br></pre></td></tr></table></figure><h2 id="Libffi-3-4-2"><a href="#Libffi-3-4-2" class="headerlink" title="Libffi-3.4.2"></a>Libffi-3.4.2</h2><p>该包构建时会对特定处理器进行优化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf libffi-3.4.2.tar.gz</span><br><span class="line">cd libffi-3.4.2</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr          \</span><br><span class="line">            --disable-static       \</span><br><span class="line">            --with-gcc-arch&#x3D;native \</span><br><span class="line">            --disable-exec-static-tramp</span><br></pre></td></tr></table></figure><p>编译，检查，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="OpenSSL-1-1-1l"><a href="#OpenSSL-1-1-1l" class="headerlink" title="OpenSSL-1.1.1l"></a>OpenSSL-1.1.1l</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf openssl-1.1.1l.tar.gz</span><br><span class="line">cd openssl-1.1.1l</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;config --prefix&#x3D;&#x2F;usr         \</span><br><span class="line">         --openssldir&#x3D;&#x2F;etc&#x2F;ssl \</span><br><span class="line">         --libdir&#x3D;lib          \</span><br><span class="line">         shared                \</span><br><span class="line">         zlib-dynamic</span><br></pre></td></tr></table></figure><p>编译，测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make test</span><br></pre></td></tr></table></figure><p>已知测试<code>30-test_afalg.t</code>可能会失败，忽略即可。<br>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;&#x2F;INSTALL_LIBS&#x2F;s&#x2F;libcrypto.a libssl.a&#x2F;&#x2F;&#39; Makefile</span><br><span class="line">make MANSUFFIX&#x3D;ssl install</span><br></pre></td></tr></table></figure><p>为安装目录加上版本号：</p><pre><code>mv -v /usr/share/doc/openssl /usr/share/doc/openssl-1.1.1l</code></pre><p>安装额外的文档（可选）：</p><pre><code>cp -vfr doc/* /usr/share/doc/openssl-1.1.1l</code></pre><h2 id="Python-3-9-6"><a href="#Python-3-9-6" class="headerlink" title="Python-3.9.6"></a>Python-3.9.6</h2><p>还是一样的别解压错了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf Python-3.9.6.tar.xz</span><br><span class="line">cd Python-3.9.6</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr       \</span><br><span class="line">            --enable-shared     \</span><br><span class="line">            --with-system-expat \</span><br><span class="line">            --with-system-ffi   \</span><br><span class="line">            --with-ensurepip&#x3D;yes \</span><br><span class="line">            --enable-optimizations</span><br></pre></td></tr></table></figure><p>编译，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>此处不建议测试，但如果一定要，运行<code>make test</code>。<br>安装预先格式化的文档（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">install -v -dm755 &#x2F;usr&#x2F;share&#x2F;doc&#x2F;python-3.9.6&#x2F;html </span><br><span class="line"></span><br><span class="line">tar --strip-components&#x3D;1  \</span><br><span class="line">    --no-same-owner       \</span><br><span class="line">    --no-same-permissions \</span><br><span class="line">    -C &#x2F;usr&#x2F;share&#x2F;doc&#x2F;python-3.9.6&#x2F;html \</span><br><span class="line">    -xvf ..&#x2F;python-3.9.6-docs-html.tar.bz2</span><br></pre></td></tr></table></figure><blockquote><p>没错，就是另外一个 python-doc 包。</p></blockquote><h2 id="Ninja-1-10-2"><a href="#Ninja-1-10-2" class="headerlink" title="Ninja-1.10.2"></a>Ninja-1.10.2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf ninja-1.10.2.tar.gz</span><br><span class="line">cd ninja-1.10.2</span><br></pre></td></tr></table></figure><p>默认情况下，<code>ninjia</code>会尽量使用多进程，且进程数是 CPU 逻辑核心数 +2，以下修改可手动指定线程数：</p><pre><code>export NINJAJOBS=4</code></pre><p>或者使用环境变量<code>NINJAJOBS</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;&#x2F;int Guess&#x2F;a \</span><br><span class="line">  int   j &#x3D; 0;\</span><br><span class="line">  char* jobs &#x3D; getenv( &quot;NINJAJOBS&quot; );\</span><br><span class="line">  if ( jobs !&#x3D; NULL ) j &#x3D; atoi( jobs );\</span><br><span class="line">  if ( j &gt; 0 ) return j;\</span><br><span class="line">&#39; src&#x2F;ninja.cc</span><br></pre></td></tr></table></figure><p>编译，测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 configure.py --bootstrap</span><br><span class="line">.&#x2F;ninja ninja_test</span><br><span class="line">.&#x2F;ninja_test --gtest_filter&#x3D;-SubprocessTest.SetWithLots</span><br></pre></td></tr></table></figure><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">install -vm755 ninja &#x2F;usr&#x2F;bin&#x2F;</span><br><span class="line">install -vDm644 misc&#x2F;bash-completion &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;completions&#x2F;ninja</span><br><span class="line">install -vDm644 misc&#x2F;zsh-completion  &#x2F;usr&#x2F;share&#x2F;zsh&#x2F;site-functions&#x2F;_ninja</span><br></pre></td></tr></table></figure><h2 id="Meson-0-59-1"><a href="#Meson-0-59-1" class="headerlink" title="Meson-0.59.1"></a>Meson-0.59.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf meson-0.59.1.tar.gz</span><br><span class="line">cd meson-0.59.1</span><br><span class="line">python3 setup.py build</span><br><span class="line">python3 setup.py install --root&#x3D;dest</span><br><span class="line">cp -rv dest&#x2F;* &#x2F;</span><br><span class="line">install -vDm644 data&#x2F;shell-completions&#x2F;bash&#x2F;meson &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;completions&#x2F;meson</span><br><span class="line">install -vDm644 data&#x2F;shell-completions&#x2F;zsh&#x2F;_meson &#x2F;usr&#x2F;share&#x2F;zsh&#x2F;site-functions&#x2F;_meson</span><br></pre></td></tr></table></figure><p>这个包没有测试。</p><h2 id="Coreutils-8-32"><a href="#Coreutils-8-32" class="headerlink" title="Coreutils-8.32"></a>Coreutils-8.32</h2><p>需要打补丁。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf coreutils-8.32.tar.xz</span><br><span class="line">cp coreutils-8.32-i18n-1.patch coreutils-8.32</span><br><span class="line">cd coreutils-8.32</span><br><span class="line">patch -Np1 -i coreutils-8.32-i18n-1.patch</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">autoreconf -fiv</span><br><span class="line">FORCE_UNSAFE_CONFIGURE&#x3D;1 .&#x2F;configure \</span><br><span class="line">            --prefix&#x3D;&#x2F;usr            \</span><br><span class="line">            --enable-no-install-program&#x3D;kill,uptime</span><br></pre></td></tr></table></figure><p>编译：</p><pre><code>make</code></pre><p>测试（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">make NON_ROOT_USERNAME&#x3D;tester check-root</span><br><span class="line">echo &quot;dummy:x:102:tester&quot; &gt;&gt; &#x2F;etc&#x2F;group</span><br><span class="line">chown -Rv tester . </span><br><span class="line">su tester -c &quot;PATH&#x3D;$PATH make RUN_EXPENSIVE_TESTS&#x3D;yes check&quot;</span><br><span class="line">sed -i &#39;&#x2F;dummy&#x2F;d&#39; &#x2F;etc&#x2F;group</span><br></pre></td></tr></table></figure><p>安装：</p><pre><code>make install</code></pre><p>将程序移动到 FHS 要求的位置： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv -v &#x2F;usr&#x2F;bin&#x2F;chroot &#x2F;usr&#x2F;sbin</span><br><span class="line">mv -v &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;chroot.1 &#x2F;usr&#x2F;share&#x2F;man&#x2F;man8&#x2F;chroot.8</span><br><span class="line">sed -i &#39;s&#x2F;&quot;1&quot;&#x2F;&quot;8&quot;&#x2F;&#39; &#x2F;usr&#x2F;share&#x2F;man&#x2F;man8&#x2F;chroot.8</span><br></pre></td></tr></table></figure><h2 id="Check-0-15-2"><a href="#Check-0-15-2" class="headerlink" title="Check-0.15.2"></a>Check-0.15.2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf check-0.15.2.tar.gz</span><br><span class="line">cd check-0.15.2</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --disable-static</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;check-0.15.2 install</span><br></pre></td></tr></table></figure><h2 id="Diffutils-3-8"><a href="#Diffutils-3-8" class="headerlink" title="Diffutils-3.8"></a>Diffutils-3.8</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf diffutils-3.8.tar.xz</span><br><span class="line">cd diffutils-3.8</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Gawk-5-1-0"><a href="#Gawk-5-1-0" class="headerlink" title="Gawk-5.1.0"></a>Gawk-5.1.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gawk-5.1.0.tar.xz</span><br><span class="line">cd gawk-5.1.0</span><br></pre></td></tr></table></figure><p>确保构建时不安装某些文件：</p><pre><code>sed -i &#39;s/extras//&#39; Makefile.in</code></pre><p>构建：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装文档（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -v &#x2F;usr&#x2F;share&#x2F;doc&#x2F;gawk-5.1.0</span><br><span class="line">cp    -v doc&#x2F;&#123;awkforai.txt,*.&#123;eps,pdf,jpg&#125;&#125; &#x2F;usr&#x2F;share&#x2F;doc&#x2F;gawk-5.1.0</span><br></pre></td></tr></table></figure><h2 id="Findutils-4-8-0"><a href="#Findutils-4-8-0" class="headerlink" title="Findutils-4.8.0"></a>Findutils-4.8.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf findutils-4.8.0.tar.xz</span><br><span class="line">cd findutils-4.8.0</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --localstatedir&#x3D;&#x2F;var&#x2F;lib&#x2F;locate</span><br><span class="line">make</span><br><span class="line">chown -Rv tester .</span><br><span class="line">su tester -c &quot;PATH&#x3D;$PATH make check&quot;</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Groff-1-22-4"><a href="#Groff-1-22-4" class="headerlink" title="Groff-1.22.4"></a>Groff-1.22.4</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf groff-1.22.4.tar.gz</span><br><span class="line">cd groff-1.22.4</span><br></pre></td></tr></table></figure><p>configure，并将默认纸张改为 A4：</p><pre><code>PAGE=A4 ./configure --prefix=/usr</code></pre><p>编译，安装,<br>此处编译强制<code>-j1</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j1</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="GRUB-2-06"><a href="#GRUB-2-06" class="headerlink" title="GRUB-2.06"></a>GRUB-2.06</h2><p>因为使用 UEFI，因此手册的安装流程不适用。<br>对于 BIOS，这里给出命令（不包括解压）：<br><strong>以下安装命令不支持 UEFI ！</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr          \</span><br><span class="line">            --sysconfdir&#x3D;&#x2F;etc      \</span><br><span class="line">            --disable-efiemu       \</span><br><span class="line">            --disable-werror</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">mv -v &#x2F;etc&#x2F;bash_completion.d&#x2F;grub &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;completions</span><br><span class="line">make install</span><br><span class="line">mv -v &#x2F;etc&#x2F;bash_completion.d&#x2F;grub &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;completions</span><br></pre></td></tr></table></figure><h2 id="Gzip-1-10"><a href="#Gzip-1-10" class="headerlink" title="Gzip-1.10"></a>Gzip-1.10</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gzip-1.10.tar.xz</span><br><span class="line">cd gzip-1.10</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="IPRoute2-5-13-0"><a href="#IPRoute2-5-13-0" class="headerlink" title="IPRoute2-5.13.0"></a>IPRoute2-5.13.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf iproute2-5.13.0.tar.xz</span><br><span class="line">cd iproute2-5.13.0</span><br></pre></td></tr></table></figure><p>不安装<code>arpd</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x2F;ARPD&#x2F;d Makefile</span><br><span class="line">rm -fv man&#x2F;man8&#x2F;arpd.8</span><br></pre></td></tr></table></figure><p>禁用两个模块</p><pre><code>sed -i &#39;s/.m_ipt.o//&#39; tc/Makefile</code></pre><p>编译，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make SBINDIR&#x3D;&#x2F;usr&#x2F;sbin install</span><br></pre></td></tr></table></figure><p>安装文档（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -v              &#x2F;usr&#x2F;share&#x2F;doc&#x2F;iproute2-5.13.0</span><br><span class="line">cp -v COPYING README* &#x2F;usr&#x2F;share&#x2F;doc&#x2F;iproute2-5.13.0</span><br></pre></td></tr></table></figure><h2 id="Kbd-2-4-0"><a href="#Kbd-2-4-0" class="headerlink" title="Kbd-2.4.0"></a>Kbd-2.4.0</h2><p>需要打补丁。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf kbd-2.4.0.tar.xz</span><br><span class="line">cp kbd-2.4.0-backspace-1.patch kbd-2.4.0</span><br><span class="line">cd kbd-2.4.0</span><br><span class="line">patch -Np1 -i kbd-2.4.0-backspace-1.patch</span><br></pre></td></tr></table></figure><p>删除多余的<code>resizecons</code>程序及其 man 页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;&#x2F;RESIZECONS_PROGS&#x3D;&#x2F;s&#x2F;yes&#x2F;no&#x2F;&#39; configure</span><br><span class="line">sed -i &#39;s&#x2F;resizecons.8 &#x2F;&#x2F;&#39; docs&#x2F;man&#x2F;man8&#x2F;Makefile.in</span><br></pre></td></tr></table></figure><p>构建：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --disable-vlock</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装文档（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -v            &#x2F;usr&#x2F;share&#x2F;doc&#x2F;kbd-2.4.0</span><br><span class="line">cp -R -v docs&#x2F;doc&#x2F;* &#x2F;usr&#x2F;share&#x2F;doc&#x2F;kbd-2.4.0</span><br></pre></td></tr></table></figure><h2 id="Libpipeline-1-5-3"><a href="#Libpipeline-1-5-3" class="headerlink" title="Libpipeline-1.5.3"></a>Libpipeline-1.5.3</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf libpipeline-1.5.3.tar.gz</span><br><span class="line">cd libpipeline-1.5.3</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Make-4-3"><a href="#Make-4-3" class="headerlink" title="Make-4.3"></a>Make-4.3</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf make-4.3.tar.gz</span><br><span class="line">cd make-4.3</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>检查是可选的。</p><h2 id="Patch-2-7-6"><a href="#Patch-2-7-6" class="headerlink" title="Patch-2.7.6"></a>Patch-2.7.6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf patch-2.7.6.tar.xz</span><br><span class="line">cd patch-2.7.6</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Tar-1-34"><a href="#Tar-1-34" class="headerlink" title="Tar-1.34"></a>Tar-1.34</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf tar-1.34.tar.xz</span><br><span class="line">cd tar-1.34</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FORCE_UNSAFE_CONFIGURE&#x3D;1  \</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br></pre></td></tr></table></figure><p>编译，检查：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br></pre></td></tr></table></figure><p>测试<code>capabilities: binary store/restore</code>的测试可能会失败或跳过。<br>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">make -C doc install-html docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;tar-1.34</span><br></pre></td></tr></table></figure><h2 id="Texinfo-6-8"><a href="#Texinfo-6-8" class="headerlink" title="Texinfo-6.8"></a>Texinfo-6.8</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf texinfo-6.8.tar.xz</span><br><span class="line">cd texinfo-6.8</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br></pre></td></tr></table></figure><p>再次修复在使用 Glibc-2.34 或更新版本的系统上构建该软件包时出现的问题： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -e &#39;s&#x2F;__attribute_nonnull__&#x2F;__nonnull&#x2F;&#39; \</span><br><span class="line">    -i gnulib&#x2F;lib&#x2F;malloc&#x2F;dynarray-skeleton.c</span><br></pre></td></tr></table></figure><p>编译，检查，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装 Tex 组件（可选）：</p><pre><code>make TEXMF=/usr/share/texmf install-tex</code></pre><p>重更新 Info 文档（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pushd &#x2F;usr&#x2F;share&#x2F;info</span><br><span class="line">  rm -v dir</span><br><span class="line">  for f in *</span><br><span class="line">    do install-info $f dir 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">  done</span><br><span class="line">popd</span><br></pre></td></tr></table></figure><h2 id="Vim-8-2-3337"><a href="#Vim-8-2-3337" class="headerlink" title="Vim-8.2.3337"></a>Vim-8.2.3337</h2><blockquote><p>不会退出 vim 的去 BLFS 找其他编辑器</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf vim-8.2.3337.tar.gz</span><br><span class="line">cd vim-8.2.3337</span><br></pre></td></tr></table></figure><p>修改<code>vimrc</code>配置文件的默认位置为<code>/etc</code>： </p><pre><code>echo &#39;#define SYS_VIMRC_FILE &quot;/etc/vimrc&quot;&#39; &gt;&gt; src/feature.h</code></pre><p>编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -Rv tester .</span><br><span class="line">su tester -c &quot;LANG&#x3D;en_US.UTF-8 make -j1 test&quot; &amp;&gt; vim-test.log</span><br></pre></td></tr></table></figure><p>此处输出被重定向到了文件，要自行 cat。测试成功完成后，日志文件末尾会包含 “ALL DONE”。<br>安装：</p><pre><code>make install</code></pre><p>此处手册将<code>vi</code>改为了指向<code>vim</code>的符号链接。虽然大部分发行版会单独安装<code>vi</code>，但毕竟现在没多少人会用<code>vi</code>吧。<br>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ln -sv vim &#x2F;usr&#x2F;bin&#x2F;vi</span><br><span class="line">for L in  &#x2F;usr&#x2F;share&#x2F;man&#x2F;&#123;,*&#x2F;&#125;man1&#x2F;vim.1; do</span><br><span class="line">    ln -sv vim.1 $(dirname $L)&#x2F;vi.1</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>创建文档的符号链接：</p><pre><code>ln -sv ../vim/vim82/doc /usr/share/doc/vim-8.2.3337</code></pre><h3 id="Vim-配置"><a href="#Vim-配置" class="headerlink" title="Vim 配置"></a>Vim 配置</h3><p>加入<code>/etc/vimrc</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;vimrc &lt;&lt; &quot;EOF&quot;</span><br><span class="line">&quot; Begin &#x2F;etc&#x2F;vimrc</span><br><span class="line"></span><br><span class="line">&quot; Ensure defaults are set before customizing settings, not after</span><br><span class="line">source $VIMRUNTIME&#x2F;defaults.vim</span><br><span class="line">let skip_defaults_vim&#x3D;1 </span><br><span class="line"></span><br><span class="line">set nocompatible</span><br><span class="line">set backspace&#x3D;2</span><br><span class="line">set mouse&#x3D;</span><br><span class="line">syntax on</span><br><span class="line">if (&amp;term &#x3D;&#x3D; &quot;xterm&quot;) || (&amp;term &#x3D;&#x3D; &quot;putty&quot;)</span><br><span class="line">  set background&#x3D;dark</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; End &#x2F;etc&#x2F;vimrc</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>可根据自己喜好修改。虽然全局的这些就够了。     </p><h2 id="MarkupSafe-2-0-1"><a href="#MarkupSafe-2-0-1" class="headerlink" title="MarkupSafe-2.0.1"></a>MarkupSafe-2.0.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf MarkupSafe-2.0.1.tar.gz</span><br><span class="line">cd MarkupSafe-2.0.1</span><br><span class="line">python3 setup.py build</span><br><span class="line">python3 setup.py install --optimize&#x3D;1</span><br></pre></td></tr></table></figure><h2 id="Jinja2-3-0-1"><a href="#Jinja2-3-0-1" class="headerlink" title="Jinja2-3.0.1"></a>Jinja2-3.0.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf Jinja2-3.0.1.tar.gz</span><br><span class="line">cd Jinja2-3.0.1</span><br><span class="line">python3 setup.py install --optimize&#x3D;1</span><br></pre></td></tr></table></figure><h2 id="Systemd-249"><a href="#Systemd-249" class="headerlink" title="Systemd-249"></a>Systemd-249</h2><p>需要打补丁。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf systemd-249.tar.gz</span><br><span class="line">cp systemd-249-upstream_fixes-1.patch systemd-249</span><br><span class="line">cd systemd-249</span><br><span class="line">patch -Np1 -i systemd-249-upstream_fixes-1.patch</span><br></pre></td></tr></table></figure><p>从默认的 udev 规则中删除不必要的组<code>render</code>和<code>sgx</code>： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i -e &#39;s&#x2F;GROUP&#x3D;&quot;render&quot;&#x2F;GROUP&#x3D;&quot;video&quot;&#x2F;&#39; \</span><br><span class="line">        -e &#39;s&#x2F;GROUP&#x3D;&quot;sgx&quot;, &#x2F;&#x2F;&#39; rules.d&#x2F;50-udev-default.rules.in</span><br></pre></td></tr></table></figure><p>准备编译，包括创建<code>build</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p build</span><br><span class="line">cd       build</span><br><span class="line"></span><br><span class="line">LANG&#x3D;en_US.UTF-8                    \</span><br><span class="line">meson --prefix&#x3D;&#x2F;usr                 \</span><br><span class="line">      --sysconfdir&#x3D;&#x2F;etc             \</span><br><span class="line">      --localstatedir&#x3D;&#x2F;var          \</span><br><span class="line">      --buildtype&#x3D;release           \</span><br><span class="line">      -Dblkid&#x3D;true                  \</span><br><span class="line">      -Ddefault-dnssec&#x3D;no           \</span><br><span class="line">      -Dfirstboot&#x3D;false             \</span><br><span class="line">      -Dinstall-tests&#x3D;false         \</span><br><span class="line">      -Dldconfig&#x3D;false              \</span><br><span class="line">      -Dsysusers&#x3D;false              \</span><br><span class="line">      -Db_lto&#x3D;false                 \</span><br><span class="line">      -Drpmmacrosdir&#x3D;no             \</span><br><span class="line">      -Dhomed&#x3D;false                 \</span><br><span class="line">      -Duserdb&#x3D;false                \</span><br><span class="line">      -Dman&#x3D;false                   \</span><br><span class="line">      -Dmode&#x3D;release                \</span><br><span class="line">      -Ddocdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;systemd-249 \</span><br><span class="line">      ..</span><br></pre></td></tr></table></figure><p>编译，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LANG&#x3D;en_US.UTF-8 ninja</span><br><span class="line">LANG&#x3D;en_US.UTF-8 ninja install</span><br></pre></td></tr></table></figure><p>安装 man 页面： </p><pre><code>tar -xf ../../systemd-man-pages-249.tar.xz --strip-components=1 -C /usr/share/man</code></pre><p>删除不必要的目录： </p><pre><code>rm -rf /usr/lib/pam.d</code></pre><p>初始化 machine id：</p><pre><code>systemd-machine-id-setup</code></pre><p>设定启动目标单元的基本结构： </p><pre><code>systemctl preset-all</code></pre><p>禁用一个服务：</p><pre><code>systemctl disable systemd-time-wait-sync.service</code></pre><h2 id="D-Bus-1-12-20"><a href="#D-Bus-1-12-20" class="headerlink" title="D-Bus-1.12.20"></a>D-Bus-1.12.20</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf dbus-1.12.20.tar.gz</span><br><span class="line">cd dbus-1.12.20</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr                        \</span><br><span class="line">            --sysconfdir&#x3D;&#x2F;etc                    \</span><br><span class="line">            --localstatedir&#x3D;&#x2F;var                 \</span><br><span class="line">            --disable-static                     \</span><br><span class="line">            --disable-doxygen-docs               \</span><br><span class="line">            --disable-xml-docs                   \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;dbus-1.12.20 \</span><br><span class="line">            --with-console-auth-dir&#x3D;&#x2F;run&#x2F;console \</span><br><span class="line">            --with-system-pid-file&#x3D;&#x2F;run&#x2F;dbus&#x2F;pid \</span><br><span class="line">            --with-system-socket&#x3D;&#x2F;run&#x2F;dbus&#x2F;system_bus_socket</span><br></pre></td></tr></table></figure><p>编译，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>该包有测试，但需要一些不安装的依赖。<br>创建一个符号链接：</p><pre><code>ln -sfv /etc/machine-id /var/lib/dbus</code></pre><h2 id="Man-DB-2-9-4"><a href="#Man-DB-2-9-4" class="headerlink" title="Man-DB-2.9.4"></a>Man-DB-2.9.4</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf man-db-2.9.4.tar.xz</span><br><span class="line">cd man-db-2.9.4</span><br></pre></td></tr></table></figure><p>cofigure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr                        \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;man-db-2.9.4 \</span><br><span class="line">            --sysconfdir&#x3D;&#x2F;etc                    \</span><br><span class="line">            --disable-setuid                     \</span><br><span class="line">            --enable-cache-owner&#x3D;bin             \</span><br><span class="line">            --with-browser&#x3D;&#x2F;usr&#x2F;bin&#x2F;lynx         \</span><br><span class="line">            --with-vgrind&#x3D;&#x2F;usr&#x2F;bin&#x2F;vgrind        \</span><br><span class="line">            --with-grap&#x3D;&#x2F;usr&#x2F;bin&#x2F;grap</span><br></pre></td></tr></table></figure><p>编译，检查，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Procps-ng-3-3-17"><a href="#Procps-ng-3-3-17" class="headerlink" title="Procps-ng-3.3.17"></a>Procps-ng-3.3.17</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf procps-ng-3.3.17.tar.xz</span><br><span class="line">cd procps-3.3.17</span><br></pre></td></tr></table></figure><p>这里解压出来的目录是<code>procps-3.3.17</code>，不是<code>procps-ng-3.3.17</code>。<br>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr                            \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;procps-ng-3.3.17 \</span><br><span class="line">            --disable-static                         \</span><br><span class="line">            --disable-kill                           \</span><br><span class="line">            --with-systemd</span><br></pre></td></tr></table></figure><p>编译，测试，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>检查是可选的，且已知五项与 pkill 相关的测试可能失败。</p><h2 id="Util-linux-2-37-2"><a href="#Util-linux-2-37-2" class="headerlink" title="Util-linux-2.37.2"></a>Util-linux-2.37.2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf util-linux-2.37.2.tar.xz</span><br><span class="line">cd util-linux-2.37.2</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure ADJTIME_PATH&#x3D;&#x2F;var&#x2F;lib&#x2F;hwclock&#x2F;adjtime   \</span><br><span class="line">            --libdir&#x3D;&#x2F;usr&#x2F;lib    \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;util-linux-2.37.2 \</span><br><span class="line">            --disable-chfn-chsh  \</span><br><span class="line">            --disable-login      \</span><br><span class="line">            --disable-nologin    \</span><br><span class="line">            --disable-su         \</span><br><span class="line">            --disable-setpriv    \</span><br><span class="line">            --disable-runuser    \</span><br><span class="line">            --disable-pylibmount \</span><br><span class="line">            --disable-static     \</span><br><span class="line">            --without-python     \</span><br><span class="line">            runstatedir&#x3D;&#x2F;run</span><br></pre></td></tr></table></figure><p>编译：</p><pre><code>make</code></pre><p>测试（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm tests&#x2F;ts&#x2F;lsns&#x2F;ioctl_ns</span><br><span class="line">chown -Rv tester .</span><br><span class="line">su tester -c &quot;make -k check&quot;</span><br></pre></td></tr></table></figure><p>安装：</p><pre><code>make install</code></pre><h2 id="E2fsprogs-1-46-4"><a href="#E2fsprogs-1-46-4" class="headerlink" title="E2fsprogs-1.46.4"></a>E2fsprogs-1.46.4</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf e2fsprogs-1.46.4.tar.gz</span><br><span class="line">cd e2fsprogs-1.46.4</span><br></pre></td></tr></table></figure><p>创建<code>build</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -v build</span><br><span class="line">cd       build</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;configure --prefix&#x3D;&#x2F;usr           \</span><br><span class="line">             --sysconfdir&#x3D;&#x2F;etc       \</span><br><span class="line">             --enable-elf-shlibs     \</span><br><span class="line">             --disable-libblkid      \</span><br><span class="line">             --disable-libuuid       \</span><br><span class="line">             --disable-uuidd         \</span><br><span class="line">             --disable-fsck</span><br></pre></td></tr></table></figure><p>编译，测试，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>已知测试<code>u_direct_io</code>可能在一些系统上失败。<br>删除无用的静态库： </p><pre><code>rm -fv /usr/lib/&#123;libcom_err,libe2p,libext2fs,libss&#125;.a</code></pre><p>更新系统<code>dir</code>文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gunzip -v &#x2F;usr&#x2F;share&#x2F;info&#x2F;libext2fs.info.gz</span><br><span class="line">install-info --dir-file&#x3D;&#x2F;usr&#x2F;share&#x2F;info&#x2F;dir &#x2F;usr&#x2F;share&#x2F;info&#x2F;libext2fs.info</span><br></pre></td></tr></table></figure><p>安装额外文档（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">makeinfo -o      doc&#x2F;com_err.info ..&#x2F;lib&#x2F;et&#x2F;com_err.texinfo</span><br><span class="line">install -v -m644 doc&#x2F;com_err.info &#x2F;usr&#x2F;share&#x2F;info</span><br><span class="line">install-info --dir-file&#x3D;&#x2F;usr&#x2F;share&#x2F;info&#x2F;dir &#x2F;usr&#x2F;share&#x2F;info&#x2F;com_err.info</span><br></pre></td></tr></table></figure><h2 id="efivar-37"><a href="#efivar-37" class="headerlink" title="efivar-37"></a>efivar-37</h2><p>这是 efibootmanager 的一个依赖。<br>下载连接：<a href="https://github.com/rhboot/efivar/releases/download/37/efivar-37.tar.bz2">https://github.com/rhboot/efivar/releases/download/37/efivar-37.tar.bz2</a><br>需要补丁，连接：<a href="https://www.linuxfromscratch.org/patches/blfs/11.0/efivar-37-gcc_9-1.patch">https://www.linuxfromscratch.org/patches/blfs/11.0/efivar-37-gcc_9-1.patch</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf efivar-37.tar.bz2</span><br><span class="line">cp efivar-37-gcc_9-1.patch efivar-37</span><br><span class="line">cd efivar-37</span><br><span class="line">patch -Np1 -i efivar-37-gcc_9-1.patch</span><br><span class="line">make install LIBDIR&#x3D;&#x2F;usr&#x2F;lib</span><br></pre></td></tr></table></figure><h2 id="Popt-1-18"><a href="#Popt-1-18" class="headerlink" title="Popt-1.18"></a>Popt-1.18</h2><p>这是 efibootmanager 的一个依赖。<br>下载连接：<a href="http://ftp.rpm.org/popt/releases/popt-1.x/popt-1.18.tar.gz">http://ftp.rpm.org/popt/releases/popt-1.x/popt-1.18.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf popt-1.18.tar.gz</span><br><span class="line">cd popt-1.18</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --disable-static</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="efibootmgr-17"><a href="#efibootmgr-17" class="headerlink" title="efibootmgr-17"></a>efibootmgr-17</h2><p>这是 GRUB 用于支持 UEFI 的一个依赖。需要单独从 BLFS 上下载。<br>下载连接：<a href="https://github.com/rhboot/efibootmgr/archive/17/efibootmgr-17.tar.gz">https://github.com/rhboot/efibootmgr/archive/17/efibootmgr-17.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf efibootmgr-17.tar.gz</span><br><span class="line">cd efibootmgr-17</span><br></pre></td></tr></table></figure><p>修复一个编译时会遇到的错误：</p><pre><code>sed -e &#39;/extern int efi_set_verbose/d&#39; -i src/efibootmgr.c</code></pre><p>编译，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make EFIDIR&#x3D;&#x2F;boot&#x2F;efi&#x2F;EFI EFI_LOADER&#x3D;grubx64.efi</span><br><span class="line">make install EFIDIR&#x3D;&#x2F;boot&#x2F;efi&#x2F;EFI</span><br></pre></td></tr></table></figure><h2 id="FreeType-2-11-0"><a href="#FreeType-2-11-0" class="headerlink" title="FreeType-2.11.0"></a>FreeType-2.11.0</h2><p>这也是一个 GRUB 的依赖……<br>而且虽然在 BLFS 里写着不是必须，但用 BLFS 的命令 configure 时会报错需要该字体。<br>下载连接：<a href="https://downloads.sourceforge.net/freetype/freetype-2.11.0.tar.xz">https://downloads.sourceforge.net/freetype/freetype-2.11.0.tar.xz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf freetype-2.11.0.tar.xz</span><br><span class="line">cd freetype-2.11.0</span><br></pre></td></tr></table></figure><p>构建：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sed -ri &quot;s:.*(AUX_MODULES.*valid):\1:&quot; modules.cfg &amp;&amp;</span><br><span class="line"></span><br><span class="line">sed -r &quot;s:.*(#.*SUBPIXEL_RENDERING) .*:\1:&quot; \</span><br><span class="line">    -i include&#x2F;freetype&#x2F;config&#x2F;ftoption.h  &amp;&amp;</span><br><span class="line"></span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --enable-freetype-config --disable-static &amp;&amp;</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>安装：</p><pre><code>make install</code></pre><h2 id="GRUB-2-06-带-UEFI-支持"><a href="#GRUB-2-06-带-UEFI-支持" class="headerlink" title="GRUB-2.06 带 UEFI 支持"></a>GRUB-2.06 带 UEFI 支持</h2><p>这里需要一个字体文件。<br>下载连接：<a href="https://unifoundry.com/pub/unifont/unifont-13.0.06/font-builds/unifont-13.0.06.pcf.gz">https://unifoundry.com/pub/unifont/unifont-13.0.06/font-builds/unifont-13.0.06.pcf.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf grub-2.06.tar.xz</span><br><span class="line">cd grub-2.06</span><br></pre></td></tr></table></figure><p>安装字体：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;unifont &amp;&amp;</span><br><span class="line">gunzip -c ..&#x2F;unifont-13.0.06.pcf.gz &gt; &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;unifont&#x2F;unifont.pcf</span><br></pre></td></tr></table></figure><p>取消编译用环境变量（虽然没设置）：</p><pre><code>unset &#123;C,CPP,CXX,LD&#125;FLAGS</code></pre><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr        \</span><br><span class="line">            --sysconfdir&#x3D;&#x2F;etc    \</span><br><span class="line">            --disable-efiemu     \</span><br><span class="line">            --enable-grub-mkfont \</span><br><span class="line">            --with-platform&#x3D;efi  \</span><br><span class="line">            --disable-werror</span><br></pre></td></tr></table></figure><p>编译：</p><pre><code>make</code></pre><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">mv -v &#x2F;etc&#x2F;bash_completion.d&#x2F;grub &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;completions</span><br></pre></td></tr></table></figure><h1 id="移除调试符号（可选）"><a href="#移除调试符号（可选）" class="headerlink" title="移除调试符号（可选）"></a>移除调试符号（可选）</h1><blockquote><p>毕竟大部分人都不会调试这些软件包吧。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">save_usrlib&#x3D;&quot;$(cd &#x2F;usr&#x2F;lib; ls ld-linux*)</span><br><span class="line">             libc.so.6</span><br><span class="line">             libthread_db.so.1</span><br><span class="line">             libquadmath.so.0.0.0 </span><br><span class="line">             libstdc++.so.6.0.29</span><br><span class="line">             libitm.so.1.0.0 </span><br><span class="line">             libatomic.so.1.2.0&quot; </span><br><span class="line"></span><br><span class="line">cd &#x2F;usr&#x2F;lib</span><br><span class="line"></span><br><span class="line">for LIB in $save_usrlib; do</span><br><span class="line">    objcopy --only-keep-debug $LIB $LIB.dbg</span><br><span class="line">    cp $LIB &#x2F;tmp&#x2F;$LIB</span><br><span class="line">    strip --strip-unneeded &#x2F;tmp&#x2F;$LIB</span><br><span class="line">    objcopy --add-gnu-debuglink&#x3D;$LIB.dbg &#x2F;tmp&#x2F;$LIB</span><br><span class="line">    install -vm755 &#x2F;tmp&#x2F;$LIB &#x2F;usr&#x2F;lib</span><br><span class="line">    rm &#x2F;tmp&#x2F;$LIB</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">online_usrbin&#x3D;&quot;bash find strip&quot;</span><br><span class="line">online_usrlib&#x3D;&quot;libbfd-2.37.so</span><br><span class="line">               libhistory.so.8.1</span><br><span class="line">               libncursesw.so.6.2</span><br><span class="line">               libm.so.6</span><br><span class="line">               libreadline.so.8.1</span><br><span class="line">               libz.so.1.2.11</span><br><span class="line">               $(cd &#x2F;usr&#x2F;lib; find libnss*.so* -type f)&quot;</span><br><span class="line"></span><br><span class="line">for BIN in $online_usrbin; do</span><br><span class="line">    cp &#x2F;usr&#x2F;bin&#x2F;$BIN &#x2F;tmp&#x2F;$BIN</span><br><span class="line">    strip --strip-unneeded &#x2F;tmp&#x2F;$BIN</span><br><span class="line">    install -vm755 &#x2F;tmp&#x2F;$BIN &#x2F;usr&#x2F;bin</span><br><span class="line">    rm &#x2F;tmp&#x2F;$BIN</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for LIB in $online_usrlib; do</span><br><span class="line">    cp &#x2F;usr&#x2F;lib&#x2F;$LIB &#x2F;tmp&#x2F;$LIB</span><br><span class="line">    strip --strip-unneeded &#x2F;tmp&#x2F;$LIB</span><br><span class="line">    install -vm755 &#x2F;tmp&#x2F;$LIB &#x2F;usr&#x2F;lib</span><br><span class="line">    rm &#x2F;tmp&#x2F;$LIB</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for i in $(find &#x2F;usr&#x2F;lib -type f -name \*.so* ! -name \*dbg) \</span><br><span class="line">         $(find &#x2F;usr&#x2F;lib -type f -name \*.a)                 \</span><br><span class="line">         $(find &#x2F;usr&#x2F;&#123;bin,sbin,libexec&#125; -type f); do</span><br><span class="line">    case &quot;$online_usrbin $online_usrlib $save_usrlib&quot; in</span><br><span class="line">        *$(basename $i)* ) </span><br><span class="line">            ;;</span><br><span class="line">        * ) strip --strip-unneeded $i </span><br><span class="line">            ;;</span><br><span class="line">    esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">unset BIN LIB save_usrlib online_usrbin online_usrlib</span><br></pre></td></tr></table></figure><p>该命令会报错一堆文件格式无法识别，可以安全忽略。</p><h1 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h1><p>现在所有包都安装完成了。是时候清理了。</p><pre><code>rm -rf /tmp/*</code></pre><p>然后登出，重新 chroot：</p><pre><code>logout</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chroot &quot;$LFS&quot; &#x2F;usr&#x2F;bin&#x2F;env -i          \</span><br><span class="line">    HOME&#x3D;&#x2F;root TERM&#x3D;&quot;$TERM&quot;            \</span><br><span class="line">    PS1&#x3D;&#39;(lfs chroot) \u:\w\$ &#39;        \</span><br><span class="line">    PATH&#x3D;&#x2F;usr&#x2F;bin:&#x2F;usr&#x2F;sbin            \</span><br><span class="line">    &#x2F;bin&#x2F;bash --login</span><br></pre></td></tr></table></figure><p>这次 chroot 参数有点变化，之后 chroot 都需要执行现在改过的命令。<br>接着清理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find &#x2F;usr&#x2F;lib &#x2F;usr&#x2F;libexec -name \*.la -delete</span><br><span class="line">find &#x2F;usr -depth -name $(uname -m)-lfs-linux-gnu\* | xargs rm -rf</span><br></pre></td></tr></table></figure><p>最后，移除用户<code>tester</code>：</p><pre><code>userdel -r tester</code></pre><p>至此，系统构建部分正式结束。</p>]]></content>
    
    
    <summary type="html">现在继续构建剩下的软件包。

构建软件包
Inetutils-2.1
1
2


tar -xvf inetutils-2.1.tar.xz
cd inetutils-2.1


configure

1
2
3
4
5
6
7
8
9
10


./configure --prefix=/usr        \
            --bindir=/usr/bin    \
            --localstatedir=/var \
            --disable-logger     \
            --disable-whois      \
 </summary>
    
    
    
    <category term="LFS" scheme="https://williamgong.github.io/categories/LFS/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="LFS" scheme="https://williamgong.github.io/tags/LFS/"/>
    
  </entry>
  
  <entry>
    <title>LFS 搭建 4 正式构建 (1)</title>
    <link href="https://williamgong.github.io/2021/11/30/lfs%E6%90%AD%E5%BB%BA4/"/>
    <id>https://williamgong.github.io/2021/11/30/lfs%E6%90%AD%E5%BB%BA4/</id>
    <published>2021-11-30T22:30:05.000Z</published>
    <updated>2021-12-04T13:52:12.466Z</updated>
    
    <content type="html"><![CDATA[<p>在临时系统构建完成后，从现在开始，就进入正式构建阶段。<br>根据 LFS 手册，绝大多数包在编译时都不使用静态库，且一般都会在 configure 中直接关闭，不过 gcc 之类需要的除外。<br>在现阶段我并没有移植包管理器的打算，也许以后有时间我会出一篇将 Portage 移植到 LFS 的教程吧。 :D</p><h1 id="进入-Chroot-环境"><a href="#进入-Chroot-环境" class="headerlink" title="进入 Chroot 环境"></a>进入 Chroot 环境</h1><p>每次登录，都要检查<code>$LFS</code>：</p><pre><code>echo $LFS</code></pre><p>首先先挂载<code>/dev</code>和内核虚拟文件系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mount -v --bind &#x2F;dev $LFS&#x2F;dev</span><br><span class="line">mount -v --bind &#x2F;dev&#x2F;pts $LFS&#x2F;dev&#x2F;pts</span><br><span class="line">mount -vt proc proc $LFS&#x2F;proc</span><br><span class="line">mount -vt sysfs sysfs $LFS&#x2F;sys</span><br><span class="line">mount -vt tmpfs tmpfs $LFS&#x2F;run</span><br></pre></td></tr></table></figure><p>现在开始 chroot</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chroot &quot;$LFS&quot; &#x2F;usr&#x2F;bin&#x2F;env -i   \</span><br><span class="line">    HOME&#x3D;&#x2F;root                  \</span><br><span class="line">    TERM&#x3D;&quot;$TERM&quot;                \</span><br><span class="line">    PS1&#x3D;&#39;(lfs chroot) \u:\w\$ &#39; \</span><br><span class="line">    PATH&#x3D;&#x2F;usr&#x2F;bin:&#x2F;usr&#x2F;sbin \</span><br><span class="line">    &#x2F;bin&#x2F;bash --login +h</span><br></pre></td></tr></table></figure><h1 id="构建软件包"><a href="#构建软件包" class="headerlink" title="构建软件包"></a>构建软件包</h1><h2 id="Man-pages-5-13"><a href="#Man-pages-5-13" class="headerlink" title="Man-pages-5.13"></a>Man-pages-5.13</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf man-pages-5.13.tar.xz</span><br><span class="line">cd man-pages-5.13</span><br><span class="line">make prefix&#x3D;&#x2F;usr install</span><br></pre></td></tr></table></figure><h2 id="Iana-Etc-20210611"><a href="#Iana-Etc-20210611" class="headerlink" title="Iana-Etc-20210611"></a>Iana-Etc-20210611</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf iana-etc-20210611.tar.gz</span><br><span class="line">cd iana-etc-20210611</span><br></pre></td></tr></table></figure><p>这个包只需要将文件复制到<code>/etc</code>下即可。</p><pre><code>cp services protocols /etc</code></pre><h2 id="Glibc-2-34"><a href="#Glibc-2-34" class="headerlink" title="Glibc-2.34"></a>Glibc-2.34</h2><p>这应该是最后一遍了吧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf glibc-2.34.tar.xz</span><br><span class="line">cp glibc-2.34-fhs-1.patch glibc-2.34&#x2F;</span><br><span class="line">cd glibc-2.34</span><br></pre></td></tr></table></figure><p>此处需要修复一个安全问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -e &#39;&#x2F;NOTIFY_REMOVED)&#x2F;s&#x2F;)&#x2F; \&amp;\&amp; data.attr !&#x3D; NULL)&#x2F;&#39; \</span><br><span class="line">    -i sysdeps&#x2F;unix&#x2F;sysv&#x2F;linux&#x2F;mq_notify.c</span><br></pre></td></tr></table></figure><p>打补丁</p><pre><code>patch -Np1 -i glibc-2.34-fhs-1.patch</code></pre><blockquote><p>嗯，手册现在才打 patch，可能是之前编译的都是临时用的所以不用打吧。XD</p></blockquote><p>建立<code>/build</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>确保将<code>ldconfig</code>和<code>sln</code>工具安装到<code>/usr/sbin</code>目录中：</p><pre><code>echo &quot;rootsbindir=/usr/sbin&quot; &gt; configparms</code></pre><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;configure --prefix&#x3D;&#x2F;usr                            \</span><br><span class="line">             --disable-werror                         \</span><br><span class="line">             --enable-kernel&#x3D;3.2                      \</span><br><span class="line">             --enable-stack-protector&#x3D;strong          \</span><br><span class="line">             --with-headers&#x3D;&#x2F;usr&#x2F;include              \</span><br><span class="line">             libc_cv_slibdir&#x3D;&#x2F;usr&#x2F;lib</span><br></pre></td></tr></table></figure><p>编译：</p><pre><code>make</code></pre><p>检查：</p><pre><code>make check</code></pre><p>glibc 这么大的包，一共 4488 项测试，有几个错误很正常，如果只有几个错误的话忽略就行。此外手册已知会出现两个错误，分别是：</p><ul><li><code>io/tst-lchmod</code>在 chroot 里会失败</li><li><code>misc/tst-ttyname</code>在 chroot 里失败</li></ul><blockquote><p>我就报了这两个错</p></blockquote><p>安装时，可能会报错<code>/etc/ld.so.conf</code>找不到，此错误无害，建立个空的就行</p><pre><code>touch /etc/ld.so.conf</code></pre><p>还要修正 Makefile 跳过一个检查</p><pre><code>sed &#39;/test-installation/s@$(PERL)@echo not running@&#39; -i ../Makefile</code></pre><p>安装</p><pre><code>make install</code></pre><p>改正<code>ldd</code>脚本中硬编码的可执行文件加载器路径</p><pre><code>sed &#39;/RTLDLIST=/s@/usr@@g&#39; -i /usr/bin/ldd</code></pre><p>安装<code>nscd</code>的配置文件和运行时目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -v ..&#x2F;nscd&#x2F;nscd.conf &#x2F;etc&#x2F;nscd.conf</span><br><span class="line">mkdir -pv &#x2F;var&#x2F;cache&#x2F;nscd</span><br></pre></td></tr></table></figure><p>安装<code>nscd</code>对 systemd 的支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">install -v -Dm644 ..&#x2F;nscd&#x2F;nscd.tmpfiles &#x2F;usr&#x2F;lib&#x2F;tmpfiles.d&#x2F;nscd.conf</span><br><span class="line">install -v -Dm644 ..&#x2F;nscd&#x2F;nscd.service &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nscd.service</span><br></pre></td></tr></table></figure><p>现在安装 locale。<br>手册提供的只能用于满足测试，简体中文是没有的。因此下面的命令我加了<code>zh_CN-UTF-8</code>。</p><blockquote><p>所以此处会使用安装单个 locale 的指令。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv &#x2F;usr&#x2F;lib&#x2F;locale</span><br><span class="line">localedef -i POSIX -f UTF-8 C.UTF-8 2&gt; &#x2F;dev&#x2F;null || true</span><br><span class="line">localedef -i cs_CZ -f UTF-8 cs_CZ.UTF-8</span><br><span class="line">localedef -i de_DE -f ISO-8859-1 de_DE</span><br><span class="line">localedef -i de_DE@euro -f ISO-8859-15 de_DE@euro</span><br><span class="line">localedef -i de_DE -f UTF-8 de_DE.UTF-8</span><br><span class="line">localedef -i el_GR -f ISO-8859-7 el_GR</span><br><span class="line">localedef -i en_GB -f ISO-8859-1 en_GB</span><br><span class="line">localedef -i en_GB -f UTF-8 en_GB.UTF-8</span><br><span class="line">localedef -i en_HK -f ISO-8859-1 en_HK</span><br><span class="line">localedef -i en_PH -f ISO-8859-1 en_PH</span><br><span class="line">localedef -i en_US -f ISO-8859-1 en_US</span><br><span class="line">localedef -i en_US -f UTF-8 en_US.UTF-8</span><br><span class="line">localedef -i es_ES -f ISO-8859-15 es_ES@euro</span><br><span class="line">localedef -i es_MX -f ISO-8859-1 es_MX</span><br><span class="line">localedef -i fa_IR -f UTF-8 fa_IR</span><br><span class="line">localedef -i fr_FR -f ISO-8859-1 fr_FR</span><br><span class="line">localedef -i fr_FR@euro -f ISO-8859-15 fr_FR@euro</span><br><span class="line">localedef -i fr_FR -f UTF-8 fr_FR.UTF-8</span><br><span class="line">localedef -i is_IS -f ISO-8859-1 is_IS</span><br><span class="line">localedef -i is_IS -f UTF-8 is_IS.UTF-8</span><br><span class="line">localedef -i it_IT -f ISO-8859-1 it_IT</span><br><span class="line">localedef -i it_IT -f ISO-8859-15 it_IT@euro</span><br><span class="line">localedef -i it_IT -f UTF-8 it_IT.UTF-8</span><br><span class="line">localedef -i ja_JP -f EUC-JP ja_JP</span><br><span class="line">localedef -i ja_JP -f SHIFT_JIS ja_JP.SIJS 2&gt; &#x2F;dev&#x2F;null || true</span><br><span class="line">localedef -i ja_JP -f UTF-8 ja_JP.UTF-8</span><br><span class="line">localedef -i nl_NL@euro -f ISO-8859-15 nl_NL@euro</span><br><span class="line">localedef -i ru_RU -f KOI8-R ru_RU.KOI8-R</span><br><span class="line">localedef -i ru_RU -f UTF-8 ru_RU.UTF-8</span><br><span class="line">localedef -i se_NO -f UTF-8 se_NO.UTF-8</span><br><span class="line">localedef -i ta_IN -f UTF-8 ta_IN.UTF-8</span><br><span class="line">localedef -i tr_TR -f UTF-8 tr_TR.UTF-8</span><br><span class="line">localedef -i zh_CN -f GB18030 zh_CN.GB18030</span><br><span class="line">localedef -i zh_HK -f BIG5-HKSCS zh_HK.BIG5-HKSCS</span><br><span class="line">localedef -i zh_TW -f UTF-8 zh_TW.UTF-8</span><br><span class="line">localedef -i zh_CN -f UTF-8 zh_CN.UTF-8</span><br></pre></td></tr></table></figure><p>当然也可以全部安装，不过需要的时间就很长了：</p><pre><code>make localedata/install-locales</code></pre><h3 id="配置-Glibc"><a href="#配置-Glibc" class="headerlink" title="配置 Glibc"></a>配置 Glibc</h3><p>创建<code>/etc/nsswitch.conf</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;nsswitch.conf &lt;&lt; &quot;EOF&quot;</span><br><span class="line"># Begin &#x2F;etc&#x2F;nsswitch.conf</span><br><span class="line"></span><br><span class="line">passwd: files</span><br><span class="line">group: files</span><br><span class="line">shadow: files</span><br><span class="line"></span><br><span class="line">hosts: files dns</span><br><span class="line">networks: files</span><br><span class="line"></span><br><span class="line">protocols: files</span><br><span class="line">services: files</span><br><span class="line">ethers: files</span><br><span class="line">rpc: files</span><br><span class="line"></span><br><span class="line"># End &#x2F;etc&#x2F;nsswitch.conf</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>安装时区数据：<br><strong>注意：此时仍在 glibc 的<code>build</code>目录下，如果在其他目录要根据路径改下列命令。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tar -xf ..&#x2F;..&#x2F;tzdata2021a.tar.gz</span><br><span class="line"></span><br><span class="line">ZONEINFO&#x3D;&#x2F;usr&#x2F;share&#x2F;zoneinfo</span><br><span class="line">mkdir -pv $ZONEINFO&#x2F;&#123;posix,right&#125;</span><br><span class="line"></span><br><span class="line">for tz in etcetera southamerica northamerica europe africa antarctica  \</span><br><span class="line">          asia australasia backward; do</span><br><span class="line">    zic -L &#x2F;dev&#x2F;null   -d $ZONEINFO       $&#123;tz&#125;</span><br><span class="line">    zic -L &#x2F;dev&#x2F;null   -d $ZONEINFO&#x2F;posix $&#123;tz&#125;</span><br><span class="line">    zic -L leapseconds -d $ZONEINFO&#x2F;right $&#123;tz&#125;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">cp -v zone.tab zone1970.tab iso3166.tab $ZONEINFO</span><br><span class="line">zic -d $ZONEINFO -p America&#x2F;New_York</span><br><span class="line">unset ZONEINF</span><br></pre></td></tr></table></figure><p>此处顺手配置时区：</p><pre><code>ln -sfv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></pre><p>现在还需要配置动态加载器。<br>创建一个新的<code>/etc/ld.so.conf</code>： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;ld.so.conf &lt;&lt; &quot;EOF&quot;</span><br><span class="line"># Begin &#x2F;etc&#x2F;ld.so.conf</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;lib</span><br><span class="line">&#x2F;opt&#x2F;lib</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>不过下面的命令可能会更优雅：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; &#x2F;etc&#x2F;ld.so.conf &lt;&lt; &quot;EOF&quot;</span><br><span class="line"># Add an include directory</span><br><span class="line">include &#x2F;etc&#x2F;ld.so.conf.d&#x2F;*.conf</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line">mkdir -pv &#x2F;etc&#x2F;ld.so.conf.d</span><br></pre></td></tr></table></figure><p>以上两个命令可以全部使用，因为第二个命令不会擦除原<code>ld.conf.d</code>的内容</p><h2 id="Zlib-1-2-11"><a href="#Zlib-1-2-11" class="headerlink" title="Zlib-1.2.11"></a>Zlib-1.2.11</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf zlib-1.2.11.tar.xz</span><br><span class="line">cd zlib-1.2.11</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>此处需要删除一些无用的静态库</p><pre><code>rm -fv /usr/lib/libz.a</code></pre><h2 id="Bzip2-1-0-8"><a href="#Bzip2-1-0-8" class="headerlink" title="Bzip2-1.0.8"></a>Bzip2-1.0.8</h2><p>这里需要加补丁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf bzip2-1.0.8.tar.gz</span><br><span class="line">cp bzip2-1.0.8-install_docs-1.patch bzip2-1.0.8</span><br><span class="line">cd bzip2-1.0.8</span><br><span class="line">patch -Np1 -i bzip2-1.0.8-install_docs-1.patch</span><br></pre></td></tr></table></figure><p>需要修改 Makefile 保证安装的符号链接是相对的。</p><pre><code>sed -i &#39;s@\(ln -s -f \)$(PREFIX)/bin/@\1@&#39; Makefile</code></pre><p>确保<code>man</code>被安装到正确位置：</p><pre><code>sed -i &quot;s@(PREFIX)/man@(PREFIX)/share/man@g&quot; Makefile</code></pre><p>编译前还需要进行一些处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -f Makefile-libbz2_so</span><br><span class="line">make clean</span><br></pre></td></tr></table></figure><p>编译：</p><pre><code>make</code></pre><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">make PREFIX&#x3D;&#x2F;usr install</span><br><span class="line">cp -av libbz2.so.* &#x2F;usr&#x2F;lib</span><br><span class="line">ln -sv libbz2.so.1.0.8 &#x2F;usr&#x2F;lib&#x2F;libbz2.so</span><br><span class="line">cp -v bzip2-shared &#x2F;usr&#x2F;bin&#x2F;bzip2</span><br><span class="line">for i in &#x2F;usr&#x2F;bin&#x2F;&#123;bzcat,bunzip2&#125;; do</span><br><span class="line">  ln -sfv bzip2 $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>此处对其共享库进行了一些处理<br>删除静态库</p><pre><code>rm -fv /usr/lib/libbz2.a</code></pre><h2 id="Xz-5-2-5"><a href="#Xz-5-2-5" class="headerlink" title="Xz-5.2.5"></a>Xz-5.2.5</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf xz-5.2.5.tar.xz</span><br><span class="line">cd xz-5.2.5</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr    \</span><br><span class="line">            --disable-static \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;xz-5.2.5</span><br></pre></td></tr></table></figure><p>编译，检查和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Zstd-1-5-0"><a href="#Zstd-1-5-0" class="headerlink" title="Zstd-1.5.0"></a>Zstd-1.5.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf zstd-1.5.0.tar.gz</span><br><span class="line">cd zstd-1.5.0</span><br><span class="line">make</span><br><span class="line">make check</span><br></pre></td></tr></table></figure><p>如果编译时出现 “failed” 时，那没有问题，只有 “FAIL”才是失败。但测试需要全部通过。<br>安装</p><pre><code>make prefix=/usr install</code></pre><p>删除静态库</p><pre><code>rm -v /usr/lib/libzstd.a</code></pre><h2 id="File-5-40"><a href="#File-5-40" class="headerlink" title="File-5.40"></a>File-5.40</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf file-5.40.tar.gz</span><br><span class="line">cd file-5.40</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Readline-8-1"><a href="#Readline-8-1" class="headerlink" title="Readline-8.1"></a>Readline-8.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf readline-8.1.tar.gz</span><br><span class="line">cd readline-8.1</span><br></pre></td></tr></table></figure><p>重新安装<code>Readline</code>会导致旧版本的库被重命名为<code>&lt;库名称&gt;.old</code>。这一般不是问题，但某些情况下会触发<code>ldconfig</code>的一个链接 bug。运行下面的两条 sed 命令防止这种情况： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;&#x2F;MV.*old&#x2F;d&#39; Makefile.in</span><br><span class="line">sed -i &#39;&#x2F;&#123;OLDSUFF&#125;&#x2F;c:&#39; support&#x2F;shlib-install</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr    \</span><br><span class="line">            --disable-static \</span><br><span class="line">            --with-curses    \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;readline-8.1</span><br></pre></td></tr></table></figure><p>编译和安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make SHLIB_LIBS&#x3D;&quot;-lncursesw&quot;</span><br><span class="line">make SHLIB_LIBS&#x3D;&quot;-lncursesw&quot; install</span><br></pre></td></tr></table></figure><p>安装文档（可选）：</p><pre><code>install -v -m644 doc/*.&#123;ps,pdf,html,dvi&#125; /usr/share/doc/readline-8.1</code></pre><h2 id="M4-1-4-19"><a href="#M4-1-4-19" class="headerlink" title="M4-1.4.19"></a>M4-1.4.19</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf m4-1.4.19.tar.xz</span><br><span class="line">cd m4-1.4.19</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Bc-5-0-0"><a href="#Bc-5-0-0" class="headerlink" title="Bc-5.0.0"></a>Bc-5.0.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf bc-5.0.0.tar.xz</span><br><span class="line">cd bc-5.0.0</span><br><span class="line">CC&#x3D;gcc .&#x2F;configure --prefix&#x3D;&#x2F;usr -G -O3</span><br><span class="line">make</span><br><span class="line">make test</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><blockquote><p>这个<code>O3</code>就很灵性</p></blockquote><h2 id="Flex-2-6-4"><a href="#Flex-2-6-4" class="headerlink" title="Flex-2.6.4"></a>Flex-2.6.4</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf flex-2.6.4.tar.gz</span><br><span class="line">cd flex-2.6.4</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;flex-2.6.4 \</span><br><span class="line">            --disable-static</span><br></pre></td></tr></table></figure><p>编译，检查和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>添加一个<code>lex</code>到<code>flex</code>的符号链接</p><pre><code>ln -sv flex /usr/bin/lex</code></pre><h2 id="Tcl-8-6-11"><a href="#Tcl-8-6-11" class="headerlink" title="Tcl-8.6.11"></a>Tcl-8.6.11</h2><p>这是三个需要用到的测试套件其中之一。<br>进入安装目录后，要解压文档，在解压源码时要注意区分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf tcl8.6.11-src.tar.gz</span><br><span class="line">cd tcl8.6.11</span><br><span class="line">tar -xf ..&#x2F;tcl8.6.11-html.tar.gz --strip-components&#x3D;1</span><br></pre></td></tr></table></figure><p>这里的 configure 有点特殊</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SRCDIR&#x3D;$(pwd)</span><br><span class="line">cd unix</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr           \</span><br><span class="line">            --mandir&#x3D;&#x2F;usr&#x2F;share&#x2F;man \</span><br><span class="line">            $([ &quot;$(uname -m)&quot; &#x3D; x86_64 ] &amp;&amp; echo --enable-64bit)</span><br></pre></td></tr></table></figure><p>编译，也有点特殊</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line"></span><br><span class="line">sed -e &quot;s|$SRCDIR&#x2F;unix|&#x2F;usr&#x2F;lib|&quot; \</span><br><span class="line">    -e &quot;s|$SRCDIR|&#x2F;usr&#x2F;include|&quot;  \</span><br><span class="line">    -i tclConfig.sh</span><br><span class="line"></span><br><span class="line">sed -e &quot;s|$SRCDIR&#x2F;unix&#x2F;pkgs&#x2F;tdbc1.1.2|&#x2F;usr&#x2F;lib&#x2F;tdbc1.1.2|&quot; \</span><br><span class="line">    -e &quot;s|$SRCDIR&#x2F;pkgs&#x2F;tdbc1.1.2&#x2F;generic|&#x2F;usr&#x2F;include|&quot;    \</span><br><span class="line">    -e &quot;s|$SRCDIR&#x2F;pkgs&#x2F;tdbc1.1.2&#x2F;library|&#x2F;usr&#x2F;lib&#x2F;tcl8.6|&quot; \</span><br><span class="line">    -e &quot;s|$SRCDIR&#x2F;pkgs&#x2F;tdbc1.1.2|&#x2F;usr&#x2F;include|&quot;            \</span><br><span class="line">    -i pkgs&#x2F;tdbc1.1.2&#x2F;tdbcConfig.sh</span><br><span class="line"></span><br><span class="line">sed -e &quot;s|$SRCDIR&#x2F;unix&#x2F;pkgs&#x2F;itcl4.2.1|&#x2F;usr&#x2F;lib&#x2F;itcl4.2.1|&quot; \</span><br><span class="line">    -e &quot;s|$SRCDIR&#x2F;pkgs&#x2F;itcl4.2.1&#x2F;generic|&#x2F;usr&#x2F;include|&quot;    \</span><br><span class="line">    -e &quot;s|$SRCDIR&#x2F;pkgs&#x2F;itcl4.2.1|&#x2F;usr&#x2F;include|&quot;            \</span><br><span class="line">    -i pkgs&#x2F;itcl4.2.1&#x2F;itclConfig.sh</span><br><span class="line"></span><br><span class="line">unset SRCDIR</span><br></pre></td></tr></table></figure><p>测试</p><pre><code>make test</code></pre><p>已知测试<code>unitInit-1.2</code>会失败。</p><blockquote><p>但我测试时全部成功了</p></blockquote><p>安装，并修改安装好的库的权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">chmod -v u+w &#x2F;usr&#x2F;lib&#x2F;libtcl8.6.so</span><br></pre></td></tr></table></figure><p>安装头文件，这是等一会要安装的<code>expect</code>的依赖</p><pre><code>make install-private-headers</code></pre><p>创建符号链接</p><pre><code>ln -sfv tclsh8.6 /usr/bin/tclsh</code></pre><p>最后修改一个与 Perl man 冲突的错误：</p><pre><code>mv /usr/share/man/man3/&#123;Thread,Tcl_Thread&#125;.3</code></pre><h2 id="Expect-5-45-4"><a href="#Expect-5-45-4" class="headerlink" title="Expect-5.45.4"></a>Expect-5.45.4</h2><p>三个测试套件之二。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf expect5.45.4.tar.gz</span><br><span class="line">cd expect5.45.4</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr           \</span><br><span class="line">            --with-tcl&#x3D;&#x2F;usr&#x2F;lib     \</span><br><span class="line">            --enable-shared         \</span><br><span class="line">            --mandir&#x3D;&#x2F;usr&#x2F;share&#x2F;man \</span><br><span class="line">            --with-tclinclude&#x3D;&#x2F;usr&#x2F;include</span><br></pre></td></tr></table></figure><p>编译，测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make test</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">ln -svf expect5.45.4&#x2F;libexpect5.45.4.so &#x2F;usr&#x2F;lib</span><br></pre></td></tr></table></figure><h2 id="DejaGNU-1-6-3"><a href="#DejaGNU-1-6-3" class="headerlink" title="DejaGNU-1.6.3"></a>DejaGNU-1.6.3</h2><p>三个测试套件之三。<br>此处需要<code>build</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf dejagnu-1.6.3.tar.gz</span><br><span class="line">cd dejagnu-1.6.3</span><br><span class="line">mkdir -v build</span><br><span class="line">cd       build</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">makeinfo --html --no-split -o doc&#x2F;dejagnu.html ..&#x2F;doc&#x2F;dejagnu.texi</span><br><span class="line">makeinfo --plaintext       -o doc&#x2F;dejagnu.txt  ..&#x2F;doc&#x2F;dejagnu.texi</span><br></pre></td></tr></table></figure><p>直接安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">install -v -dm755  &#x2F;usr&#x2F;share&#x2F;doc&#x2F;dejagnu-1.6.3</span><br><span class="line">install -v -m644   doc&#x2F;dejagnu.&#123;html,txt&#125; &#x2F;usr&#x2F;share&#x2F;doc&#x2F;dejagnu-1.6.3</span><br></pre></td></tr></table></figure><p>当然也可以测试，虽然没有必要</p><pre><code>make check</code></pre><h2 id="Binutils-2-37"><a href="#Binutils-2-37" class="headerlink" title="Binutils-2.37"></a>Binutils-2.37</h2><p>这应该是最后一遍了吧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf binutils-2.37.tar.xz</span><br><span class="line">cp binutils-2.37-upstream_fix-1.patch binutils-2.37</span><br><span class="line">cd binutils-2.37</span><br></pre></td></tr></table></figure><p>同样需要对 pty 进行测试，该命令应返回<code>spawn ls</code>：</p><pre><code>expect -c &quot;spawn ls&quot;</code></pre><p>手册在这里打补丁，其实在进入目录后就可以打：</p><pre><code>patch -Np1 -i binutils-2.37-upstream_fix-1.patch</code></pre><p>绕过关于<code>man</code>的一个问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;63d&#39; etc&#x2F;texi2pod.pl</span><br><span class="line">find -name \*.1 -delete</span><br></pre></td></tr></table></figure><p>创建<code>build</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -v build</span><br><span class="line">cd       build</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;configure --prefix&#x3D;&#x2F;usr       \</span><br><span class="line">             --enable-gold       \</span><br><span class="line">             --enable-ld&#x3D;default \</span><br><span class="line">             --enable-plugins    \</span><br><span class="line">             --enable-shared     \</span><br><span class="line">             --disable-werror    \</span><br><span class="line">             --enable-64-bit-bfd \</span><br><span class="line">             --with-system-zlib</span><br></pre></td></tr></table></figure><p>编译及测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make tooldir&#x3D;&#x2F;usr</span><br><span class="line">make -k check</span><br></pre></td></tr></table></figure><p><strong>一定要运行测试！</strong><br>已知四项与<code>zlib</code>有关的测试会失败。     </p><blockquote><p>嗯，我全中。</p></blockquote><p>安装，删除无用的静态库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make tooldir&#x3D;&#x2F;usr install -j1</span><br><span class="line">rm -fv &#x2F;usr&#x2F;lib&#x2F;lib&#123;bfd,ctf,ctf-nobfd,opcodes&#125;.a</span><br></pre></td></tr></table></figure><h2 id="GMP-6-2-1"><a href="#GMP-6-2-1" class="headerlink" title="GMP-6.2.1"></a>GMP-6.2.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gmp-6.2.1.tar.xz</span><br><span class="line">cd gmp-6.2.1</span><br></pre></td></tr></table></figure><p>如果宿主机硬件是 64 位但安装的 OS 是 32 位，还有<code>CFLAGS</code>变量时，需要运行</p><pre><code>ABI=32 ./configure ...</code></pre><p>取消处理器优化，生成通用库。（可选，且如果宿主机 CPU 与目标机一致就不用选，在 live CD 里编译也不用。）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -v configfsf.guess config.guess</span><br><span class="line">cp -v configfsf.sub   config.sub</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr    \</span><br><span class="line">            --enable-cxx     \</span><br><span class="line">            --disable-static \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;gmp-6.2.1</span><br></pre></td></tr></table></figure><p>编译并生成文档</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make html</span><br></pre></td></tr></table></figure><p>测试：<br><strong>一定要测试！</strong><br>因为 GMP 编译时是针对 CPU 高度优化的，有时会错误识别 CPU 功能导致测试时大概率出现一堆<code>Illegal instruction</code>。此时就需要重新编译并加上<code>--build=x86_64-pc-linux-gnu</code>。<br>以下命令查看通过测试的数量，GMP 一共 197 项测试，务必全部通过。</p><pre><code>awk &#39;/# PASS:/&#123;total+=$3&#125; ; END&#123;print total&#125;&#39; gmp-check-log</code></pre><p>安装，包括文档</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">make install-html</span><br></pre></td></tr></table></figure><h2 id="MPFR-4-1-0"><a href="#MPFR-4-1-0" class="headerlink" title="MPFR-4.1.0"></a>MPFR-4.1.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf mpfr-4.1.0.tar.xz</span><br><span class="line">cd mpfr-4.1.0</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr        \</span><br><span class="line">            --disable-static     \</span><br><span class="line">            --enable-thread-safe \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;mpfr-4.1.0</span><br></pre></td></tr></table></figure><p>编译并生成文档：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make html</span><br></pre></td></tr></table></figure><p>测试：<br><strong>一定要测试！</strong></p><pre><code>make check</code></pre><p>确保全部通过。<br>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">make install-html</span><br></pre></td></tr></table></figure><h2 id="MPC-1-2-1"><a href="#MPC-1-2-1" class="headerlink" title="MPC-1.2.1"></a>MPC-1.2.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf mpc-1.2.1.tar.gz</span><br><span class="line">cd mpc-1.2.1</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr    \</span><br><span class="line">            --disable-static \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;mpc-1.2.1</span><br></pre></td></tr></table></figure><p>编译，测试和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make html</span><br><span class="line">make check</span><br><span class="line">make install</span><br><span class="line">make install-html</span><br></pre></td></tr></table></figure><h2 id="Attr-2-5-1"><a href="#Attr-2-5-1" class="headerlink" title="Attr-2.5.1"></a>Attr-2.5.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf attr-2.5.1.tar.gz</span><br><span class="line">cd attr-2.5.1</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr     \</span><br><span class="line">            --disable-static  \</span><br><span class="line">            --sysconfdir&#x3D;&#x2F;etc \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;attr-2.5.1</span><br></pre></td></tr></table></figure><p>编译，测试和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Acl-2-3-1"><a href="#Acl-2-3-1" class="headerlink" title="Acl-2.3.1"></a>Acl-2.3.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf acl-2.3.1.tar.xz</span><br><span class="line">cd acl-2.3.1</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr         \</span><br><span class="line">            --disable-static      \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;acl-2.3.1</span><br></pre></td></tr></table></figure><p>编译和安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p><code>acl</code>的测试依赖于连接了 Acl 的Coreutils，如果要测试，应在 Coreutils 构建完成后进行。<br>因此，构建完成后源码目录暂不删除。</p><h2 id="Libcap-2-53"><a href="#Libcap-2-53" class="headerlink" title="Libcap-2.53"></a>Libcap-2.53</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf libcap-2.53.tar.xz</span><br><span class="line">cd libcap-2.53</span><br></pre></td></tr></table></figure><p>防止安装静态库：</p><pre><code>sed -i &#39;/install -m.*STA/d&#39; libcap/Makefile</code></pre><p>编译，测试，安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make prefix&#x3D;&#x2F;usr lib&#x3D;lib</span><br><span class="line">make test</span><br><span class="line">make prefix&#x3D;&#x2F;usr lib&#x3D;lib install</span><br></pre></td></tr></table></figure><p>修改权限</p><pre><code>chmod -v 755 /usr/lib/lib&#123;cap,psx&#125;.so.2.53</code></pre><h2 id="Shadow-4-9"><a href="#Shadow-4-9" class="headerlink" title="Shadow-4.9"></a>Shadow-4.9</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf shadow-4.9.tar.xz</span><br><span class="line">cd shadow-4.9</span><br></pre></td></tr></table></figure><p>禁止该包安装<code>groups</code>程序和它的 man 页面，因为 Coreutils 会提供更好的版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;s&#x2F;groups$(EXEEXT) &#x2F;&#x2F;&#39; src&#x2F;Makefile.in</span><br><span class="line">find man -name Makefile.in -exec sed -i &#39;s&#x2F;groups\.1 &#x2F; &#x2F;&#39;   &#123;&#125; \;</span><br><span class="line">find man -name Makefile.in -exec sed -i &#39;s&#x2F;getspnam\.3 &#x2F; &#x2F;&#39; &#123;&#125; \;</span><br><span class="line">find man -name Makefile.in -exec sed -i &#39;s&#x2F;passwd\.5 &#x2F; &#x2F;&#39;   &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>不使用默认的 crypt 加密方法，使用更安全的 SHA-512 方法加密密码，该方法也允许长度超过 8 个字符的密码。还需要把用户邮箱位置<code>/var/spool/mail</code>改为<code>/var/mail</code>。另外，从默认的<code>PATH</code>中删除<code>/bin</code> 和<code>/sbin</code>，因为它们只是指向<code>/usr</code>中对应目录的符号链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -e &#39;s:#ENCRYPT_METHOD DES:ENCRYPT_METHOD SHA512:&#39; \</span><br><span class="line">    -e &#39;s:&#x2F;var&#x2F;spool&#x2F;mail:&#x2F;var&#x2F;mail:&#39;                 \</span><br><span class="line">    -e &#39;&#x2F;PATH&#x3D;&#x2F;&#123;s@&#x2F;sbin:@@;s@&#x2F;bin:@@&#125;&#39;                \</span><br><span class="line">    -i etc&#x2F;login.defs</span><br></pre></td></tr></table></figure><p>修复程序中的一处低级错误：</p><pre><code>sed -e &quot;224s/rounds/min_rounds/&quot; -i libmisc/salt.c</code></pre><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch &#x2F;usr&#x2F;bin&#x2F;passwd</span><br><span class="line">.&#x2F;configure --sysconfdir&#x3D;&#x2F;etc \</span><br><span class="line">            --with-group-name-max-length&#x3D;32</span><br></pre></td></tr></table></figure><p>编译：</p><pre><code>make</code></pre><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">make exec_prefix&#x3D;&#x2F;usr install</span><br><span class="line">make -C man install-man</span><br><span class="line">mkdir -p &#x2F;etc&#x2F;default</span><br><span class="line">useradd -D --gid 999</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>启用用户密码的加密</p><pre><code>pwconv</code></pre><p>启用组密码加密</p><pre><code>grpconv</code></pre><p><code>shadow</code>带了一个<code>useradd</code>的默认配置文件，其中会为新用户创建邮箱文件，若关闭，运行</p><pre><code>sed -i &#39;s/yes/no/&#39; /etc/default/useradd</code></pre><h3 id="设置-root-密码"><a href="#设置-root-密码" class="headerlink" title="设置 root 密码"></a>设置 root 密码</h3><pre><code>passwd root</code></pre><h2 id="GCC-11-2-0"><a href="#GCC-11-2-0" class="headerlink" title="GCC-11.2.0"></a>GCC-11.2.0</h2><p>这一遍需要巨长的时间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gcc-11.2.0.tar.xz</span><br><span class="line">cd gcc-11.2.0</span><br></pre></td></tr></table></figure><p>修复在使用 Glibc-2.34 的系统上构建该软件包时导致<code>libasan.a</code>无法使用的问题： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -e &#39;&#x2F;static.*SIGSTKSZ&#x2F;d&#39; \</span><br><span class="line">    -e &#39;s&#x2F;return kAltStackSize&#x2F;return SIGSTKSZ * 4&#x2F;&#39; \</span><br><span class="line">    -i libsanitizer&#x2F;sanitizer_common&#x2F;sanitizer_posix_libcdep.cpp</span><br></pre></td></tr></table></figure><p>修改 64 位库默认路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">case $(uname -m) in</span><br><span class="line">  x86_64)</span><br><span class="line">    sed -e &#39;&#x2F;m64&#x3D;&#x2F;s&#x2F;lib64&#x2F;lib&#x2F;&#39; \</span><br><span class="line">        -i.orig gcc&#x2F;config&#x2F;i386&#x2F;t-linux64</span><br><span class="line">  ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>创建<code>build</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -v build</span><br><span class="line">cd       build</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;configure --prefix&#x3D;&#x2F;usr            \</span><br><span class="line">             LD&#x3D;ld                    \</span><br><span class="line">             --enable-languages&#x3D;c,c++ \</span><br><span class="line">             --disable-multilib       \</span><br><span class="line">             --disable-bootstrap      \</span><br><span class="line">             --with-system-zlib</span><br></pre></td></tr></table></figure><p>编译：</p><pre><code>make</code></pre><p>增加栈空间</p><pre><code>ulimit -s 32768</code></pre><p>以非特权用户身份测试编译结果，但出错时继续执行其他测试： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -Rv tester . </span><br><span class="line">su tester -c &quot;PATH&#x3D;$PATH make -k check&quot;</span><br></pre></td></tr></table></figure><p>查看摘要</p><pre><code>../contrib/test_summary</code></pre><p>已知错误如下：</p><ul><li>已知八项与<code>analyzer</code>相关的测试会失败。     </li><li>已知一项名为<code>asan_test.C</code>的测试会失败。    </li><li>在<code>libstdc++</code>中，已知一项名为<code>49745.cc</code>的测试由于 Glibc 中头文件依赖关系的变化而失败。    </li><li>在<code>libstdc++</code>测试中，一项<code>numpuct</code>测试和六项与 get_time 有关的测试会失败。这是由于 glibc 更新了 locale 定义，但是 libstdc++ 尚不支持这些变化。    </li></ul><p>同时，还有少量错误是十分正常的，毕竟这是 gcc。 （<br><strong>哪怕测试时间比编译时间还要长十倍也要坚持测试！</strong></p><blockquote><p>但时间真的太长了……我跑了近 5 个小时，然而编译只需要 30 分钟不到</p></blockquote><p>安装该软件包，并移除一个不需要的目录： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">rm -rf &#x2F;usr&#x2F;lib&#x2F;gcc&#x2F;$(gcc -dumpmachine)&#x2F;11.2.0&#x2F;include-fixed&#x2F;bits&#x2F;</span><br></pre></td></tr></table></figure><p>修正之前因为测试而临时更改的文件所有者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -v -R root:root \</span><br><span class="line">    &#x2F;usr&#x2F;lib&#x2F;gcc&#x2F;*linux-gnu&#x2F;11.2.0&#x2F;include&#123;,-fixed&#125;</span><br></pre></td></tr></table></figure><p>创建一个符号链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ln -svr &#x2F;usr&#x2F;bin&#x2F;cpp &#x2F;usr&#x2F;lib</span><br><span class="line">ln -sfv ..&#x2F;..&#x2F;libexec&#x2F;gcc&#x2F;$(gcc -dumpmachine)&#x2F;11.2.0&#x2F;liblto_plugin.so \</span><br><span class="line">        &#x2F;usr&#x2F;lib&#x2F;bfd-plugins&#x2F;</span><br></pre></td></tr></table></figure><h2 id="第二次检查"><a href="#第二次检查" class="headerlink" title="第二次检查"></a>第二次检查</h2><p>现在工具链已经完成安装，需要进行一次完整的确认。<br>离开源码目录，然后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;int main()&#123;&#125;&#39; &gt; dummy.c</span><br><span class="line">cc dummy.c -v -Wl,--verbose &amp;&gt; dummy.log</span><br><span class="line">readelf -l a.out | grep &#39;: &#x2F;lib&#39;</span><br></pre></td></tr></table></figure><p>如果正常，输出的最后一行会是（具体名称取决于平台）</p><pre><code>[Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]</code></pre><p>然后</p><pre><code>grep -o &#39;/usr/lib.*/crt[1in].*succeeded&#39; dummy.log</code></pre><p>正常输出应该是这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;lib&#x2F;gcc&#x2F;x86_64-pc-linux-gnu&#x2F;11.2.0&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;lib&#x2F;crt1.o succeeded</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;gcc&#x2F;x86_64-pc-linux-gnu&#x2F;11.2.0&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;lib&#x2F;crti.o succeeded</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;gcc&#x2F;x86_64-pc-linux-gnu&#x2F;11.2.0&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;lib&#x2F;crtn.o succeeded</span><br></pre></td></tr></table></figure><p><code>gcc</code>应该找到所有三个<code>crt*.o</code>文件，它们应该位于<code>/usr/lib</code>目录中。<br>确认编译器能正确查找头文件： </p><pre><code>grep -B4 &#39;^ /usr/include&#39; dummy.log</code></pre><p>这是正常输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;...&gt; search starts here:</span><br><span class="line"> &#x2F;usr&#x2F;lib&#x2F;gcc&#x2F;x86_64-pc-linux-gnu&#x2F;11.2.0&#x2F;include</span><br><span class="line"> &#x2F;usr&#x2F;local&#x2F;include</span><br><span class="line"> &#x2F;usr&#x2F;lib&#x2F;gcc&#x2F;x86_64-pc-linux-gnu&#x2F;11.2.0&#x2F;include-fixed</span><br><span class="line"> &#x2F;usr&#x2F;include</span><br></pre></td></tr></table></figure><p>其中三元组的名称取决于平台。<br>确认新的链接器使用了正确的搜索路径： </p><pre><code>grep &#39;SEARCH.*/usr/lib&#39; dummy.log |sed &#39;s|; |\n|g&#39;</code></pre><p>路径应该要包含</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SEARCH_DIR(&quot;&#x2F;usr&#x2F;x86_64-pc-linux-gnu&#x2F;lib64&quot;)</span><br><span class="line">SEARCH_DIR(&quot;&#x2F;usr&#x2F;local&#x2F;lib64&quot;)</span><br><span class="line">SEARCH_DIR(&quot;&#x2F;lib64&quot;)</span><br><span class="line">SEARCH_DIR(&quot;&#x2F;usr&#x2F;lib64&quot;)</span><br><span class="line">SEARCH_DIR(&quot;&#x2F;usr&#x2F;x86_64-pc-linux-gnu&#x2F;lib&quot;)</span><br><span class="line">SEARCH_DIR(&quot;&#x2F;usr&#x2F;local&#x2F;lib&quot;)</span><br><span class="line">SEARCH_DIR(&quot;&#x2F;lib&quot;)</span><br><span class="line">SEARCH_DIR(&quot;&#x2F;usr&#x2F;lib&quot;);</span><br></pre></td></tr></table></figure><p>当然 32 位的路径会有不同。<br>确认使用了正确的 libc： </p><pre><code>grep &quot;/lib.*/libc.so.6 &quot; dummy.log</code></pre><p>应该输出</p><pre><code>attempt to open /usr/lib/libc.so.6 succeeded</code></pre><p>确认 GCC 使用了正确的动态链接器： </p><pre><code>grep found dummy.log</code></pre><p>正常输出：</p><pre><code>found ld-linux-x86-64.so.2 at /usr/lib/ld-linux-x86-64.so.2</code></pre><p>如果有问题，一定要修复，不能硬着头皮往下做，不然更折腾人。<br>如果一切正常，删除测试文件：</p><pre><code>rm -v dummy.c a.out dummy.log</code></pre><p>最后移动一个位置不正确的文件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv &#x2F;usr&#x2F;share&#x2F;gdb&#x2F;auto-load&#x2F;usr&#x2F;lib</span><br><span class="line">mv -v &#x2F;usr&#x2F;lib&#x2F;*gdb.py &#x2F;usr&#x2F;share&#x2F;gdb&#x2F;auto-load&#x2F;usr&#x2F;lib</span><br></pre></td></tr></table></figure><h2 id="Pkg-config-0-29-2"><a href="#Pkg-config-0-29-2" class="headerlink" title="Pkg-config-0.29.2"></a>Pkg-config-0.29.2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf pkg-config-0.29.2.tar.gz</span><br><span class="line">cd pkg-config-0.29.2</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr              \</span><br><span class="line">            --with-internal-glib       \</span><br><span class="line">            --disable-host-tool        \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;pkg-config-0.29.2</span><br></pre></td></tr></table></figure><p>编译，检查，安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Ncurses-6-2"><a href="#Ncurses-6-2" class="headerlink" title="Ncurses-6.2"></a>Ncurses-6.2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf ncurses-6.2.tar.gz</span><br><span class="line">cd ncurses-6.2</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr           \</span><br><span class="line">            --mandir&#x3D;&#x2F;usr&#x2F;share&#x2F;man \</span><br><span class="line">            --with-shared           \</span><br><span class="line">            --without-debug         \</span><br><span class="line">            --without-normal        \</span><br><span class="line">            --enable-pc-files       \</span><br><span class="line">            --enable-widec</span><br></pre></td></tr></table></figure><p>编译，安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>这个包有测试，但需要安装后面的包，所以跳过。<br>创建符号链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">for lib in ncurses form panel menu ; do</span><br><span class="line">    rm -vf                    &#x2F;usr&#x2F;lib&#x2F;lib$&#123;lib&#125;.so</span><br><span class="line">    echo &quot;INPUT(-l$&#123;lib&#125;w)&quot; &gt; &#x2F;usr&#x2F;lib&#x2F;lib$&#123;lib&#125;.so</span><br><span class="line">    ln -sfv $&#123;lib&#125;w.pc        &#x2F;usr&#x2F;lib&#x2F;pkgconfig&#x2F;$&#123;lib&#125;.pc</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">rm -vf                     &#x2F;usr&#x2F;lib&#x2F;libcursesw.so</span><br><span class="line">echo &quot;INPUT(-lncursesw)&quot; &gt; &#x2F;usr&#x2F;lib&#x2F;libcursesw.so</span><br><span class="line">ln -sfv libncurses.so      &#x2F;usr&#x2F;lib&#x2F;libcurses.so</span><br></pre></td></tr></table></figure><p>删除一个 configure 脚本未处理的静态库： </p><pre><code>rm -fv /usr/lib/libncurses++w.a</code></pre><p>安装文档（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -v       &#x2F;usr&#x2F;share&#x2F;doc&#x2F;ncurses-6.2</span><br><span class="line">cp -v -R doc&#x2F;* &#x2F;usr&#x2F;share&#x2F;doc&#x2F;ncurses-6.2</span><br></pre></td></tr></table></figure><blockquote><p>注意：此处没有创建非宽字符的库，部分二进制包会依赖于它。</p></blockquote><h2 id="Sed-4-8"><a href="#Sed-4-8" class="headerlink" title="Sed-4.8"></a>Sed-4.8</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf sed-4.8.tar.xz</span><br><span class="line">cd sed-4.8</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make html</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -Rv tester .</span><br><span class="line">su tester -c &quot;PATH&#x3D;$PATH make check&quot;</span><br></pre></td></tr></table></figure><blockquote><p>我在检查时会报错：<code>inplace-selinux.sh: set-up failure: CONFIG_HEADER not defined</code>，看上去与 selinux 有关，不用 selinux 应该不受影响。<br>但具体原因未知。      </p></blockquote><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">install -d -m755           &#x2F;usr&#x2F;share&#x2F;doc&#x2F;sed-4.8</span><br><span class="line">install -m644 doc&#x2F;sed.html &#x2F;usr&#x2F;share&#x2F;doc&#x2F;sed-4.8</span><br></pre></td></tr></table></figure><h2 id="Psmisc-23-4"><a href="#Psmisc-23-4" class="headerlink" title="Psmisc-23.4"></a>Psmisc-23.4</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf psmisc-23.4.tar.xz</span><br><span class="line">cd psmisc-23.4</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Gettext-0-21"><a href="#Gettext-0-21" class="headerlink" title="Gettext-0.21"></a>Gettext-0.21</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gettext-0.21.tar.xz</span><br><span class="line">cd gettext-0.21</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr    \</span><br><span class="line">            --disable-static \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;gettext-0.21</span><br></pre></td></tr></table></figure><p>编译，检查</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br></pre></td></tr></table></figure><p>测试时间会和编译时间一样长。<br>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">chmod -v 0755 &#x2F;usr&#x2F;lib&#x2F;preloadable_libintl.so</span><br></pre></td></tr></table></figure><h2 id="Bison-3-7-6"><a href="#Bison-3-7-6" class="headerlink" title="Bison-3.7.6"></a>Bison-3.7.6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf bison-3.7.6.tar.xz</span><br><span class="line">cd bison-3.7.6</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;bison-3.7.6</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>可以测试，不过时间有点长。（可选）：</p><pre><code>make check</code></pre><h2 id="Grep-3-7"><a href="#Grep-3-7" class="headerlink" title="Grep-3.7"></a>Grep-3.7</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf grep-3.7.tar.xz</span><br><span class="line">cd grep-3.7</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Bash-5-1-8"><a href="#Bash-5-1-8" class="headerlink" title="Bash-5.1.8"></a>Bash-5.1.8</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf bash-5.1.8.tar.gz</span><br><span class="line">cd bash-5.1.8</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr                      \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;bash-5.1.8 \</span><br><span class="line">            --without-bash-malloc              \</span><br><span class="line">            --with-installed-readline</span><br></pre></td></tr></table></figure><p>编译：</p><pre><code>make</code></pre><p>测试（可选）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chown -Rv tester .</span><br><span class="line"></span><br><span class="line">su -s &#x2F;usr&#x2F;bin&#x2F;expect tester &lt;&lt; EOF</span><br><span class="line">set timeout -1</span><br><span class="line">spawn make tests</span><br><span class="line">expect eof</span><br><span class="line">lassign [wait] _ _ _ value</span><br><span class="line">exit $value</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>安装：</p><pre><code>make install</code></pre><p>换 shell：</p><pre><code>exec /bin/bash --login +h</code></pre><h2 id="Libtool-2-4-6"><a href="#Libtool-2-4-6" class="headerlink" title="Libtool-2.4.6"></a>Libtool-2.4.6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf libtool-2.4.6.tar.xz</span><br><span class="line">cd libtool-2.4.6</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>测试，这里建议打开多线程：</p><pre><code>make check TESTSUITEFLAGS=-j5</code></pre><p>这里的线程数一般为逻辑 CPU 数 + 1。<br>已知会有5个因循环依赖导致的失败，但安装 automake 后可通过。<br>安装，删除静态库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br><span class="line">rm -fv &#x2F;usr&#x2F;lib&#x2F;libltdl.a</span><br></pre></td></tr></table></figure><h2 id="GDBM-1-20"><a href="#GDBM-1-20" class="headerlink" title="GDBM-1.20"></a>GDBM-1.20</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gdbm-1.20.tar.gz</span><br><span class="line">cd gdbm-1.20</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr    \</span><br><span class="line">            --disable-static \</span><br><span class="line">            --enable-libgdbm-compat</span><br></pre></td></tr></table></figure><p>编译，测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make -k check</span><br></pre></td></tr></table></figure><p>已知<code>gdbmtool</code>测试会失败。<br>安装：</p><pre><code>make install</code></pre><h2 id="Gperf-3-1"><a href="#Gperf-3-1" class="headerlink" title="Gperf-3.1"></a>Gperf-3.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gperf-3.1.tar.gz</span><br><span class="line">cd gperf-3.1</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;gperf-3.1</span><br><span class="line">make -j1 check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>这里开<code>-j1</code>是因为多线程会导致错误。      </p><h2 id="Expat-2-4-1"><a href="#Expat-2-4-1" class="headerlink" title="Expat-2.4.1"></a>Expat-2.4.1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf expat-2.4.1.tar.xz</span><br><span class="line">cd expat-2.4.1</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr    \</span><br><span class="line">            --disable-static \</span><br><span class="line">            --docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;expat-2.4.1</span><br></pre></td></tr></table></figure><p>编译，检查，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装文档（可选）：</p><pre><code>install -v -m644 doc/*.&#123;html,png,css&#125; /usr/share/doc/expat-2.4.1</code></pre><p>至此，软件包安装完成过半。<br>剩下的下篇再继续。</p><blockquote><p>76 个包，属实是体力活……</p></blockquote>]]></content>
    
    
    <summary type="html">在临时系统构建完成后，从现在开始，就进入正式构建阶段。
根据 LFS 手册，绝大多数包在编译时都不使用静态库，且一般都会在 configure 中直接关闭，不过 gcc 之类需要的除外。
在现阶段我并没有移植包管理器的打算，也许以后有时间我会出一篇将 Portage 移植到 LFS 的教程吧。 :D

进入 Chroot 环境
每次登录，都要检查$LFS：

echo $LFS

首先先挂载/dev和内核虚拟文件系统

1
2
3
4
5


mount -v --bind /dev $LFS/dev
mount -v --bind /dev/pts $LFS/dev/pts
mount -v</summary>
    
    
    
    <category term="LFS" scheme="https://williamgong.github.io/categories/LFS/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="LFS" scheme="https://williamgong.github.io/tags/LFS/"/>
    
  </entry>
  
  <entry>
    <title>LFS 搭建 3 Chroot 以及构建额外工具</title>
    <link href="https://williamgong.github.io/2021/11/27/lfs%E6%90%AD%E5%BB%BA3/"/>
    <id>https://williamgong.github.io/2021/11/27/lfs%E6%90%AD%E5%BB%BA3/</id>
    <published>2021-11-27T23:15:48.000Z</published>
    <updated>2021-12-04T13:52:12.466Z</updated>
    
    <content type="html"><![CDATA[<p>现在开始就要 chroot 了，同时现在开始用户也要从<code>lfs</code>到<code>root</code>。<br>不过这个顺序相比 9.0 差别太大了吧……<br>那么，现在就<code>su</code>吧。<br>记得设置<code>$LFS</code>:</p><pre><code>export LFS=/mnt/lfs</code></pre><h1 id="改变-LFS-系统目录的所有者"><a href="#改变-LFS-系统目录的所有者" class="headerlink" title="改变 LFS 系统目录的所有者"></a>改变 LFS 系统目录的所有者</h1><p>毕竟一个正常的系统其系统文件所有者不可能是<code>lfs</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chown -R root:root $LFS&#x2F;&#123;usr,lib,var,etc,bin,sbin,tools&#125;</span><br><span class="line">case $(uname -m) in</span><br><span class="line">x86_64) chown -R root:root $LFS&#x2F;lib64 ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="准备虚拟内核文件系统"><a href="#准备虚拟内核文件系统" class="headerlink" title="准备虚拟内核文件系统"></a>准备虚拟内核文件系统</h1><p>首先需要建立 dev,proc,sys,run 目录</p><pre><code>mkdir -pv $LFS/&#123;dev,proc,sys,run&#125;</code></pre><h2 id="创建初始设备节点"><a href="#创建初始设备节点" class="headerlink" title="创建初始设备节点"></a>创建初始设备节点</h2><p>主要是<code>null</code>和<code>console</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mknod -m 600 $LFS&#x2F;dev&#x2F;console c 5 1</span><br><span class="line">mknod -m 666 $LFS&#x2F;dev&#x2F;null c 1 3</span><br></pre></td></tr></table></figure><h2 id="挂载-dev"><a href="#挂载-dev" class="headerlink" title="挂载 /dev"></a>挂载 /dev</h2><pre><code>mount -v --bind /dev $LFS/dev</code></pre><h2 id="挂载虚拟内核文件系统"><a href="#挂载虚拟内核文件系统" class="headerlink" title="挂载虚拟内核文件系统"></a>挂载虚拟内核文件系统</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mount -v --bind &#x2F;dev&#x2F;pts $LFS&#x2F;dev&#x2F;pts</span><br><span class="line">mount -vt proc proc $LFS&#x2F;proc</span><br><span class="line">mount -vt sysfs sysfs $LFS&#x2F;sys</span><br><span class="line">mount -vt tmpfs tmpfs $LFS&#x2F;run</span><br></pre></td></tr></table></figure><p>此外，还要创建一些目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ -h $LFS&#x2F;dev&#x2F;shm ]; then</span><br><span class="line">  mkdir -pv $LFS&#x2F;$(readlink $LFS&#x2F;dev&#x2F;shm)</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h1 id="Chroot"><a href="#Chroot" class="headerlink" title="Chroot"></a>Chroot</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chroot &quot;$LFS&quot; &#x2F;usr&#x2F;bin&#x2F;env -i   \</span><br><span class="line">    HOME&#x3D;&#x2F;root                  \</span><br><span class="line">    TERM&#x3D;&quot;$TERM&quot;                \</span><br><span class="line">    PS1&#x3D;&#39;(lfs chroot) \u:\w\$ &#39; \</span><br><span class="line">    PATH&#x3D;&#x2F;usr&#x2F;bin:&#x2F;usr&#x2F;sbin \</span><br><span class="line">    &#x2F;bin&#x2F;bash --login +h</span><br></pre></td></tr></table></figure><p>这时的 bash 会显示 I have no name，因为没有<code>/etc/passwd</code>，这是正常的，虽然有点丑 :D</p><h2 id="退出时进入-Chroot-的操作"><a href="#退出时进入-Chroot-的操作" class="headerlink" title="退出时进入 Chroot 的操作"></a>退出时进入 Chroot 的操作</h2><p>如果只是退出而不关机/重启的话，直接运行上面的命令就行，不然就要重新挂载这些文件系统。<br>不过建议每次 chroot 前都检查一次。</p><h1 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h1><p>现在再创建一些还需要的目录</p><pre><code>mkdir -pv /&#123;boot,home,mnt,opt,srv&#125;</code></pre><p>其实有一些目录已经创建了，但这里为了防止遗漏手册还是加上了这些目录。<br>现在创建子目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv &#x2F;etc&#x2F;&#123;opt,sysconfig&#125;</span><br><span class="line">mkdir -pv &#x2F;lib&#x2F;firmware</span><br><span class="line">mkdir -pv &#x2F;media&#x2F;&#123;floppy,cdrom&#125;</span><br><span class="line">mkdir -pv &#x2F;usr&#x2F;&#123;,local&#x2F;&#125;&#123;include,src&#125;</span><br><span class="line">mkdir -pv &#x2F;usr&#x2F;local&#x2F;&#123;bin,lib,sbin&#125;</span><br><span class="line">mkdir -pv &#x2F;usr&#x2F;&#123;,local&#x2F;&#125;share&#x2F;&#123;color,dict,doc,info,locale,man&#125;</span><br><span class="line">mkdir -pv &#x2F;usr&#x2F;&#123;,local&#x2F;&#125;share&#x2F;&#123;misc,terminfo,zoneinfo&#125;</span><br><span class="line">mkdir -pv &#x2F;usr&#x2F;&#123;,local&#x2F;&#125;share&#x2F;man&#x2F;man&#123;1..8&#125;</span><br><span class="line">mkdir -pv &#x2F;var&#x2F;&#123;cache,local,log,mail,opt,spool&#125;</span><br><span class="line">mkdir -pv &#x2F;var&#x2F;lib&#x2F;&#123;color,misc,locate&#125;</span><br><span class="line">ln -sfv &#x2F;run &#x2F;var&#x2F;run</span><br><span class="line">ln -sfv &#x2F;run&#x2F;lock &#x2F;var&#x2F;lock</span><br><span class="line">install -dv -m 0750 &#x2F;root</span><br><span class="line">install -dv -m 1777 &#x2F;tmp &#x2F;var&#x2F;tmp</span><br></pre></td></tr></table></figure><p>以上目录结构全部基于 FHS，但只加了必要的目录。</p><h1 id="创建必要的文件和符号链接"><a href="#创建必要的文件和符号链接" class="headerlink" title="创建必要的文件和符号链接"></a>创建必要的文件和符号链接</h1><p>先加上从<code>/etc/mtab</code>到<code>/proc</code>的符号链接</p><pre><code>ln -sv /proc/self/mounts /etc/mtab</code></pre><p>然后是创建一个最简单的<code>/etc/hosts</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;hosts &lt;&lt; EOF</span><br><span class="line">127.0.0.1  localhost $(hostname)</span><br><span class="line">::1        localhost</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p>其实这里的<code>$(hostname)</code>在其他发行版里是需要手动改的</p></blockquote><p>创建<code>/etc/passwd</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;passwd &lt;&lt; &quot;EOF&quot;</span><br><span class="line">root:x:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash</span><br><span class="line">bin:x:1:1:bin:&#x2F;dev&#x2F;null:&#x2F;bin&#x2F;false</span><br><span class="line">daemon:x:6:6:Daemon User:&#x2F;dev&#x2F;null:&#x2F;bin&#x2F;false</span><br><span class="line">messagebus:x:18:18:D-Bus Message Daemon User:&#x2F;run&#x2F;dbus:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-bus-proxy:x:72:72:systemd Bus Proxy:&#x2F;:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-journal-gateway:x:73:73:systemd Journal Gateway:&#x2F;:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-journal-remote:x:74:74:systemd Journal Remote:&#x2F;:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-journal-upload:x:75:75:systemd Journal Upload:&#x2F;:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-network:x:76:76:systemd Network Management:&#x2F;:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-resolve:x:77:77:systemd Resolver:&#x2F;:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-timesync:x:78:78:systemd Time Synchronization:&#x2F;:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-coredump:x:79:79:systemd Core Dumper:&#x2F;:&#x2F;bin&#x2F;false</span><br><span class="line">uuidd:x:80:80:UUID Generation Daemon User:&#x2F;dev&#x2F;null:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-oom:x:81:81:systemd Out Of Memory Daemon:&#x2F;:&#x2F;bin&#x2F;false</span><br><span class="line">nobody:x:99:99:Unprivileged User:&#x2F;dev&#x2F;null:&#x2F;bin&#x2F;false</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>可以看出这里加上了 systemd 需要的用户。<br>创建<code>/etc/group</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;group &lt;&lt; &quot;EOF&quot;</span><br><span class="line">root:x:0:</span><br><span class="line">bin:x:1:daemon</span><br><span class="line">sys:x:2:</span><br><span class="line">kmem:x:3:</span><br><span class="line">tape:x:4:</span><br><span class="line">tty:x:5:</span><br><span class="line">daemon:x:6:</span><br><span class="line">floppy:x:7:</span><br><span class="line">disk:x:8:</span><br><span class="line">lp:x:9:</span><br><span class="line">dialout:x:10:</span><br><span class="line">audio:x:11:</span><br><span class="line">video:x:12:</span><br><span class="line">utmp:x:13:</span><br><span class="line">usb:x:14:</span><br><span class="line">cdrom:x:15:</span><br><span class="line">adm:x:16:</span><br><span class="line">messagebus:x:18:</span><br><span class="line">systemd-journal:x:23:</span><br><span class="line">input:x:24:</span><br><span class="line">mail:x:34:</span><br><span class="line">kvm:x:61:</span><br><span class="line">systemd-bus-proxy:x:72:</span><br><span class="line">systemd-journal-gateway:x:73:</span><br><span class="line">systemd-journal-remote:x:74:</span><br><span class="line">systemd-journal-upload:x:75:</span><br><span class="line">systemd-network:x:76:</span><br><span class="line">systemd-resolve:x:77:</span><br><span class="line">systemd-timesync:x:78:</span><br><span class="line">systemd-coredump:x:79:</span><br><span class="line">uuidd:x:80:</span><br><span class="line">systemd-oom:x:81:81:</span><br><span class="line">wheel:x:97:</span><br><span class="line">nogroup:x:99:</span><br><span class="line">users:x:999:</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>这里用户组的标准可以看作 LFS 自己的标准了，其中用户组可以根据需要自行修改。<br>现在需要创建一个之后的测试中需要用到的用户，不过是临时的，最后会删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;tester:x:101:101::&#x2F;home&#x2F;tester:&#x2F;bin&#x2F;bash&quot; &gt;&gt; &#x2F;etc&#x2F;passwd</span><br><span class="line">echo &quot;tester:x:101:&quot; &gt;&gt; &#x2F;etc&#x2F;group</span><br><span class="line">install -o tester -d &#x2F;home&#x2F;tester</span><br></pre></td></tr></table></figure><p>现在，赋予 bash 以名字（无故中二 XD）：</p><pre><code>exec /bin/bash --login +h</code></pre><p>还要创建一些日志文件，虽然都是空的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch &#x2F;var&#x2F;log&#x2F;&#123;btmp,lastlog,faillog,wtmp&#125;</span><br><span class="line">chgrp -v utmp &#x2F;var&#x2F;log&#x2F;lastlog</span><br><span class="line">chmod -v 664  &#x2F;var&#x2F;log&#x2F;lastlog</span><br><span class="line">chmod -v 600  &#x2F;var&#x2F;log&#x2F;btmp</span><br></pre></td></tr></table></figure><p>至此，初步配置完成，现在该安装额外工具了。</p><h1 id="构建额外工具"><a href="#构建额外工具" class="headerlink" title="构建额外工具"></a>构建额外工具</h1><p>你没理解错，以下部分全部都以<code>root</code>用户编译。</p><h2 id="GCC-11-2-0-中的-Libstdc-第二遍"><a href="#GCC-11-2-0-中的-Libstdc-第二遍" class="headerlink" title="GCC-11.2.0 中的 Libstdc++ - 第二遍"></a>GCC-11.2.0 中的 Libstdc++ - 第二遍</h2><p>在前面第二遍编译 gcc 时，并没有编译它，因为它不能用宿主机工具链编译。    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gcc-11.2.0.tar.xz</span><br><span class="line">cd gcc-11.2.0</span><br></pre></td></tr></table></figure><p>创建一个符号链接</p><pre><code>ln -s gthr-posix.h libgcc/gthr-default.h</code></pre><p>建立<code>build</code>目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;libstdc++-v3&#x2F;configure \</span><br><span class="line">CXXFLAGS&#x3D;&quot;-g -O2 -D_GNU_SOURCE&quot; \</span><br><span class="line">--prefix&#x3D;&#x2F;usr \</span><br><span class="line">--disable-multilib \</span><br><span class="line">--disable-nls \</span><br><span class="line">--host&#x3D;$(uname -m)-lfs-linux-gnu \</span><br><span class="line">--disable-libstdcxx-pch</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Gettext-0-21"><a href="#Gettext-0-21" class="headerlink" title="Gettext-0.21"></a>Gettext-0.21</h2><p>这里只安装<code>msgfmt</code>，<code>msgmerge</code>，以及<code>xgettext</code>这三个程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gettext-0.21.tar.xz</span><br><span class="line">cd gettext-0.21</span><br><span class="line">.&#x2F;configure --disable-shared</span><br><span class="line">make</span><br><span class="line">cp -v gettext-tools&#x2F;src&#x2F;&#123;msgfmt,msgmerge,xgettext&#125; &#x2F;usr&#x2F;bin</span><br></pre></td></tr></table></figure><h2 id="Bison-3-7-6"><a href="#Bison-3-7-6" class="headerlink" title="Bison-3.7.6"></a>Bison-3.7.6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf bison-3.7.6.tar.xz</span><br><span class="line">cd bison-3.7.6</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;bison-3.7.6</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Perl-5-34-0"><a href="#Perl-5-34-0" class="headerlink" title="Perl-5.34.0"></a>Perl-5.34.0</h2><p>此处要加一个 patch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf perl-5.34.0.tar.xz</span><br><span class="line">cp perl-5.34.0-upstream_fixes-1.patch perl-5.34.0&#x2F;</span><br><span class="line">cd perl-5.34.0</span><br><span class="line">patch -Np1 -i perl-5.34.0-upstream_fixes-1.patch</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sh Configure -des \</span><br><span class="line">-Dprefix&#x3D;&#x2F;usr \</span><br><span class="line">-Dvendorprefix&#x3D;&#x2F;usr \</span><br><span class="line">-Dprivlib&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;core_perl \</span><br><span class="line">-Darchlib&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;core_perl \</span><br><span class="line">-Dsitelib&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;site_perl \</span><br><span class="line">-Dsitearch&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;site_perl \</span><br><span class="line">-Dvendorlib&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;vendor_perl \</span><br><span class="line">-Dvendorarch&#x3D;&#x2F;usr&#x2F;lib&#x2F;perl5&#x2F;5.34&#x2F;vendor_perl</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Python-3-9-6"><a href="#Python-3-9-6" class="headerlink" title="Python-3.9.6"></a>Python-3.9.6</h2><p>这里有两个 python 包，<code>Python-3.9.6.tar.xz</code>和<code>python-3.9.6-docs-html.tar.bz2</code>。<br>解压前面那个，后面的那个包因为没安装<code>bzip2</code>无法解压。<br>注意区分大小写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf Python-3.9.6.tar.xz</span><br><span class="line">cd Python-3.9.6</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--enable-shared \</span><br><span class="line">--without-ensurepip</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>这里有部分模块是无法编译的，但 make 还是会报错（还是 fatal error），这里只要最外面的 make 执行成功即可。</p><h2 id="Texinfo-6-8"><a href="#Texinfo-6-8" class="headerlink" title="Texinfo-6.8"></a>Texinfo-6.8</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf texinfo-6.8.tar.xz</span><br><span class="line">cd texinfo-6.8</span><br></pre></td></tr></table></figure><p>在编译之前，需要修复在使用 Glibc-2.34 或更新版本时编译会出现的问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -e &#39;s&#x2F;__attribute_nonnull__&#x2F;__nonnull&#x2F;&#39; \</span><br><span class="line">    -i gnulib&#x2F;lib&#x2F;malloc&#x2F;dynarray-skeleton.c</span><br></pre></td></tr></table></figure><p>之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="Util-linux-2-37-2"><a href="#Util-linux-2-37-2" class="headerlink" title="Util-linux-2.37.2"></a>Util-linux-2.37.2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf util-linux-2.37.2.tar.xz</span><br><span class="line">cd util-linux-2.37.2</span><br></pre></td></tr></table></figure><p>根据 FHS 的建议，使用<code>/var/lib/hwclock</code>：</p><pre><code>mkdir -pv /var/lib/hwclock</code></pre><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure ADJTIME_PATH&#x3D;&#x2F;var&#x2F;lib&#x2F;hwclock&#x2F;adjtime \</span><br><span class="line">--libdir&#x3D;&#x2F;usr&#x2F;lib \</span><br><span class="line">--docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;util-linux-2.37.2 \</span><br><span class="line">--disable-chfn-chsh \</span><br><span class="line">--disable-login \</span><br><span class="line">--disable-nologin \</span><br><span class="line">--disable-su \</span><br><span class="line">--disable-setpriv \</span><br><span class="line">--disable-runuser \</span><br><span class="line">--disable-pylibmount \</span><br><span class="line">--disable-static \</span><br><span class="line">--without-python \</span><br><span class="line">runstatedir&#x3D;&#x2F;run</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>至此，额外的工具就构建完成了。</p><h1 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h1><p>首先清理文档</p><pre><code>rm -rf /usr/share/&#123;info,man,doc&#125;/*</code></pre><p>之后是<code>libtool</code>的<code>*.la</code>文件</p><pre><code>find /usr/&#123;lib,libexec&#125; -name \*.la -delete</code></pre><p>最后删除<code>/tools</code>，现在已经不需要了</p><pre><code>rm -rf /tools</code></pre><h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><p>这是可选的，但小心一点总没错。<br>以下操作在 chroot 外进行，且使用<code>root</code>用户。    </p><pre><code>exit</code></pre><p>备份需要至少 1G 空间。<br>先解除内核虚拟文件系统的挂载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">umount $LFS&#x2F;dev&#123;&#x2F;pts,&#125;</span><br><span class="line">umount $LFS&#x2F;&#123;sys,proc,run&#125;</span><br></pre></td></tr></table></figure><p>按照手册默认路径，备份于<code>/root</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd $LFS </span><br><span class="line">tar -cJpf $HOME&#x2F;lfs-temp-tools-11.0-systemd.tar.xz .</span><br></pre></td></tr></table></figure><h1 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h1><p>需要还原时，运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd $LFS</span><br><span class="line">rm -rf .&#x2F;*</span><br><span class="line">tar -xpf $HOME&#x2F;lfs-temp-tools-11.0-systemd.tar.xz</span><br></pre></td></tr></table></figure><p><strong>运行前务必检查<code>$LFS</code>是否正确设置！</strong></p><blockquote><p>不然你宿主系统就 gg 了，<code>rm -rf /*</code>了解一下。</p></blockquote><p>至此，构建临时系统部分结束。</p>]]></content>
    
    
    <summary type="html">现在开始就要 chroot 了，同时现在开始用户也要从lfs到root。
不过这个顺序相比 9.0 差别太大了吧……
那么，现在就su吧。
记得设置$LFS:

export LFS=/mnt/lfs

改变 LFS 系统目录的所有者
毕竟一个正常的系统其系统文件所有者不可能是lfs

1
2
3
4


chown -R root:root $LFS/{usr,lib,var,etc,bin,sbin,tools}
case $(uname -m) in
x86_64) chown -R root:root $LFS/lib64 ;;
esac


准备虚拟内核文件系统
首先需要建立 dev</summary>
    
    
    
    <category term="LFS" scheme="https://williamgong.github.io/categories/LFS/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="LFS" scheme="https://williamgong.github.io/tags/LFS/"/>
    
  </entry>
  
  <entry>
    <title>LFS 搭建 2 构建临时系统</title>
    <link href="https://williamgong.github.io/2021/11/23/lfs%E6%90%AD%E5%BB%BA2/"/>
    <id>https://williamgong.github.io/2021/11/23/lfs%E6%90%AD%E5%BB%BA2/</id>
    <published>2021-11-23T05:34:08.000Z</published>
    <updated>2021-12-04T13:52:12.466Z</updated>
    
    <content type="html"><![CDATA[<p>准备工作做完之后，就要开始搭建临时工具链了。<br>但说是工具链，其实还包括一些其他工具。</p><h1 id="开始前的准备"><a href="#开始前的准备" class="headerlink" title="开始前的准备"></a>开始前的准备</h1><p>首先当然是登录<code>lfs</code>用户。<br>之后检查下<code>$LFS</code>是否设置正确。</p><pre><code>echo $LFS</code></pre><p>之后，需要检查以下部分是否正确设置，虽然大部分都不需要刻意留意，但不排除像我这样有特殊习惯的用户会不满足以下条件。    </p><ol><li><strong>shell 用的是 bash。</strong><br>不过目前大部分 shell 都是兼容 bash 的，比如我用的 zsh。</li><li><strong>sh 符号链接到 bash。</strong><br>这个绝大多数发行版都满足。</li><li><strong><code>/usr/bin/awk</code>符号链接到 gawk。</strong><br>这个也不用在意</li><li><strong><code>/usr/bin/yacc</code> 是到 bison 的符号链接，或者是一个执行 bison 的小脚本。</strong><br>嗯，这个也是，除非你用的是 BSD（</li></ol><p>此外，对于构建过程，不要把源码放在<code>/mnt/lfs/tools</code>里，以免污染。<br>在没有特殊说明时，软件包的标准构建步骤如下</p><ol><li>解压并 cd 到源码目录</li><li>根据 readme 编译，也可以 configure make make install 三连</li><li>离开目录，再把它删了。</li></ol><p>现在，就正式开始构建。</p><h1 id="构建交叉编译工具链"><a href="#构建交叉编译工具链" class="headerlink" title="构建交叉编译工具链"></a>构建交叉编译工具链</h1><p>现在先把目录切到<code>$LFS/sources</code>下。</p><h2 id="Binutils-2-37-第一遍"><a href="#Binutils-2-37-第一遍" class="headerlink" title="Binutils-2.37 - 第一遍"></a>Binutils-2.37 - 第一遍</h2><p>先解压软件包</p><pre><code>tar -xvf binutils-2.37.tar.xz</code></pre><p>之后将 patch 放入目录并应用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp binutils-2.37-upstream_fix-1.patch .&#x2F;binutils-2.37</span><br><span class="line">cd .&#x2F;binutils-2.37</span><br><span class="line">patch -p1 &lt; binutils-2.37-upstream_fix-1.patch</span><br></pre></td></tr></table></figure><p>现在需要确认 pty 能否在 chroot 环境里工作</p><pre><code>expect -c &quot;spawn ls&quot;</code></pre><p>如果不能显示<code>spawn ls</code>的话，就说明环境没有为 pty 正常工作设置好。不过大多数情况下装<code>expect</code>包就行了。<br>根据 Binutils 手册建议，创建<code>build</code>目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>进行 configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;configure --prefix&#x3D;$LFS&#x2F;tools \</span><br><span class="line">            --with-sysroot&#x3D;$LFS \</span><br><span class="line">            --target&#x3D;$LFS_TGT \</span><br><span class="line">            --disable-nls \</span><br><span class="line">            --disable-werror</span><br></pre></td></tr></table></figure><p>开始编译：</p><pre><code>make</code></pre><p>安装：</p><pre><code>make install -j1</code></pre><p>至于加上这个<code>-j1</code>的原因，是为了规避 make 中的一个问题。</p><h2 id="GCC-11-2-0-第一遍"><a href="#GCC-11-2-0-第一遍" class="headerlink" title="GCC 11.2.0  - 第一遍"></a>GCC 11.2.0  - 第一遍</h2><p>解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gcc-11.2.0.tar.xz</span><br><span class="line">cd gcc-11.2.0</span><br></pre></td></tr></table></figure><p>此处 gcc 需要 GMP，MPFR 和 MPC 软件包，将源码解压进 gcc 目录并随 gcc 一起编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xf ..&#x2F;mpfr-4.1.0.tar.xz</span><br><span class="line">mv -v mpfr-4.1.0 mpfr</span><br><span class="line">tar -xf ..&#x2F;gmp-6.2.1.tar.xz</span><br><span class="line">mv -v gmp-6.2.1 gmp</span><br><span class="line">tar -xf ..&#x2F;mpc-1.2.1.tar.gz</span><br><span class="line">mv -v mpc-1.2.1 mpc</span><br></pre></td></tr></table></figure><p>对于 x86-64 的宿主机，将 64 位库的默认目录设为<code>lib</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">case $(uname -m) in</span><br><span class="line">x86_64)</span><br><span class="line">sed -e &#39;&#x2F;m64&#x3D;&#x2F;s&#x2F;lib64&#x2F;lib&#x2F;&#39; \</span><br><span class="line">-i.orig gcc&#x2F;config&#x2F;i386&#x2F;t-linux64</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>设置<code>build</code>目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>之后是一段巨长的 configure：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;configure \</span><br><span class="line">--target&#x3D;$LFS_TGT \</span><br><span class="line">--prefix&#x3D;$LFS&#x2F;tools \</span><br><span class="line">--with-glibc-version&#x3D;2.11 \</span><br><span class="line">--with-sysroot&#x3D;$LFS \</span><br><span class="line">--with-newlib \</span><br><span class="line">--without-headers \</span><br><span class="line">--enable-initfini-array \</span><br><span class="line">--disable-nls \</span><br><span class="line">--disable-shared \</span><br><span class="line">--disable-multilib \</span><br><span class="line">--disable-decimal-float \</span><br><span class="line">--disable-threads \</span><br><span class="line">--disable-libatomic \</span><br><span class="line">--disable-libgomp \</span><br><span class="line">--disable-libquadmath \</span><br><span class="line">--disable-libssp \</span><br><span class="line">--disable-libvtv \</span><br><span class="line">--disable-libstdcxx \</span><br><span class="line">--enable-languages&#x3D;c,c++</span><br></pre></td></tr></table></figure><p>毕竟是交叉编译还是第一遍，这里对gcc关闭了一堆功能，主要是避免编译依赖标准库的代码<br>编译：</p><pre><code>make</code></pre><p>安装：</p><pre><code>make install</code></pre><p>此处还要补上<code>limits.h</code>，具体原因是在第一次编译时，<code>$LFS/usr/include/limits.h</code>还不存在，因此此时 gcc 安装的是不完整的，自给自足的头文件。虽然不加对于编译 glibc 已经足够，但后续步骤需要完整的内部头文件，因此此时手动将 gcc 源码中的相关头文件抽出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br><span class="line">cat gcc&#x2F;limitx.h gcc&#x2F;glimits.h gcc&#x2F;limity.h &gt; \</span><br><span class="line">&#96;dirname $($LFS_TGT-gcc -print-libgcc-file-name)&#96;&#x2F;install-tools&#x2F;include&#x2F;limits.h</span><br></pre></td></tr></table></figure><h2 id="Linux-5-13-12-API-头文件"><a href="#Linux-5-13-12-API-头文件" class="headerlink" title="Linux-5.13.12 API 头文件"></a>Linux-5.13.12 API 头文件</h2><p>国际惯例进行解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf linux-5.13.12.tar.xz</span><br><span class="line">cd linux-5.13.12</span><br></pre></td></tr></table></figure><p>这里只需要编译 glibc 用到的头文件，因此在确保目录里没有什么奇奇怪怪的东西（比如从其他地方 copy 进去的配置什么的）</p><pre><code>make mrproper</code></pre><p>之后再从源码中提取头文件然后手动复制到工具链目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">make headers</span><br><span class="line">find usr&#x2F;include -name &#39;.*&#39; -delete</span><br><span class="line">rm usr&#x2F;include&#x2F;Makefile</span><br><span class="line">cp -rv usr&#x2F;include $LFS&#x2F;usr</span><br></pre></td></tr></table></figure><p>最后还是一样的删除整个目录。</p><h2 id="Glibc-2-34"><a href="#Glibc-2-34" class="headerlink" title="Glibc-2.34"></a>Glibc-2.34</h2><p>glibc 2.34 需要加一个 patch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf glibc-2.34.tar.xz</span><br><span class="line">cp glibc-2.34-fhs-1.patch glibc-2.34&#x2F;</span><br><span class="line">cd glibc-2.34&#x2F;</span><br><span class="line">patch -p1 &lt; glibc-2.34-fhs-1.patch</span><br></pre></td></tr></table></figure><p>需要创建符合 LSB 的符号链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">case $(uname -m) in</span><br><span class="line">i?86) ln -sfv ld-linux.so.2 $LFS&#x2F;lib&#x2F;ld-lsb.so.3</span><br><span class="line">;;</span><br><span class="line">x86_64) ln -sfv ..&#x2F;lib&#x2F;ld-linux-x86-64.so.2 $LFS&#x2F;lib64</span><br><span class="line">ln -sfv ..&#x2F;lib&#x2F;ld-linux-x86-64.so.2 $LFS&#x2F;lib64&#x2F;ld-lsb-x86-64.so.3</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>之后是创建 build 目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -v build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>现在要确保<code>ldconfig</code>和<code>sln</code>被安装到了<code>/usr/bin</code>      </p><pre><code>echo &quot;rootsbindir=/usr/sbin&quot; &gt; configparms</code></pre><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;configure \</span><br><span class="line">--prefix&#x3D;&#x2F;usr \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(..&#x2F;scripts&#x2F;config.guess) \</span><br><span class="line">--enable-kernel&#x3D;3.2 \</span><br><span class="line">--with-headers&#x3D;$LFS&#x2F;usr&#x2F;include \</span><br><span class="line">libc_cv_slibdir&#x3D;&#x2F;usr&#x2F;lib</span><br></pre></td></tr></table></figure><p>编译</p><pre><code>make</code></pre><p>安装</p><pre><code>make DESTDIR=$LFS install</code></pre><p>此处最好检查<code>$LFS</code>，如果该变量是空的话 glibc 是会装的宿主机的。<br>此处要修复一个<code>ldd</code>的硬编码错误：</p><pre><code>sed &#39;/RTLDLIST=/s@/usr@@g&#39; -i $LFS/usr/bin/ldd</code></pre><h2 id="第一次检查"><a href="#第一次检查" class="headerlink" title="第一次检查"></a>第一次检查</h2><p>当上述包都安装完了之后，就需要检查工具链的基本功能能否正常工作。<br>找一个不会污染源码的目录，运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;int main()&#123;&#125;&#39; &gt; dummy.c</span><br><span class="line">$LFS_TGT-gcc dummy.c</span><br><span class="line">readelf -l a.out | grep &#39;&#x2F;ld-linux&#39;</span><br></pre></td></tr></table></figure><p>如果一切正常，就只会有以下输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Requesting program interpreter: &#x2F;lib64&#x2F;ld-linux-x86-64.so.2]</span><br></pre></td></tr></table></figure><p>在 32 位机器上，解释器名字应该是<code>/lib/ld-linux.so.2.</code>。<br>现在删除刚刚创建的文件</p><pre><code>rm -v dummy.c a.out</code></pre><p>现在用 gcc 的工具安装<code>limits.h</code></p><pre><code>$LFS/tools/libexec/gcc/$LFS_TGT/11.2.0/install-tools/mkheaders</code></pre><blockquote><p>虽然我在运行时会报错找不到文件，但<code>limits.h</code>确实安装到了目录<code>include-fixed</code>里</p></blockquote><h2 id="GCC-11-2-0-里的-Libstdc-第一遍"><a href="#GCC-11-2-0-里的-Libstdc-第一遍" class="headerlink" title="GCC-11.2.0 里的 Libstdc++ - 第一遍"></a>GCC-11.2.0 里的 Libstdc++ - 第一遍</h2><p>第一次编译 gcc 时，因为没有 glibc，因此并没有编译 libstdc++，现在安装了 glibc 后就需要编译它了。<br>现在解压 gcc 目录并创建 <code>build</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gcc-11.2.0.tar.xz</span><br><span class="line">cd gcc-11.2.0</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>之后是 configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;libstdc++-v3&#x2F;configure \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(..&#x2F;config.guess) \</span><br><span class="line">--prefix&#x3D;&#x2F;usr \</span><br><span class="line">--disable-multilib \</span><br><span class="line">--disable-nls \</span><br><span class="line">--disable-libstdcxx-pch \</span><br><span class="line">--with-gxx-include-dir&#x3D;&#x2F;tools&#x2F;$LFS_TGT&#x2F;include&#x2F;c++&#x2F;11.2.0</span><br></pre></td></tr></table></figure><p>之后就是编译安装二连</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h1 id="构建交叉编译临时工具"><a href="#构建交叉编译临时工具" class="headerlink" title="构建交叉编译临时工具"></a>构建交叉编译临时工具</h1><p>现在只是编译安装了基础的工具链，在此之上还要安装一些额外工具。<br>虽然说这些工具是在<code>chroot</code>之后用的，但现在就要编译。</p><h2 id="M4-1-4-19"><a href="#M4-1-4-19" class="headerlink" title="M4-1.4.19"></a>M4-1.4.19</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf m4-1.4.19.tar.xz</span><br><span class="line">cd m4-1.4.19</span><br></pre></td></tr></table></figure><p>此处不需要<code>build</code>目录。<br>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(build-aux&#x2F;config.guess)</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Ncurses-6-2"><a href="#Ncurses-6-2" class="headerlink" title="Ncurses-6.2"></a>Ncurses-6.2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf ncurses-6.2.tar.gz</span><br><span class="line">cd ncurses-6.2</span><br></pre></td></tr></table></figure><p>首先要确保在 configure 时要找得到<code>gawk</code></p><pre><code>sed -i s/mawk// configure</code></pre><p>之后需要编译<code>tic</code>程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">pushd build</span><br><span class="line">..&#x2F;configure</span><br><span class="line">make -C include</span><br><span class="line">make -C progs tic</span><br><span class="line">popd</span><br></pre></td></tr></table></figure><p>之后**不要进入<code>build</code>**，直接开始 configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(.&#x2F;config.guess) \</span><br><span class="line">--mandir&#x3D;&#x2F;usr&#x2F;share&#x2F;man \</span><br><span class="line">--with-manpage-format&#x3D;normal \</span><br><span class="line">--with-shared \</span><br><span class="line">--without-debug \</span><br><span class="line">--without-ada \</span><br><span class="line">--without-normal \</span><br><span class="line">--enable-widec</span><br></pre></td></tr></table></figure><p>编译</p><pre><code>make</code></pre><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make DESTDIR&#x3D;$LFS TIC_PATH&#x3D;$(pwd)&#x2F;build&#x2F;progs&#x2F;tic install</span><br><span class="line">echo &quot;INPUT(-lncursesw)&quot; &gt; $LFS&#x2F;usr&#x2F;lib&#x2F;libncurses.so</span><br></pre></td></tr></table></figure><h2 id="Bash-5-1-8"><a href="#Bash-5-1-8" class="headerlink" title="Bash-5.1.8"></a>Bash-5.1.8</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf bash-5.1.8.tar.gz</span><br><span class="line">cd bash-5.1.8</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--build&#x3D;$(support&#x2F;config.guess) \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--without-bash-malloc</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><p>加上<code>sh</code>到<code>bash</code>的符号链接</p><pre><code>ln -sv bash $LFS/bin/sh</code></pre><h2 id="Coreutils-8-32"><a href="#Coreutils-8-32" class="headerlink" title="Coreutils-8.32"></a>Coreutils-8.32</h2><p>此处要加一个 patch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf coreutils-8.32.tar.xz</span><br><span class="line">cp coreutils-8.32-i18n-1.patch coreutils-8.32&#x2F;</span><br><span class="line">cd coreutils-8.32</span><br><span class="line">patch -Np1 -i coreutils-8.32-i18n-1.patch</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(build-aux&#x2F;config.guess) \</span><br><span class="line">--enable-install-program&#x3D;hostname \</span><br><span class="line">--enable-no-install-program&#x3D;kill,uptime</span><br></pre></td></tr></table></figure><p>编译安装二连</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><p>此处需要移动部分文件的位置以适应有些硬编码的程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mv -v $LFS&#x2F;usr&#x2F;bin&#x2F;chroot $LFS&#x2F;usr&#x2F;sbin</span><br><span class="line">mkdir -pv $LFS&#x2F;usr&#x2F;share&#x2F;man&#x2F;man8</span><br><span class="line">mv -v $LFS&#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;chroot.1 $LFS&#x2F;usr&#x2F;share&#x2F;man&#x2F;man8&#x2F;chroot.8</span><br><span class="line">sed -i &#39;s&#x2F;&quot;1&quot;&#x2F;&quot;8&quot;&#x2F;&#39; $LFS&#x2F;usr&#x2F;share&#x2F;man&#x2F;man8&#x2F;chroot.8</span><br></pre></td></tr></table></figure><h2 id="Diffutils-3-8"><a href="#Diffutils-3-8" class="headerlink" title="Diffutils-3.8"></a>Diffutils-3.8</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf diffutils-3.8.tar.xz</span><br><span class="line">cd diffutils-3.8</span><br></pre></td></tr></table></figure><p>三连</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --host&#x3D;$LFS_TGT</span><br><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="File-5-40"><a href="#File-5-40" class="headerlink" title="File-5.40"></a>File-5.40</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf file-5.40.tar.gz</span><br><span class="line">cd file-5.40</span><br></pre></td></tr></table></figure><p>这里的<code>file</code>命令需要与宿主机上的版本一致，因此需要特殊编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">pushd build</span><br><span class="line">..&#x2F;configure --disable-bzlib \</span><br><span class="line">--disable-libseccomp \</span><br><span class="line">--disable-xzlib \</span><br><span class="line">--disable-zlib</span><br><span class="line">make</span><br><span class="line">popd</span><br></pre></td></tr></table></figure><p>再进行三连，同样不要进入<code>build</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --host&#x3D;$LFS_TGT --build&#x3D;$(.&#x2F;config.guess)</span><br><span class="line">make FILE_COMPILE&#x3D;$(pwd)&#x2F;build&#x2F;src&#x2F;file</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Findutils-4-8-0"><a href="#Findutils-4-8-0" class="headerlink" title="Findutils-4.8.0"></a>Findutils-4.8.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf findutils-4.8.0.tar.xz</span><br><span class="line">cd findutils-4.8.0</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--localstatedir&#x3D;&#x2F;var&#x2F;lib&#x2F;locate \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(build-aux&#x2F;config.guess)</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Gawk-5-1-0"><a href="#Gawk-5-1-0" class="headerlink" title="Gawk-5.1.0"></a>Gawk-5.1.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gawk-5.1.0.tar.xz</span><br><span class="line">cd gawk-5.1.0</span><br></pre></td></tr></table></figure><p>首先确保不安装不需要的文件</p><pre><code>sed -i &#39;s/extras//&#39; Makefile.in</code></pre><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(.&#x2F;config.guess)</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Grep-3-7"><a href="#Grep-3-7" class="headerlink" title="Grep-3.7"></a>Grep-3.7</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf grep-3.7.tar.xz</span><br><span class="line">cd grep-3.7</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--host&#x3D;$LFS_TGT</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Gzip-1-10"><a href="#Gzip-1-10" class="headerlink" title="Gzip-1.10"></a>Gzip-1.10</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gzip-1.10.tar.xz</span><br><span class="line">cd gzip-1.10</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr --host&#x3D;$LFS_TGT</span><br><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Make-4-3"><a href="#Make-4-3" class="headerlink" title="Make-4.3"></a>Make-4.3</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf make-4.3.tar.gz</span><br><span class="line">cd make-4.3</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--without-guile \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(build-aux&#x2F;config.guess)</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Patch-2-7-6"><a href="#Patch-2-7-6" class="headerlink" title="Patch-2.7.6"></a>Patch-2.7.6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf patch-2.7.6.tar.xz</span><br><span class="line">cd patch-2.7.6</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(build-aux&#x2F;config.guess)</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Sed-4-8"><a href="#Sed-4-8" class="headerlink" title="Sed-4.8"></a>Sed-4.8</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf sed-4.8.tar.xz</span><br><span class="line">cd sed-4.8</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--host&#x3D;$LFS_TGT</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Tar-1-34"><a href="#Tar-1-34" class="headerlink" title="Tar-1.34"></a>Tar-1.34</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf tar-1.34.tar.xz</span><br><span class="line">cd tar-1.34</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(build-aux&#x2F;config.guess)</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Xz-5-2-5"><a href="#Xz-5-2-5" class="headerlink" title="Xz-5.2.5"></a>Xz-5.2.5</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf xz-5.2.5.tar.xz</span><br><span class="line">cd xz-5.2.5</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--build&#x3D;$(build-aux&#x2F;config.guess) \</span><br><span class="line">--disable-static \</span><br><span class="line">--docdir&#x3D;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;xz-5.2.5</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><h2 id="Binutils-2-37-第二遍"><a href="#Binutils-2-37-第二遍" class="headerlink" title="Binutils-2.37 - 第二遍"></a>Binutils-2.37 - 第二遍</h2><p>这一次和第一次差不多，但有一些微妙的差别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf binutils-2.37.tar.xz</span><br><span class="line">cp binutils-2.37-upstream_fix-1.patch binutils-2.37</span><br><span class="line">cd binutils-2.37</span><br><span class="line">patch -Np1 -i binutils-2.37-upstream_fix-1.patch</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;configure \</span><br><span class="line">--prefix&#x3D;&#x2F;usr \</span><br><span class="line">--build&#x3D;$(..&#x2F;config.guess) \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--disable-nls \</span><br><span class="line">--enable-shared \</span><br><span class="line">--disable-werror \</span><br><span class="line">--enable-64-bit-bfd</span><br></pre></td></tr></table></figure><p>编译</p><pre><code>make</code></pre><p>安装，并绕过导致<code>libctf.so</code>链接到宿主发行版 zlib 的问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make DESTDIR&#x3D;$LFS install -j1</span><br><span class="line">install -vm755 libctf&#x2F;.libs&#x2F;libctf.so.0.0.0 $LFS&#x2F;usr&#x2F;lib</span><br></pre></td></tr></table></figure><h2 id="GCC-11-2-0-第二遍"><a href="#GCC-11-2-0-第二遍" class="headerlink" title="GCC-11.2.0 - 第二遍"></a>GCC-11.2.0 - 第二遍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gcc-11.2.0.tar.xz</span><br><span class="line">cd gcc-11.2.0</span><br></pre></td></tr></table></figure><p>还是一样的解压 GMP, MPFR 和 MPC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xf ..&#x2F;mpfr-4.1.0.tar.xz</span><br><span class="line">mv -v mpfr-4.1.0 mpfr</span><br><span class="line">tar -xf ..&#x2F;gmp-6.2.1.tar.xz</span><br><span class="line">mv -v gmp-6.2.1 gmp</span><br><span class="line">tar -xf ..&#x2F;mpc-1.2.1.tar.gz</span><br><span class="line">mv -v mpc-1.2.1 mpc</span><br></pre></td></tr></table></figure><p>还是一样的设置 64 位库的符号链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">case $(uname -m) in</span><br><span class="line">x86_64)</span><br><span class="line">sed -e &#39;&#x2F;m64&#x3D;&#x2F;s&#x2F;lib64&#x2F;lib&#x2F;&#39; -i.orig gcc&#x2F;config&#x2F;i386&#x2F;t-linux64</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>建立<code>build</code>目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>创建一个符号链接以在构建<code>libgcc</code>时启用对 posix 线程的支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv $LFS_TGT&#x2F;libgcc</span><br><span class="line">ln -s ..&#x2F;..&#x2F;..&#x2F;libgcc&#x2F;gthr-posix.h $LFS_TGT&#x2F;libgcc&#x2F;gthr-default.h</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;configure \</span><br><span class="line">--build&#x3D;$(..&#x2F;config.guess) \</span><br><span class="line">--host&#x3D;$LFS_TGT \</span><br><span class="line">--prefix&#x3D;&#x2F;usr \</span><br><span class="line">CC_FOR_TARGET&#x3D;$LFS_TGT-gcc \</span><br><span class="line">--with-build-sysroot&#x3D;$LFS \</span><br><span class="line">--enable-initfini-array \</span><br><span class="line">--disable-nls \</span><br><span class="line">--disable-multilib \</span><br><span class="line">--disable-decimal-float \</span><br><span class="line">--disable-libatomic \</span><br><span class="line">--disable-libgomp \</span><br><span class="line">--disable-libquadmath \</span><br><span class="line">--disable-libssp \</span><br><span class="line">--disable-libvtv \</span><br><span class="line">--disable-libstdcxx \</span><br><span class="line">--enable-languages&#x3D;c,c++</span><br></pre></td></tr></table></figure><p>编译和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make DESTDIR&#x3D;$LFS install</span><br></pre></td></tr></table></figure><p>一样的创建<code>cc</code>到<code>gcc</code>的符号链接</p><pre><code>ln -sv gcc $LFS/usr/bin/cc</code></pre><p>至此本文就到这里，接下来就要进行 chroot 了。</p><blockquote><p>11.0 的手册相较于 9.0 而言第二部分的内容实在是太多了……<br>不理解为什么要把 chroot 后的操作也要放在这一部分。</p></blockquote>]]></content>
    
    
    <summary type="html">准备工作做完之后，就要开始搭建临时工具链了。
但说是工具链，其实还包括一些其他工具。

开始前的准备
首先当然是登录lfs用户。
之后检查下$LFS是否设置正确。

echo $LFS

之后，需要检查以下部分是否正确设置，虽然大部分都不需要刻意留意，但不排除像我这样有特殊习惯的用户会不满足以下条件。 

 1. shell 用的是 bash。
    不过目前大部分 shell 都是兼容 bash 的，比如我用的 zsh。
 2. sh 符号链接到 bash。
    这个绝大多数发行版都满足。
 3. /usr/bin/awk符号链接到 gawk。
    这个也不用在意
 4. /usr</summary>
    
    
    
    <category term="LFS" scheme="https://williamgong.github.io/categories/LFS/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="LFS" scheme="https://williamgong.github.io/tags/LFS/"/>
    
  </entry>
  
  <entry>
    <title>LFS 搭建 1 准备工作</title>
    <link href="https://williamgong.github.io/2021/11/19/lfs%E6%90%AD%E5%BB%BA1/"/>
    <id>https://williamgong.github.io/2021/11/19/lfs%E6%90%AD%E5%BB%BA1/</id>
    <published>2021-11-19T02:53:29.000Z</published>
    <updated>2021-12-04T13:52:12.466Z</updated>
    
    <content type="html"><![CDATA[<p>那么，现在就正式开始。<br>目前目标机的硬盘在宿主机的位置为<code>/dev/sdb</code>。      </p><h1 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h1><p>目前的分区方案如下</p><table><thead><tr><th>分区位置</th><th>大小</th><th>类型（挂载点）</th></tr></thead><tbody><tr><td><code>/dev/sdb1</code></td><td>256M</td><td>EFI 分区</td></tr><tr><td><code>/dev/sdb2</code></td><td>4G</td><td>swap</td></tr><tr><td><code>/dev/sdb3</code></td><td>剩余部分</td><td><code>/</code></td></tr></tbody></table><p>现在采用 <code>parted</code> 进行分区      </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># parted &#x2F;dev&#x2F;sdb</span><br><span class="line">(parted) mklabel gpt</span><br><span class="line">(parted) mkpart ESP fat32 1M 257M</span><br><span class="line">(parted) set 1 boot on</span><br><span class="line">(parted) mkpart primary linux-swap 257M 4353M</span><br><span class="line">(parted) mkpart primary ext4 4353M -1</span><br></pre></td></tr></table></figure><h1 id="建立文件系统"><a href="#建立文件系统" class="headerlink" title="建立文件系统"></a>建立文件系统</h1><p>分区完成后，接下来就是格式化。<br>目前，ESP 分区采用 fat32，根分区采用 ext4。      </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkfs.vfat &#x2F;dev&#x2F;sdb1</span><br><span class="line">mkswap &#x2F;dev&#x2F;sdb2</span><br><span class="line">mkfs.ext4 &#x2F;dev&#x2F;sdb3</span><br></pre></td></tr></table></figure><h1 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h1><p>首先，根据 LFS 手册的要求，设置<code>LFS</code>环境变量。<br>从现在开始，宿主机就要进入 root 进行操作了，当然理论上一直 sudo 也可以，但为了方便且预防一些奇奇怪怪的错误，还是进入 root 操作吧。<br>此处<code>$LFS</code>的值为 LFS 根分区在宿主机挂载点的位置。       </p><pre><code>export LFS=/mnt/lfs</code></pre><p>当然，也可以直接写在<code>~/.bashrc</code>里，方便。     </p><h1 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h1><p>现在就可以挂载分区了。<br>再设置好<code>$LFS</code>后，进行这些需要输入路径的操作就方便多了。<br>考虑到标准位置，把 ESP 挂载到<code>$LFS/boot/efi</code>下。     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mount &#x2F;dev&#x2F;sdb3 $LFS</span><br><span class="line"># mkdir -p $LFS&#x2F;boot&#x2F;efi</span><br><span class="line"># mount &#x2F;dev&#x2F;sdb1 $LFS&#x2F;boot&#x2F;efi</span><br></pre></td></tr></table></figure><h1 id="准备软件包"><a href="#准备软件包" class="headerlink" title="准备软件包"></a>准备软件包</h1><p>首先建立一个软件包存放目录，且这个目录 LFS 会要求打开粘滞模式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -v $LFS&#x2F;sources</span><br><span class="line">chmod -v a+wt $LFS&#x2F;sources</span><br></pre></td></tr></table></figure><p>这里使用 ustc 的镜像，镜像地址：<br><a href="http://mirrors.ustc.edu.cn/lfs/lfs-packages/11.0/">http://mirrors.ustc.edu.cn/lfs/lfs-packages/11.0/</a><br>本来要打算使用镜像里的 <code>wget-list</code>，但是好家伙，打开一看地址都是源地址，完美镜像。<br>而且此时 LCTT 给的列表是9.0的……<br>不过好心的 ustc 给了 tar 包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># cd $LFS&#x2F;sources</span><br><span class="line"># wget http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;lfs&#x2F;lfs-packages&#x2F;lfs-packages-11.0.tar</span><br><span class="line"># tar -xvf lfs-packages-11.0.tar</span><br></pre></td></tr></table></figure><p>此处对文件进行一些整理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mv $LFS&#x2F;sources&#x2F;11.0&#x2F;* $LFS&#x2F;sources&#x2F;</span><br><span class="line"># rm -r 11.0&#x2F;</span><br><span class="line"># rm lfs-packages-11.0.tar</span><br></pre></td></tr></table></figure><p>此处也可以检查下 checksum。      </p><h1 id="准备阶段收尾工作"><a href="#准备阶段收尾工作" class="headerlink" title="准备阶段收尾工作"></a>准备阶段收尾工作</h1><p>该部分主要是设置目录，用户，环境变量等一系列配置。      </p><h2 id="建立系统目录"><a href="#建立系统目录" class="headerlink" title="建立系统目录"></a>建立系统目录</h2><p>建立一些之后编译安装软件包时会用到的系统目录。<br>但此处创建的目录并不完全。<br>使用下面的脚本，以 root 运行。     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">mkdir -pv $LFS&#x2F;&#123;etc,var&#125; $LFS&#x2F;usr&#x2F;&#123;bin,lib,sbin&#125;</span><br><span class="line"></span><br><span class="line">for i in bin lib sbin; do</span><br><span class="line">ln -sv usr&#x2F;$i $LFS&#x2F;$i</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">case $(uname -m) in</span><br><span class="line">x86_64) mkdir -pv $LFS&#x2F;lib64 ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h2 id="建立工具目录"><a href="#建立工具目录" class="headerlink" title="建立工具目录"></a>建立工具目录</h2><p>还要建立一个存放临时工具链的目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mkdir -pv $LFS&#x2F;tools</span><br></pre></td></tr></table></figure><blockquote><p>相比于 9.0 的手册，11.0 版本少了将这个工具目录连接到<code>/</code>的操作，emmmmmm</p></blockquote><h2 id="创建-LFS-用户"><a href="#创建-LFS-用户" class="headerlink" title="创建 LFS 用户"></a>创建 LFS 用户</h2><p>毕竟在 root 下进行编译是十分危险的，创建一个普通用户很有必要。<br>虽说自用的用户就行，但在安装过程中还要设置一大堆环境变量，没人想把自己用户的环境变量搞得一团糟吧？      </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># groupadd lfs</span><br><span class="line"># useradd -s &#x2F;bin&#x2F;bash -g lfs -m -k &#x2F;dev&#x2F;null lfs</span><br></pre></td></tr></table></figure><p>此处创建用户的参数就根据自己的喜好了。<br>记得设置密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd lfs</span><br></pre></td></tr></table></figure><p>接下来要将 <code>$LFS</code>的目录的所有权改为 lfs。<br>因为指南提供的是多行代码，因此使用脚本运行要方便些。    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">chown -v lfs $LFS&#x2F;&#123;usr&#123;,&#x2F;*&#125;,lib,var,etc,bin,sbin,tools&#125;</span><br><span class="line">case $(uname -m) in</span><br><span class="line">x86_64) chown -v lfs $LFS&#x2F;lib64 ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><blockquote><p>当然这些目录的所有者后期是要改回来的，不然会出事情的。</p></blockquote><p>同时软件包源码目录的所有者也要改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chown -v lfs $LFS&#x2F;sources</span><br></pre></td></tr></table></figure><p>现在，就要登录 lfs 用户进行操作了。<br>如果要直接切换，使用<code>su - lfs</code>。</p><h2 id="设置环境变量-1"><a href="#设置环境变量-1" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p>首先在<code>~/.bash_profile</code>里加上如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec env -i HOME&#x3D;$HOME TERM&#x3D;$TERM PS1&#x3D;&#39;\u:\w\$ &#39; &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>用于清除多余的环境变量。<br>之后再在<code>~/.bashrc</code>里加上如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">set +h</span><br><span class="line">umask 022</span><br><span class="line">LFS&#x3D;&#x2F;mnt&#x2F;lfs</span><br><span class="line">LC_ALL&#x3D;POSIX</span><br><span class="line">LFS_TGT&#x3D;$(uname -m)-lfs-linux-gnu</span><br><span class="line">PATH&#x3D;&#x2F;usr&#x2F;bin</span><br><span class="line">if [ ! -L &#x2F;bin ]; then PATH&#x3D;&#x2F;bin:$PATH; fi</span><br><span class="line">PATH&#x3D;$LFS&#x2F;tools&#x2F;bin:$PATH</span><br><span class="line">CONFIG_SITE&#x3D;$LFS&#x2F;usr&#x2F;share&#x2F;config.site</span><br><span class="line">export LFS LC_ALL LFS_TGT PATH CONFIG_SITE</span><br></pre></td></tr></table></figure><blockquote><p>如果 lfs 使用了其他的 shell，需要根据具体 shell 确定写入的文件。<br>比如我用的是zsh，以上内容就要写到<code>~/.zprofile</code>和<code>~/.zshrc</code>里，同时 shell 的路径也要相应改动。<br>别无脑写进 bashrc，不然之后环境变量没配置成功还不知道呢。</p></blockquote><p>最后，运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~&#x2F;.bash_profile</span><br></pre></td></tr></table></figure><p>至此，准备部分结束。</p>]]></content>
    
    
    <summary type="html">那么，现在就正式开始。
目前目标机的硬盘在宿主机的位置为/dev/sdb。 

分区
目前的分区方案如下

分区位置大小类型（挂载点）/dev/sdb1256MEFI 分区/dev/sdb24Gswap/dev/sdb3剩余部分/现在采用 parted 进行分区 

1
2
3
4
5
6


# parted /dev/sdb
(parted) mklabel gpt
(parted) mkpart ESP fat32 1M 257M
(parted) set 1 boot on
(parted) mkpart primary linux-swap 257M 4353M
(parted) m</summary>
    
    
    
    <category term="LFS" scheme="https://williamgong.github.io/categories/LFS/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="LFS" scheme="https://williamgong.github.io/tags/LFS/"/>
    
  </entry>
  
  <entry>
    <title>LFS 的搭建 0 前言</title>
    <link href="https://williamgong.github.io/2021/11/15/lfs%E6%90%AD%E5%BB%BA0/"/>
    <id>https://williamgong.github.io/2021/11/15/lfs%E6%90%AD%E5%BB%BA0/</id>
    <published>2021-11-15T00:14:26.000Z</published>
    <updated>2021-12-04T13:52:12.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>其实一开始要搭建 LFS 时，我是拒绝的。<br>但奈何自己手贱加学校的教务系统出问题，我同时选择了操作系统和操作系统课程设计。<br>而正常情况下是不能同时选择的。<br>而操作系统课程设计的大作业，就是搭 LFS。<br>也罢，这也是我的终极目标，虽然早了点，时间还被一大堆大作业和实验报告占满了，还有 ddl 催命。<br>于是，我就只能硬着头皮上了。        </p><h1 id="选择的版本"><a href="#选择的版本" class="headerlink" title="选择的版本"></a>选择的版本</h1><p>秉承要安装就要最新版的原则，我选择了最新的11.0<br>对了，是 systemd 版本的。<br>不过根据现在 LCTT 的进度，中文版最新到 9.0，因此 11.0 的版本只能硬啃生肉。<br>当然，不同版本之间差距应该并不大，所以我会参考中文最新版的就是了。<br>也许这一波流程后我就可以去 LCTT 翻译文档了吧。 XD       </p><h1 id="需要的工具"><a href="#需要的工具" class="headerlink" title="需要的工具"></a>需要的工具</h1><p>首先，当然是一份 LFS 文档（<br>对于 LFS 的搭建，需要一个宿主机，目前选择为我现在在服务器上跑的 Gentoo 开发机。当然也可以选择用 liveCD，不过考虑到 LFS 要装很长时间，liveCD 并不好用。<br>至于要安装的机器，当然是虚拟机啦，配置如下：</p><ul><li>CPU：Intel G5420 4线程 amd64</li><li>内存：4G</li><li>SCSI 控制器：LSI 53C895A</li><li>硬盘：32G</li><li>网卡：Realtek RTL8139</li><li>BIOS：OVMF (UEFI)</li></ul><p>考虑到兼容性，目前不使用任何半虚拟化驱动</p><h1 id="主要安装流程"><a href="#主要安装流程" class="headerlink" title="主要安装流程"></a>主要安装流程</h1><p>LFS 的安装一般分为以下几个流程：</p><ol><li>准备工作：包括分区和编译临时工具链</li><li>安装：手动编译各软件包</li><li>配置：配置<strong>各种各样</strong>的配置文件</li></ol><p>具体流程其实和安装 Gentoo 差不多，但 LFS 既不会帮你自动编译也不提供 stage。可谓是真·从零开始。</p><h1 id="与标准-LFS-流程的改动"><a href="#与标准-LFS-流程的改动" class="headerlink" title="与标准 LFS 流程的改动"></a>与标准 LFS 流程的改动</h1><p>我在安装 LFS时，不会完全按照文档进行。<br>首先，我可能会使用一些其他发行版的工具，比如 Gentoo 的 genkernel 之类的（虽然这玩意真的很难用）<br>以及我会大量使用已经存在的配置文件，比如其他发行版的 fstab 等<br>我也会参考 Gentoo 或 Arch 等相关 wiki，毕竟这些文档可是相当好用的。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>撒，开始吧。</p>]]></content>
    
    
    <summary type="html">前言
其实一开始要搭建 LFS 时，我是拒绝的。
但奈何自己手贱加学校的教务系统出问题，我同时选择了操作系统和操作系统课程设计。
而正常情况下是不能同时选择的。
而操作系统课程设计的大作业，就是搭 LFS。
也罢，这也是我的终极目标，虽然早了点，时间还被一大堆大作业和实验报告占满了，还有 ddl 催命。
于是，我就只能硬着头皮上了。 

选择的版本
秉承要安装就要最新版的原则，我选择了最新的11.0
对了，是 systemd 版本的。
不过根据现在 LCTT 的进度，中文版最新到 9.0，因此 11.0 的版本只能硬啃生肉。
当然，不同版本之间差距应该并不大，所以我会参考中文最新版的就是了。
</summary>
    
    
    
    <category term="LFS" scheme="https://williamgong.github.io/categories/LFS/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="LFS" scheme="https://williamgong.github.io/tags/LFS/"/>
    
  </entry>
  
  <entry>
    <title>在 Proxmox VE 中添加 vTPM 的支持</title>
    <link href="https://williamgong.github.io/2021/06/24/%E5%9C%A8pve%E4%B8%AD%E5%A2%9E%E5%8A%A0%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AF%B9tpm%E7%9A%84%E6%94%AF%E6%8C%81/"/>
    <id>https://williamgong.github.io/2021/06/24/%E5%9C%A8pve%E4%B8%AD%E5%A2%9E%E5%8A%A0%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AF%B9tpm%E7%9A%84%E6%94%AF%E6%8C%81/</id>
    <published>2021-06-24T18:26:26.000Z</published>
    <updated>2021-12-04T13:52:12.538Z</updated>
    
    <content type="html"><![CDATA[<h1 id="！！注意-！！"><a href="#！！注意-！！" class="headerlink" title="！！注意 ！！"></a>！！注意 ！！</h1><p>PVE 7.0 已经添加了 TPM 支持，只需在 Web 界面添加设备即可。<br><strong>本文已经过时！</strong><br><strong>本文已经过时！</strong><br><strong>本文已经过时！</strong></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>虽然 Windows 11 的镜像早就泄露了，但在 6 月 24 日 23 点 Microsoft 才正式发布。发布会结束后，MS 官网放出了 Windows 11 的系统要求，其中一个必须要求是 TPM 2.0。<br>然而，Proxmox VE 并没有官方支持 vTPM ， 虽然有qemu 有相应支持，但网上对此的文档很少。因此，本文在此写出让 PVE 支持 qemu  vTPM 的方法以在虚拟机安装 Windows 11 预览版。    </p><h1 id="关于-Proxmox-VE-对-TPM-虚拟化的支持"><a href="#关于-Proxmox-VE-对-TPM-虚拟化的支持" class="headerlink" title="关于 Proxmox VE 对 TPM 虚拟化的支持"></a>关于 Proxmox VE 对 TPM 虚拟化的支持</h1><p>目前，qemu 已经通过 swtpm 支持了 vTPM ，但Proxmox 对此的支持还在开发中，并且预期时间未知。（Proxmox 工作人员的最近回复在今年 1 月。）<br>但可以安装 swtpm 并手动改配置文件，就是有亿点麻烦。<br>具体情况见<a href="https://forum.proxmox.com/threads/vtpm-support-do-we-have-guide-to-add-the-vtpm-support.56982/">这里</a>。<br>不过 PVE 对 qemu vTPM 支持的要求已经上 bug 追踪列表了。耐心等吧，总会有的。<br><a href="https://bugzilla.proxmox.com/show_bug.cgi?id=3075">Bugzilla – Bug 3075</a>     </p><h1 id="编译与安装-swtpm"><a href="#编译与安装-swtpm" class="headerlink" title="编译与安装 swtpm"></a>编译与安装 swtpm</h1><h2 id="在-Debian-下编译安装-swtpm"><a href="#在-Debian-下编译安装-swtpm" class="headerlink" title="在 Debian 下编译安装 swtpm"></a>在 Debian 下编译安装 swtpm</h2><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p>swtpm 有一个依赖 libtpms 也需要单独编译安装，这里也一起安装了。<br>swtpm 的源码:</p><pre><code>git clone https://github.com/stefanberger/swtpm.git</code></pre><p>libtpms 的源码:</p><pre><code>git clone https://github.com/stefanberger/libtpms.git</code></pre><h3 id="签出到稳定分支"><a href="#签出到稳定分支" class="headerlink" title="签出到稳定分支"></a>签出到稳定分支</h3><p>查看分支</p><pre><code>$ git branch -a</code></pre><p>签出时选择最新的稳定版即可。<br>在写这篇文章时最新版是0.6</p><pre><code>$ git checkout stable-0.6</code></pre><p>（这是签出 swtpm 的命令，libtpms 请自行选择版本）</p><h3 id="编译安装-libtpms"><a href="#编译安装-libtpms" class="headerlink" title="编译安装 libtpms"></a>编译安装 libtpms</h3><p>安装依赖:</p><pre><code>sudo apt-get -y install automake autoconf libtool gcc build-essential libssl-dev dh-exec pkg-config gawk</code></pre><p>编译:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;autogen.sh --with-openssl</span><br><span class="line">mv debian&#x2F;source debian&#x2F;source.old</span><br><span class="line">dpkg-buildpackage -us -uc -j4</span><br></pre></td></tr></table></figure><p>之后回到父目录，就可以看见 libtpms 的 deb 包了。<br>安装：</p><pre><code>sudo dpkg -i libtpms0_0*_amd64.deb libtpms-dev_0*_amd64.deb</code></pre><h3 id="编译-swtpm"><a href="#编译-swtpm" class="headerlink" title="编译 swtpm"></a>编译 swtpm</h3><p>安装依赖：</p><pre><code>sudo apt-get -y install  libfuse-dev libglib2.0-dev libgmp-dev expect libtasn1-dev socat tpm-tools python3-twisted gnutls-dev gnutls-bin  libjson-glib-dev python3-setuptools softhsm2 libseccomp-dev</code></pre><p>编译：</p><pre><code>dpkg-buildpackage -us -uc -j$(nproc)</code></pre><h3 id="编译后软件包介绍"><a href="#编译后软件包介绍" class="headerlink" title="编译后软件包介绍"></a>编译后软件包介绍</h3><p>编译完成后，编译父目录会生成很多包，其中以下几个包是最终使用的：</p><ul><li><code>libtpms-dev_*_amd64.deb</code> 这个应该是 swtpm 的编译依赖，但还是装在生产环境上吧，我也不清楚。</li><li><code>libtpms0_*_amd64.deb</code><br>以上两个包是 libtpms</li><li><code>swtpm-libs_*_amd64.deb</code></li><li><code>swtpm_*_amd64.deb</code></li><li><code>swtpm-tools_*_amd64.deb</code><br>以上是 swtpm</li></ul><p>其它的包就不用装了，用于 debug 的。</p><h3 id="福利"><a href="#福利" class="headerlink" title="福利"></a>福利</h3><p>已经有人写好一键安装脚本了，在这里：<br><a href="https://github.com/rayures/vTPM">rayures/vTPM</a><br>仅用于 Debian/Ubuntu。</p><h2 id="Gentoo-下的编译"><a href="#Gentoo-下的编译" class="headerlink" title="Gentoo 下的编译"></a>Gentoo 下的编译</h2><p>portage 中是有 swtpm 的 ebuild 的，但被<code>~amd64</code> mask 了。     </p><blockquote><p>因此，生产环境慎用！！！</p></blockquote><p>将 keyword 加入 <code>/etc/portage/package.keywords</code></p><pre><code>=app-crypt/swtpm-0.5.2 ~amd64=dev-libs/libtpms-0.8.3 ~amd64</code></pre><p>此时运行</p><pre><code>sudo emerge --ask swtpm</code></pre><p>即可。</p><h1 id="在-PVE-中添加-swtpm-设备"><a href="#在-PVE-中添加-swtpm-设备" class="headerlink" title="在 PVE 中添加 swtpm 设备"></a>在 PVE 中添加 swtpm 设备</h1><p>首先当然是把编译好的 deb 包装到 PVE 上。<br>记得用<code>dpkg --info</code>看看依赖，尤其是<code>swtpm-tools</code>。<br><strong>在安装<code>swtpm-tools</code>时注意先安装它的依赖，不然 dpkg 后再安装依赖的话就会出现循环依赖。</strong><br>swtpm 可以通过套接字/字符设备/CUSE 让 guest 访问 TPM。<br>此处使用这个脚本创建套接字设备:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">i&#x3D;0</span><br><span class="line">while [ -d &#x2F;tmp&#x2F;tpm$i ]; do</span><br><span class="line">let i&#x3D;i+1</span><br><span class="line">done</span><br><span class="line">tpm&#x3D;&#x2F;tmp&#x2F;tpm$i</span><br><span class="line"></span><br><span class="line">mkdir $tpm</span><br><span class="line">echo &quot;Starting $tpm&quot;</span><br><span class="line">sudo swtpm socket  -d --tpmstate dir&#x3D;$tpm --tpm2 \</span><br><span class="line">             --ctrl type&#x3D;unixio,path&#x3D;&#x2F;$tpm&#x2F;swtpm-sock &amp;</span><br><span class="line">sleep 2 # this should be changed to a netstat query</span><br></pre></td></tr></table></figure><p>之后应该可以在<code>/tmp/</code>下看见设备。    </p><h2 id="为虚拟机添加设备"><a href="#为虚拟机添加设备" class="headerlink" title="为虚拟机添加设备"></a>为虚拟机添加设备</h2><p>获取 VNC 端口号：</p><blockquote><p>我也不知道这是什么，但后面添加参数需要这个数字，求大佬告知。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">vncport&#x3D;0</span><br><span class="line">port&#x3D;5900</span><br><span class="line">while nc -z 127.0.0.1 $port; do</span><br><span class="line">    port&#x3D;$((port + 1))</span><br><span class="line">    vncport&#x3D;$((vncport + 1))</span><br><span class="line">done</span><br><span class="line">echo $vncport</span><br></pre></td></tr></table></figure><p>之后再虚拟机配置文件里加一行：</p><pre><code>args: -drive file=$&#123;disk&#125;,format=raw,if=virtio,cache=none -chardev socket,id=chrtpm,path=/$tpm/swtpm-sock -tpmdev emulator,id=tpm0,chardev=chrtpm -device tpm-tis,tpmdev=tpm0 -vnc :$nextvnc -m 2048</code></pre><p><code>$&#123;disk&#125;</code>为虚拟机磁盘镜像路径，<code>$tpm</code>为 tpm 设备路径，<code>$nextvnc</code>是上面脚本的输出。全部为绝对路径。<br>启动虚拟机，就可以再 sealBIOS 里看到TPM 设置了。</p><h2 id="关于脚本的说明"><a href="#关于脚本的说明" class="headerlink" title="关于脚本的说明"></a>关于脚本的说明</h2><p>脚本不是我写的，原帖在这里：<br><a href="https://s3hh.wordpress.com/2018/06/03/tpm-2-0-in-qemu/">S3hh’s Blog</a><br>但该脚本似乎无法直接使用，于是我把它拆成上面的几个脚本和操作。</p><h1 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h1><p>进行上述操作后，如果将虚拟机以裸机启动后再强行关机，会导致无法再启动，需要重新创建设备。</p>]]></content>
    
    
    <summary type="html">！！注意 ！！
PVE 7.0 已经添加了 TPM 支持，只需在 Web 界面添加设备即可。
本文已经过时！
本文已经过时！
本文已经过时！

前言
虽然 Windows 11 的镜像早就泄露了，但在 6 月 24 日 23 点 Microsoft 才正式发布。发布会结束后，MS 官网放出了 Windows 11 的系统要求，其中一个必须要求是 TPM 2.0。
然而，Proxmox VE 并没有官方支持 vTPM ， 虽然有qemu 有相应支持，但网上对此的文档很少。因此，本文在此写出让 PVE 支持 qemu vTPM 的方法以在虚拟机安装 Windows 11 预览版。 

关于 Pro</summary>
    
    
    
    <category term="杂谈" scheme="https://williamgong.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="杂谈" scheme="https://williamgong.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="Proxmox VE" scheme="https://williamgong.github.io/tags/Proxmox-VE/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建 Home Lab 3 安装 Gentoo 中的那些坑</title>
    <link href="https://williamgong.github.io/2021/05/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab3/"/>
    <id>https://williamgong.github.io/2021/05/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab3/</id>
    <published>2021-05-12T22:57:20.000Z</published>
    <updated>2021-12-04T13:52:12.538Z</updated>
    
    <content type="html"><![CDATA[<p>当 Proxmox VE 已经搭建完成后，就可以准备开发机了。</p><h1 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h1><p>其实 PVE 虚拟机创建向导很舒服，在一般情况下照着来就行。但对于 Gentoo，从这里开始就有坑了。<br>首先是 CPU，这个虽然不是坑，但这是我的一个小小的建议，将 CPU 类型设置为 host。毕竟由于 Gentoo 的特性，可以针对 CPU 进行优化，对于像好好玩 Gentoo 的人来说，个人认为这一点蛮重要的。而且由于要编译嘛，CPU 性能能榨干一点是一点。<br>此外就是各驱动了。<strong>千万不要选 VirtIO 驱动！除非你第一次安装就自己配置内核而且不使用 genkernel 生成的 initramfs。</strong><br>因为以前被坑过无数次了，所以这次第一次安装我选择 genkernel 直接搞定。而 genkernel 在不加参数的情况下是不会选中任何 virtIO 相关选项的……（这是我后来才知道的）。所以如果不想被 genkernel 坑死的话就不要上 virtIO 驱动，至少安装系统时不要选。</p><h1 id="安装-Gentoo-的指导"><a href="#安装-Gentoo-的指导" class="headerlink" title="安装 Gentoo 的指导"></a>安装 Gentoo 的指导</h1><p>本文不会完整记录安装 Gentoo 的流程，因为相比于我自己写的，官方的安装手册要专业得多。而对于大多数流程来说，参考手册就行了。<br>此外，相比几年前 Gentoo 安装手册中的不完整而且烂的翻译，现在的中文手册已经看不到英文了，而且中文的翻译质量也不差。所以大可以安心照手册安装，不会有什么让人摸不着头脑的地方的。<br>此处为安装手册的链接：<a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/zh-cn">Gentoo AMD64 Handbook</a> 感谢每一位翻译贡献者的努力！    </p><h1 id="安装-Gentoo-的过程"><a href="#安装-Gentoo-的过程" class="headerlink" title="安装 Gentoo 的过程"></a>安装 Gentoo 的过程</h1><p>由于我本次安装使用的 init 是 systemd，而手册默认是为 openRC 准备的，因此我会写下不同于手册的，有关于 systemd 的配置。  </p><h2 id="选择-stage3"><a href="#选择-stage3" class="headerlink" title="选择 stage3"></a>选择 stage3</h2><p>如果要用 systemd 的话，记得选带 systemd 的 stage3。<br>虽然使用 openRC 的也行，但是切换完配置后会下载编译 systemd 及其相关依赖，挺耗时间的。<br>对了，建议到镜像站下载，比如 tuna。</p><h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p>由于 PVE 默认使用 SeaBIOS，所以就不用 ESP 了。但如果硬盘使用 GPT 的话记得加一个 BIOS 启动分区。</p><h2 id="选择配置文件"><a href="#选择配置文件" class="headerlink" title="选择配置文件"></a>选择配置文件</h2><p>如果你使用的是最新的 stage3 而且类型选择正确的话，这一步是可以跳过的。不过保险起见，还是用<code>eselect profile list</code>看一眼吧。<br>如果你发现系统默认的配置文件不是你想要的话，恭喜你，你多半选错 stage3 了！但其实也没什么，重新选择配置就行了，就是要多等一会了（指至少 1 小时，具体时间取决于机器配置，XD。</p><h2 id="locale-配置"><a href="#locale-配置" class="headerlink" title="locale 配置"></a>locale 配置</h2><p>在更改<code>/etc/locale.gen</code>，运行<code>locale-gen</code>后，最后的选择 locale 就不能按照手册来了。直接修改/创建<code>/etc/locale.conf</code>，在里面输入<code>LANG=&quot;en_US.utf8&quot;</code>即可。</p><blockquote><p>此处非常不建议选择有关 zh_CN 的任何 locale。除非在安装时就安装好了桌面环境并确保一旦重新启动就能进入桌面，不然就等着满屏幕的口口口吧。</p></blockquote><h2 id="内核配置"><a href="#内核配置" class="headerlink" title="内核配置"></a>内核配置</h2><p>如果在这时配置 kernel 也是可以的，但我更喜欢在系统能正常使用的时候再折腾，所以使用 genkernel 一条龙服务吧。<br>而如果选择 genkernel 的话，之前的驱动选择就十分重要了。当然，如果你和我一样在安装时选择了 virtIO 驱动，很快就会看到我之前被卡了无数次的错误，以及 genkernel 对于 virtIO 无尽的坑。</p><h2 id="主机名与-machine-ID"><a href="#主机名与-machine-ID" class="headerlink" title="主机名与 machine ID"></a>主机名与 machine ID</h2><p>systemd 需要一个 machine ID，运行<code>systemd-machine-id-setup</code>。<br>对于主机名，直接在<code>/etc/hostname</code>写就行了。默认该文件是自己创建的，所以看到 nano 显示是新文件时不用惊慌。<br>对了，记得把<code>/etc/hosts</code>中的<code>localhost</code>改为自己的主机名。</p><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><p>如果使用 dhcp 的话，记得重启后一波<code>systemctl enable dhcpcd.service</code>和<code>systemctl start dhcpcd.service</code>二连就行。<br>但如果你和我一样使用静态 IP 的话，就不能使用 dhcpcd 了。</p><blockquote><p>其实按照 wiki，是可以使用 dhcpcd 配置静态 IP 的，但我尝试了没成功。</p></blockquote><p>此处使用 systemd-networkd 配置静态 IP。在<code>/etc/systemd/network</code>下创建 network 配置文件，比如下面的配置文件<code>20-wired.network</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Match]</span><br><span class="line">Name&#x3D;enp1s0</span><br><span class="line"></span><br><span class="line">[Network]</span><br><span class="line">Address&#x3D;10.1.10.9&#x2F;24</span><br><span class="line">Gateway&#x3D;10.1.10.1</span><br><span class="line">DNS&#x3D;10.1.10.1</span><br><span class="line">#DNS&#x3D;8.8.8.8</span><br></pre></td></tr></table></figure><p>记得把<code>Name</code>改为自己的网卡名称。<br>对了，重启后也要进行<code>systemctl enable systemd-networkd.service</code>与<code>systemctl start systemd-networkd.service</code>二连。</p><h2 id="日志工具"><a href="#日志工具" class="headerlink" title="日志工具"></a>日志工具</h2><p>因为 systemd 已经自带了，所以手册关于安装日志工具的部分跳过就好。</p><h1 id="关于错误：block-device-is-not-a-valid-root-device-的解决方法"><a href="#关于错误：block-device-is-not-a-valid-root-device-的解决方法" class="headerlink" title="关于错误：block device is not a valid root device 的解决方法"></a>关于错误：block device is not a valid root device 的解决方法</h1><p>如果你和我一样在安装时 scsi 控制器选择了 virtIO 驱动时，就会在开机时看到以下类似错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;dev&#x2F;loop0: TYPE&#x3D;&quot;squashfs&quot;</span><br><span class="line">&#x2F;dev&#x2F;sda2: UUID&#x3D;&quot;eefd6088-354b-4b5b-97d8-5df2df******&quot; TYPE&#x3D;&quot;swap&quot; PARTLABEL&#x3D;&quot;primary&quot; PARTUUID&#x3D;&quot;ea452ed8-8b99-4a26-a662-ab43c******&quot;</span><br><span class="line">............</span><br><span class="line"></span><br><span class="line">block device is not a valid root device</span><br></pre></td></tr></table></figure><p>并且只能进入紧急命令行。<br>不要急，进入紧急命令行，看看<code>/dev/</code>下有什么。<br>如果我没猜错，安装根文件的 sda，要么不见了，要么变成了 hda。<br>对于我的情况，是直接不见了。<br>这种情况一般是 scsi 控制器出问题了，而且多半是驱动问题，导致根文件所在的硬盘无法加载。<br>而我的情况是，内核没有打入任何 virtIO 驱动，initramfs 也没有。<br>这就是 genkernel 对于 virtIO 的巨坑，因为它对 genkernel 支持不佳，内核编译时不会选中相关选项，就算自己选上了，在制作 initramfs 时也不会打入 virtIO 相关模块。<br>如果想要 genkernel 加上 virtIO 选项以及在 initramfs 中打入相关模块，请加上<code>--virtio</code>的选项。<br>同时，要自己配置内核时，也要选中 virtIO 的相关选项。<br>具体可参见<a href="https://wiki.gentoo.org/wiki/User:Flow/Gentoo_as_KVM_guest">User:Flow/Gentoo as KVM guest</a></p>]]></content>
    
    
    <summary type="html">当 Proxmox VE 已经搭建完成后，就可以准备开发机了。

创建虚拟机
其实 PVE 虚拟机创建向导很舒服，在一般情况下照着来就行。但对于 Gentoo，从这里开始就有坑了。
首先是 CPU，这个虽然不是坑，但这是我的一个小小的建议，将 CPU 类型设置为 host。毕竟由于 Gentoo 的特性，可以针对 CPU 进行优化，对于像好好玩 Gentoo 的人来说，个人认为这一点蛮重要的。而且由于要编译嘛，CPU 性能能榨干一点是一点。
此外就是各驱动了。千万不要选 VirtIO 驱动！除非你第一次安装就自己配置内核而且不使用 genkernel 生成的 initramfs。
因为以前被坑</summary>
    
    
    
    <category term="Home Lab" scheme="https://williamgong.github.io/categories/Home-Lab/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="Gentoo" scheme="https://williamgong.github.io/tags/Gentoo/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建 Home Lab 2 Proxmox VE 的搭建</title>
    <link href="https://williamgong.github.io/2021/05/05/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab2/"/>
    <id>https://williamgong.github.io/2021/05/05/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab2/</id>
    <published>2021-05-05T23:03:24.000Z</published>
    <updated>2021-12-04T13:52:12.534Z</updated>
    
    <content type="html"><![CDATA[<p>在硬件和 BIOS 配置完成后，就要着手开始搭建 Hypervisor 了。<br>因为要跑的客户机基本都是 Linux，所以使用基于 KVM 和 QEMU 的 Hypervisor 显然要更好。<br>所以我选择了 PVE，虽然每次管理都要看一遍订阅提醒就很烦。     </p><blockquote><p>当然，用 QEMU 加上 WebVirtMgr 自己糊一个 Hypervisor 也是可以的，我之前本来要使用这个方案的。<br>但毕竟稳定性最重要，而自己糊的肯定比不上专业的，而且看了看 PVE 的手册后……真香。      </p></blockquote><h1 id="Proxmox-VE-的安装"><a href="#Proxmox-VE-的安装" class="headerlink" title="Proxmox VE 的安装"></a>Proxmox VE 的安装</h1><blockquote><p>本 Blog 不会写出完整安装过程，只有在安装时的注意事项和各种坑。毕竟安装这玩意就比安装 Debian 复杂一点，看手册就行了。<br>推荐这篇 Proxmox VE 6.2 的翻译版手册，虽然是 6.2 版本稍微有点老，但可参考性还是不用担心的。<br>这里是链接：<a href="https://www.proxmox.wiki/?thread-137.htm">Proxmox6.2中文手册</a><br>在此感谢翻译该手册的大佬。</p></blockquote><h2 id="挂载安装-ISO"><a href="#挂载安装-ISO" class="headerlink" title="挂载安装 ISO"></a>挂载安装 ISO</h2><p>HPE Gen 10 Plus 具有网络挂载 ISO 的功能，直接提供 ISO 的 URL 就行了。但这功能只有在网速极快（比如千兆/万兆内网内有装有 ISO 的 NAS）的环境下才有意义。<br>如果在大多数情况下使用该功能的话，就是一杯茶，一包烟，ISO 载入看一天了。     </p><blockquote><p>因为这个功能是直接挂载，而不是下载到本地再加载。<br>毕竟想想也是，硬盘都还没分区表呢下载的文件放哪？<br>天真的我之前一度以为这功能是自动下载后在加载……蠢哭了。</p></blockquote><p>所以老老实实做启动 U 盘吧。记得插在机器后面的 USB 插槽上。<br>当然，从 Debian 上安装 Proxmox VE 也是可以的，但此处不过多说明，详情请见手册。</p><h2 id="分区设置"><a href="#分区设置" class="headerlink" title="分区设置"></a>分区设置</h2><p>Proxmox VE 的分区设置很奇怪，坑也很多，所以我也没研究透，但此处我在此写下我遇到的坑以及些许建议。<br>首先，安装 PVE 时，只能在一块盘上进行分区，所以像我这样有多硬盘的数据盘在安装完成后再分区吧。<br>在选择分区硬盘的旁边有 Options 的高级设置，可以设置分区的文件系统，但此处不建议改动，最多取消掉 swap 分区（此机器的 Hypervisor 上使用 swap 没有意义，尤其是我上了 32G 内存），除非你知道自己在做什么。<br>在 PVE 的默认分区方案下，硬盘会分别生成一个 bios 启动分区，一个 EFI 分区，剩下的空间会被划分为叫做 pve 的 lVM 卷组，里面是 root, data, swap 逻辑卷。<br>对于 data 卷，该分区就是 PVE 存储各种数据的分区，在安装后的管理界面上有两个卷，分别是 local 和 local-lvm，就是在 data 卷里的。其中 local 卷存储各种 ISO 镜像和容器模板，而 local-lvm 则存储虚拟机硬盘和容器。<br>如要取消 swap，则将 Options 中的 swapsize 设置为 0。<br>当然，在多硬盘情况下，可以取消 data 卷，将 maxvz 设置为 0 即可（但我没试验过，慎用）。      </p><blockquote><p>别问我为什么会同时有 bios 启动分区和 esp，我也不知道。</p></blockquote><h2 id="地点，时区设置"><a href="#地点，时区设置" class="headerlink" title="地点，时区设置"></a>地点，时区设置</h2><p>PVE 的地点设置不是选择的，需要自己输入，输入 China 就好。<br>对于时区，选择 Asia/Shanghai 或 Asia/Hong_Kong 都行，都是 GMT+8。      </p><h1 id="安装后的配置"><a href="#安装后的配置" class="headerlink" title="安装后的配置"></a>安装后的配置</h1><h2 id="网络管理界面"><a href="#网络管理界面" class="headerlink" title="网络管理界面"></a>网络管理界面</h2><p>PVE 的网络管理界面地址默认是本机 IP:8006，开机后机器如果链接 tty 的话会显示这个地址。</p><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><p>在 PVE 的管理界面，设置用户很简单，但在我的使用场景下，只用 root 就足够了。如果有多个用户要维护 PVE 的话，可以看看 PVE 复杂的权限系统。      </p><h2 id="ZFS-配置"><a href="#ZFS-配置" class="headerlink" title="ZFS 配置"></a>ZFS 配置</h2><p>管理界面创建 zpool 储存池也很方便，单盘创建 zpool 或创建 raidz 都不难，还可以设置各种参数和选项，比如我就打开了压缩功能。<br>对了，zpool 创建时是以硬盘为单位，创建 zpool 需要至少一块硬盘。<br>此外，ZFS 对内存的要求很高，现在推荐的使用 ZFS 的最小内存容量为基础 4G，zpool 总容量每 1T 额外加 1G。<br>而且 ZFS 在使用时会将大量内存用作缓存，我的机器平时运行就用了 20G+，而其中虚拟机的内存一共 10G。不过可以设置 ZFS 的内存使用上限，在 /etc/modprobe.d/zfs.conf 中输入<code>options zfs zfs_arc_max=[number]</code>即可。<code>[number]</code>为你想要设置的上限。<br>当然，也可以为储存池设置 SSD 缓存盘或 ZIL 日志盘，比如在我的分区方案下，SSD 上不设置 data 卷，剩余空间作为缓存盘，可以改善 ZFS 的性能。    </p><blockquote><p>但我还是想把一部分虚拟机硬盘放在 SSD 上。</p></blockquote>]]></content>
    
    
    <summary type="html">在硬件和 BIOS 配置完成后，就要着手开始搭建 Hypervisor 了。
因为要跑的客户机基本都是 Linux，所以使用基于 KVM 和 QEMU 的 Hypervisor 显然要更好。
所以我选择了 PVE，虽然每次管理都要看一遍订阅提醒就很烦。 

当然，用 QEMU 加上 WebVirtMgr 自己糊一个 Hypervisor 也是可以的，我之前本来要使用这个方案的。
但毕竟稳定性最重要，而自己糊的肯定比不上专业的，而且看了看 PVE 的手册后……真香。 

Proxmox VE 的安装
本 Blog 不会写出完整安装过程，只有在安装时的注意事项和各种坑。毕竟安装这玩意就比安装 De</summary>
    
    
    
    <category term="Home Lab" scheme="https://williamgong.github.io/categories/Home-Lab/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="Proxmox VE" scheme="https://williamgong.github.io/tags/Proxmox-VE/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建 Home Lab 1 HPE Gen 10 Plus 安装与配置</title>
    <link href="https://williamgong.github.io/2021/03/31/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab1/"/>
    <id>https://williamgong.github.io/2021/03/31/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab1/</id>
    <published>2021-03-31T22:47:08.000Z</published>
    <updated>2021-12-04T13:52:12.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主机的拆卸"><a href="#主机的拆卸" class="headerlink" title="主机的拆卸"></a>主机的拆卸</h1><p>这是 HPE Gen 10 Plus 正面：<br><img src="gen10p-front.jpg" alt="前面照"><br>前面板背后是四个横置的硬盘柜，面板上铭牌处的凹槽其实是个提手，往外一拉就可以拆卸。在外壳打开后侧面会有两个卡扣用以锁定前面板防止在正常使用时把面板抽出来（虽然可能性很小）。左下角是两个 USB3.2 接口，而且据称在后面的 USB 插槽还有空余的时候就不会识别插在这两个端口的 WTG 设备。       </p><blockquote><p>具体可以参考这篇文章：<a href="https://www.chiphell.com/thread-2246322-1-1.html">[整机搭建] &lt;更新软件篇&gt;HPE ProLiant MicroServer Gen10 Plus 开箱与扩展 </a></p></blockquote><p>主机的背后是风扇和各种插槽。包括四个 USB 2.0 插槽，一个 VGA 接口，一个 DP 1.0 接口，四个 RJ45 端口，速度应该是千兆。此外还有两个预置插槽，但上面的是 ILO 网卡预置的，下面的才是标准 PCI-E。<br>机身背后有两颗手拧螺丝和两颗涂黑的螺丝。卸下手拧螺丝后就可以卸下外壳，但只有在卸下那两颗黑色的螺丝后才能抽出主板。      </p><blockquote><p>整台机器的所有螺丝都是六角形的，但有一字刻痕，所以没有六角螺丝刀的话也可以试试大一些的一字螺丝刀。</p></blockquote><p>这是抽出主板后的侧面照：<br><img src="gen10p-side.jpg" alt="主板"><br>上面的内存就是用了国产颗粒的光威奕 Pro：<br><img src="ram.jpg" alt="内存"><br>包装也是充满中国风的：<br><img src="ram-pack.jpg" alt="中国风的包装"></p><p>硬盘柜是标准 3.5 英寸的。不过当我把硬盘插在上面的口时，硬盘一晃一晃的，有点糟心。不过范围很小，只要不是天天搬机器玩应该问题不大。<br>不过如果要插 2.5 英寸的硬盘就只能买硬盘盒了。<strong>不要买硬盘支架！</strong> SATA 接口是固定在硬盘柜内侧的，而一般的支架是为用连接线的硬盘柜而设计的，如果非要装的话，硬盘柜的接口与硬盘接口会有近 1 厘米的偏差。老老实实买硬盘盒吧，别贪便宜。</p><h1 id="ILO-破解卡"><a href="#ILO-破解卡" class="headerlink" title="ILO 破解卡"></a>ILO 破解卡</h1><p>主机上的 ILO 不是直接能用的，按<strong>正常</strong>方法，开启 ILO只能插专用的 ILO 网卡。这玩意在某宝/某鱼上不到 50 块就能买。<br>但，也有邪门的方法。<br>根据<a href="http://ylys.net/post/1114.html">这篇文章</a>，只需短接两个端口，就可以以共享网卡的形式使用 ILO。如果动手能力强的话，可以在槽内插铜线或者飞线，不过前者不稳定后者要改回来又太麻烦。<br>于是有位老哥自己画了一个破解卡的 PCB 设计图，送去嘉立创 5 块钱就可以激活 ILO。这是原帖：<br><a href="https://www.chiphell.com/thread-2308433-1-1.html"> [NAS] HPE MicroServer Gen10+ ILO5破解卡制作方式共享，包括电路板文件 </a><br>这是我自己下单的成品：<br><img src="ilo.jpg" alt="嘉立创最小下单数量是 5 个，剩下的拿去当钥匙扣了。（大雾）"></p><blockquote><p>也就是说 ILO 控制芯片是集成在主板内的，那个 ILO 网卡里只有一个网卡模块。<br>反正我觉得这个网卡纯属智商税……</p></blockquote><h1 id="ILO-设置"><a href="#ILO-设置" class="headerlink" title="ILO 设置"></a>ILO 设置</h1><p>在设置 ILO 前，路由器要先分配静态 IP，毕竟没人想每次登录都要进路由器看看 IP 不是？<br>开机按 F9 和 F10 都可以进入 BIOS。不过按 F9 是直接的 BIOS 界面，F10 进入的是 Intelligent Provisioning 界面。后者界面更友好也支持鼠标操作。有鼠标的话建议后者。<br>如果使用共享端口的话，请注意这个端口只能是端口 1 或 2 而且默认是 1。</p>]]></content>
    
    
    <summary type="html">主机的拆卸
这是 HPE Gen 10 Plus 正面：

前面板背后是四个横置的硬盘柜，面板上铭牌处的凹槽其实是个提手，往外一拉就可以拆卸。在外壳打开后侧面会有两个卡扣用以锁定前面板防止在正常使用时把面板抽出来（虽然可能性很小）。左下角是两个 USB3.2 接口，而且据称在后面的 USB 插槽还有空余的时候就不会识别插在这两个端口的 WTG 设备。 

具体可以参考这篇文章：[整机搭建] &lt;更新软件篇&gt;HPE ProLiant MicroServer Gen10 Plus 开箱与扩展 

主机的背后是风扇和各种插槽。包括四个 USB 2.0 插槽，一个 VGA 接口，一个 DP 1.0 接口</summary>
    
    
    
    <category term="Home Lab" scheme="https://williamgong.github.io/categories/Home-Lab/"/>
    
    
    <category term="硬件" scheme="https://williamgong.github.io/tags/%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建 Home Lab 0 硬件的选择与架构方案的确定</title>
    <link href="https://williamgong.github.io/2021/03/28/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab0/"/>
    <id>https://williamgong.github.io/2021/03/28/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab0/</id>
    <published>2021-03-28T22:06:20.000Z</published>
    <updated>2021-12-04T13:52:12.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>搭建 Home Lab 的想法，起源于我有一次运行虚拟机的时候。<br>虽然我现在的主力笔记本性能不差，16G 内存 + 256G SSD，但众所周知 Chrome 是著名的性能消耗大户，导致我的内存有一半被它吞了；而且由于笔记本上安装的重型软件和游戏实在太多了，尤其是游戏，占了 60G+ 的空间，导致剩余硬盘空间捉襟见肘。因此每一次使用虚拟机时，都要扣扣索索的盘算着分配的内存和虚拟磁盘的容量。更令人恼火的是，每次创建虚拟机，都要删掉一个游戏或者是占用了大量磁盘空间的软件，而且每次跑虚拟机只是测试一下而已，没过多久就要删，而删去虚拟机的时候再去下载这些程序是十分痛苦的事情。因此我便产生了专门买服务器跑虚拟机的想法。<br>而搭建 Home Lab 的另外一个原因，是因为折腾。<br>曾经我一直在一台 10 年前购入的 Lenovo 笔记本上跑 Gentoo，但由于<strong>各 种 各 样</strong>的原因，Gentoo 一直没安装成功，这称为了我心中的一根刺；而且我手头缺少一台 Linux 开发机，虽然 WSL 已经能满足大部分需求，但有些东西是 WSL 做不到的。而搭建一台 Home Lab，能做到All in One，开发机什么的将不再是问题。      </p><blockquote><p>虽然缺少 Linux 开发机是一个伪需求……</p></blockquote><h1 id="对于Home-Lab的需求"><a href="#对于Home-Lab的需求" class="headerlink" title="对于Home Lab的需求"></a>对于Home Lab的需求</h1><p>既然要选择买服务器搭建 Home Lab，那就一步到位吧。<br>那我对 Home Lab的需求是什么呢？</p><ol><li><strong>NAS</strong>。我喜欢屯资源，什么无损音乐，番剧电影，盗版游戏加起来快有几百 G 了，虽然手头有个 2T 的移动硬盘，但每一次连接和卸载移动硬盘十分麻烦；而且我经常挂机下载，一挂机就是几天，对于笔记本而言总会有稳定性问题，用专用的机器进行显然要好很多。</li><li><strong>开发机</strong>。毕竟我要折腾 Gentoo，天天跑编译，CPU 性能还是挺重要的，至少成品 NAS 常用的 Atom，赛扬会有些吃力。</li><li><strong>测试机</strong>。有时我需要一台 Windows 测试机试毒养蛊，有时又会开一台 Linux 虚拟机折腾。不过由于只是测试，性能需求会小很多。</li></ol><h1 id="硬件的选择"><a href="#硬件的选择" class="headerlink" title="硬件的选择"></a>硬件的选择</h1><p>本人学生党，对硬件的选择自然是越便宜越好，但在金钱与性能之间权衡是一件很痛苦的事情。死来想去，确认了如下方案。</p><h2 id="服务器主机"><a href="#服务器主机" class="headerlink" title="服务器主机"></a>服务器主机</h2><p>看了几个月，最终确认了购入服务器的型号：HPE ProLiant MicroServer Gen10 Plus。<br>为什么要选择这台机器呢？</p><ol><li><strong>小</strong>。机身设计十分紧凑，应该是四盘位微型服务器的极限了，而且高度只有它的前代产品的一半左右。放在宿舍里也不占空间，也容易搬。</li><li><strong>性能不差</strong>。高配的版本使用的 E3-2200 CPU 性能肯定不辍，但多达 71W 的 TDP 和价钱使我果断放弃，但低配的 G5420 性能也不差。</li><li><strong>易于拆装和升级</strong>。不像一部分　NAS　将　CPU　焊在主板上，这台机器　CPU　可以拆卸，而且接口是　LGA1151，虽然不能换大部分至强 CPU，但可以装大部分桌面级 CPU 和一部分 E3，并且高性能服务器级 CPU 与我无缘。虽然我不会上桌面级的 U，但至少还有的选。内存标准最大容量 32G，而且实测最高可以到 64G（当然也与选择的 CPU 有关）。两个标准的 DDR4 内存插槽，支持双通道和 ECC。此外还配有一个标准的 PCI-E 3.0 插槽和一个专用于 ILO 的阉割版 PCI-E 插槽（等于除了插 ILO 网卡外没什么用）。不过这也是它的一个缺点。（但至少还有一个插槽不是吗？）</li></ol><p>我的机器是在闲鱼上买的二手未开封机器，相比与狗东上 6000+ 的价格，闲鱼上的价格只有三分之二，而且和全新的没区别。（除了容易被坑，毕竟虽然只有三分之二还是 将近 4000 RMB，被骗了就真的难受了。）</p><h2 id="内存与硬盘"><a href="#内存与硬盘" class="headerlink" title="内存与硬盘"></a>内存与硬盘</h2><p>内存本来是准备一条 16G 的，但下单的时候没注意买成了两条，于是变成了 32G。型号的光威奕 PRO，国产颗粒。虽说支持国产是一个因素，但更重要的原因是便宜。<br>至于硬盘，由于要建 NAS，硬盘不敢买差的，于是选择了 2T 的希捷酷狼和一个金士顿的 128G SATA SSD 用作系统盘。</p><h2 id="网络设备"><a href="#网络设备" class="headerlink" title="网络设备"></a>网络设备</h2><p>由于要开各种网络服务，一个路由器是很有必要的，但只需要有就行了。不过由于需要校园网拨号，于是买了一个二手小娱 C3 刷 Open WRT，不到 100 RMB。</p><h1 id="系统架构的确定"><a href="#系统架构的确定" class="headerlink" title="系统架构的确定"></a>系统架构的确定</h1><p>曾经我打算在主机上直接装 Gentoo，其他的开虚拟机，但毕竟实验/开发环境天天挂，最后还是选择在主机上装 Hypervisor，各种服务跑虚拟机上的方案。这个 Hypervisor 将同时运行至少两台虚拟机，NAS 和开发机。有时还要同时运行测试机和跑各种 docker/LXC 的虚拟机。<br>Hypervisor 我最终选择了 Proxmox VE。这玩意如果不订阅每次登录都要弹警告很烦人，因此我曾一度打算装 kvm 和 qemu 自己糊，但实际用起来后我直呼真香。NAS 我选择了OpenMediaVault，开发机不用多说自然是 Gentoo。</p>]]></content>
    
    
    <summary type="html">前言
搭建 Home Lab 的想法，起源于我有一次运行虚拟机的时候。
虽然我现在的主力笔记本性能不差，16G 内存 + 256G SSD，但众所周知 Chrome 是著名的性能消耗大户，导致我的内存有一半被它吞了；而且由于笔记本上安装的重型软件和游戏实在太多了，尤其是游戏，占了 60G+ 的空间，导致剩余硬盘空间捉襟见肘。因此每一次使用虚拟机时，都要扣扣索索的盘算着分配的内存和虚拟磁盘的容量。更令人恼火的是，每次创建虚拟机，都要删掉一个游戏或者是占用了大量磁盘空间的软件，而且每次跑虚拟机只是测试一下而已，没过多久就要删，而删去虚拟机的时候再去下载这些程序是十分痛苦的事情。因此我便产生了专门买</summary>
    
    
    
    <category term="Home Lab" scheme="https://williamgong.github.io/categories/Home-Lab/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="硬件" scheme="https://williamgong.github.io/tags/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="网络" scheme="https://williamgong.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>“O泡果奶”app解析2 lua文件解密与反编译</title>
    <link href="https://williamgong.github.io/2020/10/21/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%902_lua%E6%96%87%E4%BB%B6%E8%A7%A3%E5%AF%86%E4%B8%8E%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    <id>https://williamgong.github.io/2020/10/21/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%902_lua%E6%96%87%E4%BB%B6%E8%A7%A3%E5%AF%86%E4%B8%8E%E5%8F%8D%E7%BC%96%E8%AF%91/</id>
    <published>2020-10-21T18:14:29.000Z</published>
    <updated>2021-12-04T13:52:12.454Z</updated>
    
    <content type="html"><![CDATA[<p>当发现lua文件才是本体后，接下来的步骤就是解析lua文件，但预料之中这个过程远比我预想的要困难</p><h1 id="尝试直接打开lua文件"><a href="#尝试直接打开lua文件" class="headerlink" title="尝试直接打开lua文件"></a>尝试直接打开lua文件</h1><p>我们先尝试直接打开main.lua:<img src="lua-encrypt.jpg" alt="lua-encrypt"><br>???<br>lua不是门脚本语言吗，为什么像用记事本打开二进制文件一样的全是乱码？<br>一通Google之后，我发现原来lua是可以编译为字节码的，编译后文件叫做luac。<br>那么反编译不就行了？     </p><h1 id="尝试反编译"><a href="#尝试反编译" class="headerlink" title="尝试反编译"></a>尝试反编译</h1><p>于是我用unluac反编译时，得到了这个：<img src="unluac-err.jpg" alt="unluac-err"><br>意思是这不是luac文件喽？<br>二进制文件的文件头都会标注文件类型，那用16进制编辑器打开看看：<img src="hex-encrypt.jpg" alt="hex-encrypt"><br>没有文件头？<br>既然没有文件头，程序却能以lua文件运行，那只能说明被加密了。    </p><h1 id="解密luac文件"><a href="#解密luac文件" class="headerlink" title="解密luac文件"></a>解密luac文件</h1><p>但我在外壳程序怎么都找不到解密的代码。<br>绝望的我只好上知乎寻找已经逆向成功的大佬。<br>幸好，一位好心的大佬一语点醒梦中人：<img src="zhihu.jpg" alt="zhihu"></p><blockquote><p>请无视那个“2条回复”。第二条是我成功后对他的感谢</p></blockquote><p>那意思是这个apk和去年那个几乎一样喽？<br>不管了先试试吧。</p><p>于是经过一下午的百度后，我找到了<a href="https://blog.csdn.net/gooding300/article/details/101540988">这篇文章</a>：<br>这位博主根据壳里的解密代码写了一个程序：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">decrypt</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *buff, <span class="keyword">size_t</span> size)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> *buff1 = (<span class="keyword">unsigned</span> <span class="keyword">char</span> *) <span class="built_in">malloc</span>(size);</span><br><span class="line">    buff1[<span class="number">0</span>] = <span class="number">27</span>;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; size; i++) &#123;</span><br><span class="line">        t += size;</span><br><span class="line">        buff1[i] = buff[i] ^ (t</span><br><span class="line">                              + ((<span class="keyword">unsigned</span> <span class="keyword">int</span>) (((<span class="keyword">unsigned</span> <span class="keyword">long</span>) (<span class="number">-2139062143L</span>L * t) &gt;&gt; <span class="number">32</span>) + t) &gt;&gt; <span class="number">7</span>)</span><br><span class="line">                              + ((<span class="keyword">signed</span> <span class="keyword">int</span>) (((<span class="keyword">unsigned</span> <span class="keyword">long</span>) (<span class="number">-2139062143L</span>L * t) &gt;&gt; <span class="number">32</span>) + t) &lt; <span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> buff1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buff[<span class="number">20480</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> filename[<span class="number">20</span>] = <span class="string">&quot;main.lua&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">strcpy</span>(filename,argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;File name: %s \n&quot;</span>, filename);</span><br><span class="line"></span><br><span class="line">    FILE *fp = fopen(filename, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">size_t</span> size = <span class="number">0</span>;</span><br><span class="line">    size = fread(buff, <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">char</span>), <span class="number">20480</span>, fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;File size: %ld \n&quot;</span>, size);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> *res = decrypt(buff, size);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">strcat</span>(filename, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    FILE *fp1 = fopen(filename, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    fwrite(res, <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">char</span>), size, fp1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Output: %s&quot;</span>, filename);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按照这篇blog的使用方法，编译后运行，果然成功解密了。<img src="hex-decrypt.jpg" alt="hex-decrypt"></p><h1 id="还原lua文件"><a href="#还原lua文件" class="headerlink" title="还原lua文件"></a>还原lua文件</h1><p>那么就能成功反编译了。<br>以下是main.lua反编译后的代码：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> L0, L1, L2, L3</span><br><span class="line">L0 = <span class="built_in">require</span></span><br><span class="line">L1 = <span class="string">&quot;import&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.app.*&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.os.*&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.widget.*&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.view.*&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.view.View&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.content.Context&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.media.MediaPlayer&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.media.AudioManager&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;com.androlua.Ticker&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = activity</span><br><span class="line">L0 = L0.getSystemService</span><br><span class="line">L1 = Context</span><br><span class="line">L1 = L1.AUDIO_SERVICE</span><br><span class="line">L0 = L0(L1)</span><br><span class="line">L0 = L0.setStreamVolume</span><br><span class="line">L1 = AudioManager</span><br><span class="line">L1 = L1.STREAM_MUSIC</span><br><span class="line">L2 = <span class="number">15</span></span><br><span class="line">L3 = AudioManager</span><br><span class="line">L3 = L3.FLAG_SHOW_UI</span><br><span class="line">L0(L1, L2, L3)</span><br><span class="line">L0 = activity</span><br><span class="line">L0 = L0.getDecorView</span><br><span class="line">L0 = L0()</span><br><span class="line">L0 = L0.setSystemUiVisibility</span><br><span class="line">L1 = View</span><br><span class="line">L1 = L1.SYSTEM_UI_FLAG_HIDE_NAVIGATION</span><br><span class="line">L2 = View</span><br><span class="line">L2 = L2.SYSTEM_UI_FLAG_IMMERSIVE</span><br><span class="line">L1 = L1 | L2</span><br><span class="line">L0(L1)</span><br><span class="line">L0 = MediaPlayer</span><br><span class="line">L0 = L0()</span><br><span class="line">m = L0</span><br><span class="line">L0 = m</span><br><span class="line">L0 = L0.reset</span><br><span class="line">L0()</span><br><span class="line">L0 = m</span><br><span class="line">L0 = L0.setDataSource</span><br><span class="line">L1 = activity</span><br><span class="line">L1 = L1.getLuaDir</span><br><span class="line">L1 = L1()</span><br><span class="line">L2 = <span class="string">&quot;/mc.mp3&quot;</span></span><br><span class="line">L1 = L1 .. L2</span><br><span class="line">L0(L1)</span><br><span class="line">L0 = m</span><br><span class="line">L0 = L0.prepare</span><br><span class="line">L0()</span><br><span class="line">L0 = m</span><br><span class="line">L0 = L0.start</span><br><span class="line">L0()</span><br><span class="line">L0 = m</span><br><span class="line">L0 = L0.setLooping</span><br><span class="line">L1 = <span class="literal">true</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = Ticker</span><br><span class="line">L0 = L0()</span><br><span class="line">ti = L0</span><br><span class="line">L0 = ti</span><br><span class="line">L0.Period = <span class="number">10</span></span><br><span class="line">L0 = ti</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">L1</span><span class="params">()</span></span></span><br><span class="line">  <span class="keyword">local</span> L0, L1, L2, L3</span><br><span class="line">  L0 = activity</span><br><span class="line">  L0 = L0.getSystemService</span><br><span class="line">  L1 = Context</span><br><span class="line">  L1 = L1.AUDIO_SERVICE</span><br><span class="line">  L0 = L0(L1)</span><br><span class="line">  L0 = L0.setStreamVolume</span><br><span class="line">  L1 = AudioManager</span><br><span class="line">  L1 = L1.STREAM_MUSIC</span><br><span class="line">  L2 = <span class="number">15</span></span><br><span class="line">  L3 = AudioManager</span><br><span class="line">  L3 = L3.FLAG_SHOW_UI</span><br><span class="line">  L0(L1, L2, L3)</span><br><span class="line">  L0 = activity</span><br><span class="line">  L0 = L0.getDecorView</span><br><span class="line">  L0 = L0()</span><br><span class="line">  L0 = L0.setSystemUiVisibility</span><br><span class="line">  L1 = View</span><br><span class="line">  L1 = L1.SYSTEM_UI_FLAG_HIDE_NAVIGATION</span><br><span class="line">  L2 = View</span><br><span class="line">  L2 = L2.SYSTEM_UI_FLAG_IMMERSIVE</span><br><span class="line">  L1 = L1 | L2</span><br><span class="line">  L0(L1)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">L0.onTick = L1</span><br><span class="line">L0 = ti</span><br><span class="line">L0 = L0.start</span><br><span class="line">L0()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">L0</span><span class="params">(A0, A1)</span></span></span><br><span class="line">  <span class="keyword">local</span> L2, L3, L4, L5</span><br><span class="line">  L2 = <span class="built_in">string</span></span><br><span class="line">  L2 = L2.<span class="built_in">find</span></span><br><span class="line">  L3 = <span class="built_in">tostring</span></span><br><span class="line">  L4 = A1</span><br><span class="line">  L3 = L3(L4)</span><br><span class="line">  L4 = <span class="string">&quot;KEYCODE_BACK&quot;</span></span><br><span class="line">  L2 = L2(L3, L4)</span><br><span class="line">  <span class="keyword">if</span> L2 ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">    L2 = activity</span><br><span class="line">    L2 = L2.getSystemService</span><br><span class="line">    L3 = Context</span><br><span class="line">    L3 = L3.AUDIO_SERVICE</span><br><span class="line">    L2 = L2(L3)</span><br><span class="line">    L2 = L2.setStreamVolume</span><br><span class="line">    L3 = AudioManager</span><br><span class="line">    L3 = L3.STREAM_MUSIC</span><br><span class="line">    L4 = <span class="number">15</span></span><br><span class="line">    L5 = AudioManager</span><br><span class="line">    L5 = L5.FLAG_SHOW_UI</span><br><span class="line">    L2(L3, L4, L5)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  L2 = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">return</span> L2</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">onKeyDown = L0</span><br></pre></td></tr></table></figure><blockquote><p>别问我那些L0，L1哪来的，这是unluac自己加的，而且我也懒得修饰了。</p></blockquote><h1 id="关于其它的lua文件"><a href="#关于其它的lua文件" class="headerlink" title="关于其它的lua文件"></a>关于其它的lua文件</h1><p>以下是同文件夹内的另一个lua文件init.lua：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> L0, L1</span><br><span class="line">appname = <span class="string">&quot;\230\143\146\228\187\1829.0&quot;</span></span><br><span class="line">appver = <span class="string">&quot;9.0&quot;</span></span><br><span class="line">packagename = <span class="string">&quot;com.ta.cnm&quot;</span></span><br><span class="line">appcode = <span class="string">&quot;9&quot;</span></span><br><span class="line">appsdk = <span class="string">&quot;15&quot;</span></span><br><span class="line">theme = <span class="string">&quot;Theme_DeviceDefault_Light_NoActionBar&quot;</span></span><br><span class="line">L0 = &#123;&#125;</span><br><span class="line">L1 = <span class="string">&quot;WRITE_EXTERNAL_STORAGE&quot;</span></span><br><span class="line">L0[<span class="number">1</span>] = L1</span><br><span class="line">user_permission = L0</span><br></pre></td></tr></table></figure><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>关于这个app与去年“927”中那个app的区别，我会在后面说明的。<br>下一篇我们来逆向另外一“存档人物修改2.0.apk”</p>]]></content>
    
    
    <summary type="html">当发现lua文件才是本体后，接下来的步骤就是解析lua文件，但预料之中这个过程远比我预想的要困难

尝试直接打开lua文件
我们先尝试直接打开main.lua:
???
lua不是门脚本语言吗，为什么像用记事本打开二进制文件一样的全是乱码？
一通Google之后，我发现原来lua是可以编译为字节码的，编译后文件叫做luac。
那么反编译不就行了？ 

尝试反编译
于是我用unluac反编译时，得到了这个：
意思是这不是luac文件喽？
二进制文件的文件头都会标注文件类型，那用16进制编辑器打开看看：
没有文件头？
既然没有文件头，程序却能以lua文件运行，那只能说明被加密了。 

解密luac</summary>
    
    
    
    <category term="Android" scheme="https://williamgong.github.io/categories/Android/"/>
    
    
    <category term="Android" scheme="https://williamgong.github.io/tags/Android/"/>
    
    <category term="逆向工程" scheme="https://williamgong.github.io/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="杂谈" scheme="https://williamgong.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>“O泡果奶”app解析1 apk文件逆向</title>
    <link href="https://williamgong.github.io/2020/10/14/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%901_apk%E6%96%87%E4%BB%B6%E9%80%86%E5%90%91/"/>
    <id>https://williamgong.github.io/2020/10/14/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%901_apk%E6%96%87%E4%BB%B6%E9%80%86%E5%90%91/</id>
    <published>2020-10-14T17:47:30.000Z</published>
    <updated>2021-12-04T13:52:12.454Z</updated>
    
    <content type="html"><![CDATA[<p>当比对完hash后，接下来就是对整个apk进行逆向了。<br>首先我们对“一份礼物.apk”进行逆向</p><h1 id="需要的工具"><a href="#需要的工具" class="headerlink" title="需要的工具"></a>需要的工具</h1><ul><li><a href="https://github.com/skylot/jadx">Jadx</a><h1 id="分析apk文件结构"><a href="#分析apk文件结构" class="headerlink" title="分析apk文件结构"></a>分析apk文件结构</h1>apk本质上是一个加了签名和元数据的压缩包，用普通的解压工具解压即可得到内部的文件。<br>内部的文件结构如下所示：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── AndroidManifest.xml</span><br><span class="line">├── META-INF</span><br><span class="line">├── assets</span><br><span class="line">├── classes.dex</span><br><span class="line">├── com</span><br><span class="line">├── lib</span><br><span class="line">├── lua</span><br><span class="line">└── res</span><br></pre></td></tr></table></figure>再看看/assets下的文件：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── icon.png</span><br><span class="line">├── init.lua</span><br><span class="line">├── layout.lua</span><br><span class="line">├── main.lua</span><br><span class="line">└── mc.mp3</span><br></pre></td></tr></table></figure><code>mc.mp3</code>就是O泡果奶的广告音频。</li></ul><h1 id="查看app信息"><a href="#查看app信息" class="headerlink" title="查看app信息"></a>查看app信息</h1><p>我们打AndroidManifest.xml，查看apk包名等信息。<br>AndroidManifest.xml文件如下:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">package</span>=<span class="string">&quot;com.lc.nb&quot;</span> <span class="attr">android:versionCode</span>=<span class="string">&quot;9&quot;</span> <span class="attr">android:versionName</span>=<span class="string">&quot;凉城fork by Keven&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">&quot;21&quot;</span> <span class="attr">android:targetSdkVersion</span>=<span class="string">&quot;21&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:label</span>=<span class="string">&quot;一份礼物&quot;</span> <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/icon&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.LuaApplication&quot;</span> <span class="attr">android:persistent</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:largeHeap</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:resizeableActivity</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:supportsPictureInPicture</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;android.max_aspect&quot;</span> <span class="attr">android:value</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Holo.Light.NoActionBar&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;插件9.0&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.Main&quot;</span> <span class="attr">android:screenOrientation</span>=<span class="string">&quot;user&quot;</span> <span class="attr">android:configChanges</span>=<span class="string">&quot;keyboardHidden|orientation|screenSize&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;.*\\.alp&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;content&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;.*\\.alp&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;application/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;audio/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;video/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;text/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;*/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;.*\\.alp&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;content&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;application/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;audio/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;video/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;text/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;*/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;.*\\.alp&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Translucent.NoTitleBar&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.tencent.connect.common.AssistActivity&quot;</span> <span class="attr">android:screenOrientation</span>=<span class="string">&quot;behind&quot;</span> <span class="attr">android:configChanges</span>=<span class="string">&quot;keyboardHidden|orientation&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.tencent.tauth.AuthActivity&quot;</span> <span class="attr">android:launchMode</span>=<span class="string">&quot;singleTask&quot;</span> <span class="attr">android:noHistory</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;tencent222222&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Holo.Light.NoActionBar&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;插件9.0&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.LuaActivity&quot;</span> <span class="attr">android:configChanges</span>=<span class="string">&quot;keyboardHidden|orientation|screenSize&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;com.andlua.ly&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;content&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;text/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;content&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;text/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Holo.Light.NoActionBar&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;一份礼物&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.LuaActivityX&quot;</span> <span class="attr">android:excludeFromRecents</span>=<span class="string">&quot;false&quot;</span> <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span> <span class="attr">android:configChanges</span>=<span class="string">&quot;keyboardHidden|orientation|screenSize&quot;</span> <span class="attr">android:documentLaunchMode</span>=<span class="string">&quot;intoExisting&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.NoDisplay&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;一份礼物&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.Welcome&quot;</span> <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Translucent.NoTitleBar&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.branch.www.screencapture.ScreenCaptureActivity&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.LuaService&quot;</span> <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:label</span>=<span class="string">&quot;一份礼物&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.LuaAccessibilityService&quot;</span> <span class="attr">android:permission</span>=<span class="string">&quot;&quot;</span> <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;android.accessibilityservice&quot;</span> <span class="attr">android:resource</span>=<span class="string">&quot;@xml/accessibility_service_config&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.accessibilityservice.AccessibilityService&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.accessibilityservice.category.FEEDBACK_AUDIBLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.accessibilityservice.category.FEEDBACK_HAPTIC&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.accessibilityservice.category.FEEDBACK_SPOKEN&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">provider</span> <span class="attr">android:name</span>=<span class="string">&quot;android.content.FileProvider&quot;</span> <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span> <span class="attr">android:authorities</span>=<span class="string">&quot;com.lc.nb&quot;</span> <span class="attr">android:grantUriPermissions</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;android.support.FILE_PROVIDER_PATHS&quot;</span> <span class="attr">android:resource</span>=<span class="string">&quot;@anim/abc_fade_out&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到作者把ID留在了<code>versionName</code>里，心够大的。<br>以及可以看到申请的权限只有储存权限，这样看来估计没有窃取信息等行为了。<br>不过</p><pre><code>package=&quot;com.lc.nb&quot;</code></pre><p>凉城NB！（个鬼）</p><h1 id="使用Jadx对整个apk进行逆向"><a href="#使用Jadx对整个apk进行逆向" class="headerlink" title="使用Jadx对整个apk进行逆向"></a>使用Jadx对整个apk进行逆向</h1><p>下载好Jadx后，用它打开这个apk<img src="jadx.jpg" alt="jadx"><br>看，一键反编译，自动反混淆！<br>文件里有很多第三方包，看上去很可疑。</p><h1 id="定位入口文件"><a href="#定位入口文件" class="headerlink" title="定位入口文件"></a>定位入口文件</h1><p>注意AndroidManifest.xml中的这一个标签：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Holo.Light.NoActionBar&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:label</span>=<span class="string">&quot;插件9.0&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.Main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;user&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:configChanges</span>=<span class="string">&quot;keyboardHidden|orientation|screenSize&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见入口文件在<code>com.android.Main</code>中。<br>那么打开看看：<img src="jadx-main.jpg" alt="Jadx-main"><br>确定了，这是AndroidLua应用，而<code>/asset</code>中的lua脚本才是本体。<br>OK，先到这里，下次我们重点解析作为本体的lua文件。</p>]]></content>
    
    
    <summary type="html">当比对完hash后，接下来就是对整个apk进行逆向了。
首先我们对“一份礼物.apk”进行逆向

需要的工具
 * Jadx分析apk文件结构
   apk本质上是一个加了签名和元数据的压缩包，用普通的解压工具解压即可得到内部的文件。
   内部的文件结构如下所示：1
   2
   3
   4
   5
   6
   7
   8
   9
   
   
   .
   ├── AndroidManifest.xml
   ├── META-INF
   ├── assets
   ├── classes.dex
   ├── com
   ├── lib
   ├── lua
   </summary>
    
    
    
    <category term="Android" scheme="https://williamgong.github.io/categories/Android/"/>
    
    
    <category term="Android" scheme="https://williamgong.github.io/tags/Android/"/>
    
    <category term="逆向工程" scheme="https://williamgong.github.io/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="杂谈" scheme="https://williamgong.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>“O泡果奶”app解析0 hash比对</title>
    <link href="https://williamgong.github.io/2020/10/14/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%900_hash%E6%AF%94%E5%AF%B9/"/>
    <id>https://williamgong.github.io/2020/10/14/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%900_hash%E6%AF%94%E5%AF%B9/</id>
    <published>2020-10-14T02:22:30.000Z</published>
    <updated>2021-12-04T13:52:12.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>当我关注到这个app时，是我一个现居异地的朋友发的一条说说。<br>其实早在几个小时前，宿舍里放出O泡果奶广告的声音时，我就体会过这个app的威力了，但我以为它只在我们学校内传播。<br>直到我看见了那条说说。<br>当我顺手转发了之后，十多条评论纷纷抱怨他们的经历，我一个朋友还给我发了他们大学流传的apk，我逐渐意识到不对劲。<br>但真正使我打算认真分析这个app的，是我另一个朋友让我发这个apk的hash的消息。<br>于是，我便走上了逆向工程之路。</p><h1 id="hash比对的原因"><a href="#hash比对的原因" class="headerlink" title="hash比对的原因"></a>hash比对的原因</h1><p>不同地方流传的apk，名字可能会不一样。就比如我手上的两个apk：“一份礼物.apk”和“存档人物修改2.0.apk”，要验证这两个apk是否是同一个，就只能比对hash。    </p><h1 id="获取hash"><a href="#获取hash" class="headerlink" title="获取hash"></a>获取hash</h1><p>这是“一份礼物.apk”的hash：<img src="hash-gift.jpg" alt="hash-gift"><br>这是“存档人物修改2.0.apk”的hash:<img src="hash-save.jpg" alt="hash-save"><br>显然二者不是同一个apk。<br>后来跟朋友的hash比对，“一份礼物.apk”的hash与他的一致。</p>]]></content>
    
    
    <summary type="html">前言
当我关注到这个app时，是我一个现居异地的朋友发的一条说说。
其实早在几个小时前，宿舍里放出O泡果奶广告的声音时，我就体会过这个app的威力了，但我以为它只在我们学校内传播。
直到我看见了那条说说。
当我顺手转发了之后，十多条评论纷纷抱怨他们的经历，我一个朋友还给我发了他们大学流传的apk，我逐渐意识到不对劲。
但真正使我打算认真分析这个app的，是我另一个朋友让我发这个apk的hash的消息。
于是，我便走上了逆向工程之路。

hash比对的原因
不同地方流传的apk，名字可能会不一样。就比如我手上的两个apk：“一份礼物.apk”和“存档人物修改2.0.apk”，要验证这两个apk是</summary>
    
    
    
    <category term="Android" scheme="https://williamgong.github.io/categories/Android/"/>
    
    
    <category term="Android" scheme="https://williamgong.github.io/tags/Android/"/>
    
    <category term="逆向工程" scheme="https://williamgong.github.io/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="杂谈" scheme="https://williamgong.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Blog搭建实录-2 配置Github Actions</title>
    <link href="https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-2_%E9%85%8D%E7%BD%AEGithub_Actions/"/>
    <id>https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-2_%E9%85%8D%E7%BD%AEGithub_Actions/</id>
    <published>2020-10-10T23:06:57.000Z</published>
    <updated>2021-12-04T13:52:12.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Github-Actions介绍"><a href="#Github-Actions介绍" class="headerlink" title="Github Actions介绍"></a>Github Actions介绍</h1><blockquote><p>注：以下内容大部分参考了<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">这篇post</a>，这篇post讲的比我清楚多了，人家是专业的。</p></blockquote><h2 id="什么是Github-Actions"><a href="#什么是Github-Actions" class="headerlink" title="什么是Github Actions?"></a>什么是Github Actions?</h2><p>Github Actions是Github自己推出的<a href="http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html">持续集成服务</a>，可以自动地进行各种各样的构建并发布到正确的地方。<br>在本Blog中，我就使用了Github Actions来自动构建Hexo的静态网页并将它发布到Github Pages上。<br>这些构建，发布之类的操作，在Github Actions中被称为actions。用户可以将actions写成独立的脚本并供给其他人使用。Github建立了一个官方市场，可以找到我们需要的actions。</p><h2 id="术语介绍"><a href="#术语介绍" class="headerlink" title="术语介绍"></a>术语介绍</h2><ul><li>workflow（工作流）：指运行一次的所有流程；</li><li>job（任务）：组成workflow的单元，一个workflow由多个job组成；</li><li>step（步骤）：job执行时执行的单元，由多个action组成；</li><li>action：这就不多说了吧。</li></ul><h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><h2 id="获取-Personal-Access-Token"><a href="#获取-Personal-Access-Token" class="headerlink" title="获取 Personal Access Token"></a>获取 Personal Access Token</h2><p>打开你的Github 账户设置页，转到Developer settings -&gt; Personal access tokens，生成时记得勾选repo项，admin:repo_hook和workflow项。<br>之后复制生成的字符串，回到hexo仓库，打开仓库设置，转到Secrets，把字符串以环境变量的形式存储。变量名凭喜好自取。</p><h2 id="配置Actions"><a href="#配置Actions" class="headerlink" title="配置Actions"></a>配置Actions</h2><p>首先我们在GitHub打开Hexo的仓库，转到actions选项。<br>根据网页的提示，建立一个workflow。这样你就会进入一个编辑.yml文件的界面，文件就是workflow的配置文件。<br>这时在右边有市场界面，让我们在里面搜”hexo”，可以看到许多发布hexo博客的actions，这里我选择的是<a href="https://github.com/Solybum/hexo-deploy">hexo-deploy</a>,选择版本，将代码框的内容粘贴到workflow文件中，按注释改一下配置，保存。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>根据actions的不同，所需要的token/key类型也不同。有的使用Personal Access Token(PAT)，有的使用ssh key，具体看action的说明。<br>我倾向于使用PAT，因为PAT只用存储在hexo仓库上。相比之下，用ssh key需要将公钥放在hexo仓库，私钥放在pages仓库，较为麻烦。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>将hexo仓库push一下，actions就会自动运作，几分钟后Blog就可以访问了。</p>]]></content>
    
    
    <summary type="html">Github Actions介绍
注：以下内容大部分参考了这篇post，这篇post讲的比我清楚多了，人家是专业的。

什么是Github Actions?
Github Actions是Github自己推出的持续集成服务，可以自动地进行各种各样的构建并发布到正确的地方。
在本Blog中，我就使用了Github Actions来自动构建Hexo的静态网页并将它发布到Github Pages上。
这些构建，发布之类的操作，在Github Actions中被称为actions。用户可以将actions写成独立的脚本并供给其他人使用。Github建立了一个官方市场，可以找到我们需要的actions。</summary>
    
    
    
    <category term="博客搭建" scheme="https://williamgong.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="博客" scheme="https://williamgong.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Blog搭建实录-1 初始化hexo与建立git仓库</title>
    <link href="https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-1_%E5%88%9D%E5%A7%8B%E5%8C%96hexo%E4%B8%8E%E5%BB%BA%E7%AB%8Bgit%E4%BB%93%E5%BA%93/"/>
    <id>https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-1_%E5%88%9D%E5%A7%8B%E5%8C%96hexo%E4%B8%8E%E5%BB%BA%E7%AB%8Bgit%E4%BB%93%E5%BA%93/</id>
    <published>2020-10-10T22:32:51.000Z</published>
    <updated>2021-12-04T13:52:12.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初始化Hexo文件夹"><a href="#初始化Hexo文件夹" class="headerlink" title="初始化Hexo文件夹"></a>初始化Hexo文件夹</h1><h2 id="准备node-js"><a href="#准备node-js" class="headerlink" title="准备node.js"></a>准备node.js</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>在<a href="https://nodejs.org/en/">这里</a>下载，然后一路安装。</p><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>包管理工具，请。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><pre><code>npm install hexo-cli -g</code></pre><h2 id="建立Hexo文件夹"><a href="#建立Hexo文件夹" class="headerlink" title="建立Hexo文件夹"></a>建立Hexo文件夹</h2><p>首先，在本地见一个文件夹，名字最好是英文,然后    </p><pre><code>npx hexo install &lt;folder&gt;</code></pre><p>之后    </p><pre><code>cd &lt;folder&gt;</code></pre><p>最后   </p><pre><code>npm install</code></pre><p>一个Hexo文件夹就这样初始化好了。    </p><h2 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h2><blockquote><p>其实是不需要的，我只是好奇而已。<br>当然，之后这个操作是非常重要的，你可以把它当作熟悉Hexo操作。</p></blockquote><p>首先，让Hexo生成静态网页</p><pre><code>npx hexo generate</code></pre><p>然后，启动Hexo的本地服务</p><pre><code>npx hexo server</code></pre><p>之后就可以访问localhost:4000访问本地的网页了。</p><h1 id="建立Git仓库并上传到Github"><a href="#建立Git仓库并上传到Github" class="headerlink" title="建立Git仓库并上传到Github"></a>建立Git仓库并上传到Github</h1><blockquote><p>如果你不知道什么是git, Github，你现在就可以把本Blog关了。</p></blockquote><h2 id="建立Github-Pages发布仓库"><a href="#建立Github-Pages发布仓库" class="headerlink" title="建立Github Pages发布仓库"></a>建立Github Pages发布仓库</h2><p>在<a href="https://github.com/">Github</a>上，建立一个名为<code>\&lt;username&gt;.github.io</code>的仓库，然后放着。<br>之后，Hexo文件夹用git初始化，commit之后push到Github。<br>OK，其余的操作就主要在Github上进行了。</p>]]></content>
    
    
    <summary type="html">初始化Hexo文件夹
准备node.js
Windows
在这里下载，然后一路安装。

Linux
包管理工具，请。

安装Hexo
npm install hexo-cli -g

建立Hexo文件夹
首先，在本地见一个文件夹，名字最好是英文,然后 

npx hexo install &lt;folder&gt;

之后 

cd &lt;folder&gt;

最后 

npm install

一个Hexo文件夹就这样初始化好了。 

本地测试
其实是不需要的，我只是好奇而已。
当然，之后这个操作是非常重要的，你可以把它当作熟悉Hexo操作。

首先，让Hexo生成静态网页

npx hexo generat</summary>
    
    
    
    <category term="博客搭建" scheme="https://williamgong.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="博客" scheme="https://williamgong.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Blog搭建实录-0 序言</title>
    <link href="https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-0_%E5%BA%8F%E8%A8%80/"/>
    <id>https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-0_%E5%BA%8F%E8%A8%80/</id>
    <published>2020-10-10T13:30:29.000Z</published>
    <updated>2021-12-04T13:52:12.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>从0开始搭建这个博客到限制，已经折腾两天了。折腾的时候踩了不少坑，所以我想记录下我搭建这个Blog的过程，把搭建Blog的过程，我踩到的坑po出来，算是以示后人吧。（当然，我相信没什么人会看的）</p><h1 id="关于这个Blog"><a href="#关于这个Blog" class="headerlink" title="关于这个Blog"></a>关于这个Blog</h1><p>这个Blog由hexo搭建，通过Github Actions自动发布到Github Pages上。使用的主题用submodule的形式插入。</p><h1 id="关于更新"><a href="#关于更新" class="headerlink" title="关于更新"></a>关于更新</h1><p>我会不定期更新，打算先把在写这篇post前过程写出来，之后满满填坑。<br>所谓不定期更新呢，就是我想鸽多久就鸽多久啦！（咕咕咕咕咕咕咕）<br>反正没人看（</p><h1 id="当前Blog状态"><a href="#当前Blog状态" class="headerlink" title="当前Blog状态"></a>当前Blog状态</h1><p><img src="/images/current_status.jpg" alt="current_status"><br>（这是本地的）</p>]]></content>
    
    
    <summary type="html">写在前面
从0开始搭建这个博客到限制，已经折腾两天了。折腾的时候踩了不少坑，所以我想记录下我搭建这个Blog的过程，把搭建Blog的过程，我踩到的坑po出来，算是以示后人吧。（当然，我相信没什么人会看的）

关于这个Blog
这个Blog由hexo搭建，通过Github Actions自动发布到Github Pages上。使用的主题用submodule的形式插入。

关于更新
我会不定期更新，打算先把在写这篇post前过程写出来，之后满满填坑。
所谓不定期更新呢，就是我想鸽多久就鸽多久啦！（咕咕咕咕咕咕咕）
反正没人看（

当前Blog状态

（这是本地的）</summary>
    
    
    
    <category term="博客搭建" scheme="https://williamgong.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="博客" scheme="https://williamgong.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
