<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WilliamGong的博客</title>
  
  <subtitle>WilliamGong&#39;s blog</subtitle>
  <link href="https://williamgong.github.io/atom.xml" rel="self"/>
  
  <link href="https://williamgong.github.io/"/>
  <updated>2021-11-15T10:11:25.014Z</updated>
  <id>https://williamgong.github.io/</id>
  
  <author>
    <name>William Gong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LFS 的搭建 0 前言</title>
    <link href="https://williamgong.github.io/2021/11/15/lfs%E6%90%AD%E5%BB%BA0/"/>
    <id>https://williamgong.github.io/2021/11/15/lfs%E6%90%AD%E5%BB%BA0/</id>
    <published>2021-11-15T00:14:26.000Z</published>
    <updated>2021-11-15T10:11:25.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>其实一开始要搭建 LFS 时，我是拒绝的。<br>但奈何自己手贱加学校的教务系统出问题，我同时选择了操作系统和操作系统课程设计。<br>而正常情况下是不能同时选择的。<br>而操作系统课程设计的大作业，就是搭 LFS。<br>也罢，这也是我的终极目标，虽然早了点，时间还被一大堆大作业和实验报告占满了，还有 ddl 催命。<br>于是，我就只能硬着头皮上了。        </p><h1 id="选择的版本"><a href="#选择的版本" class="headerlink" title="选择的版本"></a>选择的版本</h1><p>秉承要安装就要最新版的原则，我选择了最新的11.0<br>对了，是 systemd 版本的。<br>不过根据现在 LCTT 的进度，中文版最新到 9.0，因此 11.0 的版本只能硬啃生肉。<br>当然，不同版本之间差距应该并不大，所以我会参考中文最新版的就是了。<br>也许这一波流程后我就可以去 LCTT 翻译文档了吧。 XD       </p><h1 id="需要的工具"><a href="#需要的工具" class="headerlink" title="需要的工具"></a>需要的工具</h1><p>首先，当然是一份 LFS 文档（<br>对于 LFS 的搭建，需要一个宿主机，目前选择为我现在在服务器上跑的 Gentoo 开发机。当然也可以选择用 liveCD，不过考虑到 LFS 要装很长时间，liveCD 并不好用。<br>至于要安装的机器，当然是虚拟机啦，配置如下：</p><ul><li>CPU：Intel G5420 4线程 amd64</li><li>内存：4G</li><li>SCSI 控制器：LSI 53C895A</li><li>硬盘：32G，挂载到宿主机的 <code>/mnt/lfs/</code></li><li>网卡：Realtek RTL8139</li><li>BIOS：OVMF (UEFI)</li></ul><p>考虑到兼容性，目前不使用任何半虚拟化驱动</p><h1 id="主要安装流程"><a href="#主要安装流程" class="headerlink" title="主要安装流程"></a>主要安装流程</h1><p>LFS 的安装一般分为以下几个流程：</p><ol><li>准备工作：包括分区和编译临时工具链</li><li>安装：手动编译各软件包</li><li>配置：配置<strong>各种各样</strong>的配置文件</li></ol><p>具体流程其实和安装 Gentoo 差不多，但 LFS 既不会帮你自动编译也不提供 stage。可谓是真·从零开始。</p><h1 id="与标准-LFS-流程的改动"><a href="#与标准-LFS-流程的改动" class="headerlink" title="与标准 LFS 流程的改动"></a>与标准 LFS 流程的改动</h1><p>我在安装 LFS时，不会完全按照文档进行。<br>首先，我可能会使用一些其他发行版的工具，比如 Gentoo 的 genkernel 之类的（虽然这玩意真的很难用）<br>以及我会大量使用已经存在的配置文件，比如其他发行版的 fstab 等<br>我也会参考 Gentoo 或 Arch 等相关 wiki，毕竟这些文档可是相当好用的。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>撒，开始吧。</p>]]></content>
    
    
    <summary type="html">前言
其实一开始要搭建 LFS 时，我是拒绝的。
但奈何自己手贱加学校的教务系统出问题，我同时选择了操作系统和操作系统课程设计。
而正常情况下是不能同时选择的。
而操作系统课程设计的大作业，就是搭 LFS。
也罢，这也是我的终极目标，虽然早了点，时间还被一大堆大作业和实验报告占满了，还有 ddl 催命。
于是，我就只能硬着头皮上了。 

选择的版本
秉承要安装就要最新版的原则，我选择了最新的11.0
对了，是 systemd 版本的。
不过根据现在 LCTT 的进度，中文版最新到 9.0，因此 11.0 的版本只能硬啃生肉。
当然，不同版本之间差距应该并不大，所以我会参考中文最新版的就是了。
</summary>
    
    
    
    <category term="LFS" scheme="https://williamgong.github.io/categories/LFS/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="LFS" scheme="https://williamgong.github.io/tags/LFS/"/>
    
  </entry>
  
  <entry>
    <title>在 Proxmox VE 中添加 vTPM 的支持</title>
    <link href="https://williamgong.github.io/2021/06/24/%E5%9C%A8pve%E4%B8%AD%E5%A2%9E%E5%8A%A0%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AF%B9tpm%E7%9A%84%E6%94%AF%E6%8C%81/"/>
    <id>https://williamgong.github.io/2021/06/24/%E5%9C%A8pve%E4%B8%AD%E5%A2%9E%E5%8A%A0%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AF%B9tpm%E7%9A%84%E6%94%AF%E6%8C%81/</id>
    <published>2021-06-24T18:26:26.000Z</published>
    <updated>2021-11-15T10:11:25.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="！！注意-！！"><a href="#！！注意-！！" class="headerlink" title="！！注意 ！！"></a>！！注意 ！！</h1><p>PVE 7.0 已经添加了 TPM 支持，只需在 Web 界面添加设备即可。<br><strong>本文已经过时！</strong><br><strong>本文已经过时！</strong><br><strong>本文已经过时！</strong></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>虽然 Windows 11 的镜像早就泄露了，但在 6 月 24 日 23 点 Microsoft 才正式发布。发布会结束后，MS 官网放出了 Windows 11 的系统要求，其中一个必须要求是 TPM 2.0。<br>然而，Proxmox VE 并没有官方支持 vTPM ， 虽然有qemu 有相应支持，但网上对此的文档很少。因此，本文在此写出让 PVE 支持 qemu  vTPM 的方法以在虚拟机安装 Windows 11 预览版。    </p><h1 id="关于-Proxmox-VE-对-TPM-虚拟化的支持"><a href="#关于-Proxmox-VE-对-TPM-虚拟化的支持" class="headerlink" title="关于 Proxmox VE 对 TPM 虚拟化的支持"></a>关于 Proxmox VE 对 TPM 虚拟化的支持</h1><p>目前，qemu 已经通过 swtpm 支持了 vTPM ，但Proxmox 对此的支持还在开发中，并且预期时间未知。（Proxmox 工作人员的最近回复在今年 1 月。）<br>但可以安装 swtpm 并手动改配置文件，就是有亿点麻烦。<br>具体情况见<a href="https://forum.proxmox.com/threads/vtpm-support-do-we-have-guide-to-add-the-vtpm-support.56982/">这里</a>。<br>不过 PVE 对 qemu vTPM 支持的要求已经上 bug 追踪列表了。耐心等吧，总会有的。<br><a href="https://bugzilla.proxmox.com/show_bug.cgi?id=3075">Bugzilla – Bug 3075</a>     </p><h1 id="编译与安装-swtpm"><a href="#编译与安装-swtpm" class="headerlink" title="编译与安装 swtpm"></a>编译与安装 swtpm</h1><h2 id="在-Debian-下编译安装-swtpm"><a href="#在-Debian-下编译安装-swtpm" class="headerlink" title="在 Debian 下编译安装 swtpm"></a>在 Debian 下编译安装 swtpm</h2><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p>swtpm 有一个依赖 libtpms 也需要单独编译安装，这里也一起安装了。<br>swtpm 的源码:</p><pre><code>git clone https://github.com/stefanberger/swtpm.git</code></pre><p>libtpms 的源码:</p><pre><code>git clone https://github.com/stefanberger/libtpms.git</code></pre><h3 id="签出到稳定分支"><a href="#签出到稳定分支" class="headerlink" title="签出到稳定分支"></a>签出到稳定分支</h3><p>查看分支</p><pre><code>$ git branch -a</code></pre><p>签出时选择最新的稳定版即可。<br>在写这篇文章时最新版是0.6</p><pre><code>$ git checkout stable-0.6</code></pre><p>（这是签出 swtpm 的命令，libtpms 请自行选择版本）</p><h3 id="编译安装-libtpms"><a href="#编译安装-libtpms" class="headerlink" title="编译安装 libtpms"></a>编译安装 libtpms</h3><p>安装依赖:</p><pre><code>sudo apt-get -y install automake autoconf libtool gcc build-essential libssl-dev dh-exec pkg-config gawk</code></pre><p>编译:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;autogen.sh --with-openssl</span><br><span class="line">mv debian&#x2F;source debian&#x2F;source.old</span><br><span class="line">dpkg-buildpackage -us -uc -j4</span><br></pre></td></tr></table></figure><p>之后回到父目录，就可以看见 libtpms 的 deb 包了。<br>安装：</p><pre><code>sudo dpkg -i libtpms0_0*_amd64.deb libtpms-dev_0*_amd64.deb</code></pre><h3 id="编译-swtpm"><a href="#编译-swtpm" class="headerlink" title="编译 swtpm"></a>编译 swtpm</h3><p>安装依赖：</p><pre><code>sudo apt-get -y install  libfuse-dev libglib2.0-dev libgmp-dev expect libtasn1-dev socat tpm-tools python3-twisted gnutls-dev gnutls-bin  libjson-glib-dev python3-setuptools softhsm2 libseccomp-dev</code></pre><p>编译：</p><pre><code>dpkg-buildpackage -us -uc -j$(nproc)</code></pre><h3 id="编译后软件包介绍"><a href="#编译后软件包介绍" class="headerlink" title="编译后软件包介绍"></a>编译后软件包介绍</h3><p>编译完成后，编译父目录会生成很多包，其中以下几个包是最终使用的：</p><ul><li><code>libtpms-dev_*_amd64.deb</code> 这个应该是 swtpm 的编译依赖，但还是装在生产环境上吧，我也不清楚。</li><li><code>libtpms0_*_amd64.deb</code><br>以上两个包是 libtpms</li><li><code>swtpm-libs_*_amd64.deb</code></li><li><code>swtpm_*_amd64.deb</code></li><li><code>swtpm-tools_*_amd64.deb</code><br>以上是 swtpm</li></ul><p>其它的包就不用装了，用于 debug 的。</p><h3 id="福利"><a href="#福利" class="headerlink" title="福利"></a>福利</h3><p>已经有人写好一键安装脚本了，在这里：<br><a href="https://github.com/rayures/vTPM">rayures/vTPM</a><br>仅用于 Debian/Ubuntu。</p><h2 id="Gentoo-下的编译"><a href="#Gentoo-下的编译" class="headerlink" title="Gentoo 下的编译"></a>Gentoo 下的编译</h2><p>portage 中是有 swtpm 的 ebuild 的，但被<code>~amd64</code> mask 了。     </p><blockquote><p>因此，生产环境慎用！！！</p></blockquote><p>将 keyword 加入 <code>/etc/portage/package.keywords</code></p><pre><code>=app-crypt/swtpm-0.5.2 ~amd64=dev-libs/libtpms-0.8.3 ~amd64</code></pre><p>此时运行</p><pre><code>sudo emerge --ask swtpm</code></pre><p>即可。</p><h1 id="在-PVE-中添加-swtpm-设备"><a href="#在-PVE-中添加-swtpm-设备" class="headerlink" title="在 PVE 中添加 swtpm 设备"></a>在 PVE 中添加 swtpm 设备</h1><p>首先当然是把编译好的 deb 包装到 PVE 上。<br>记得用<code>dpkg --info</code>看看依赖，尤其是<code>swtpm-tools</code>。<br><strong>在安装<code>swtpm-tools</code>时注意先安装它的依赖，不然 dpkg 后再安装依赖的话就会出现循环依赖。</strong><br>swtpm 可以通过套接字/字符设备/CUSE 让 guest 访问 TPM。<br>此处使用这个脚本创建套接字设备:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">i&#x3D;0</span><br><span class="line">while [ -d &#x2F;tmp&#x2F;tpm$i ]; do</span><br><span class="line">let i&#x3D;i+1</span><br><span class="line">done</span><br><span class="line">tpm&#x3D;&#x2F;tmp&#x2F;tpm$i</span><br><span class="line"></span><br><span class="line">mkdir $tpm</span><br><span class="line">echo &quot;Starting $tpm&quot;</span><br><span class="line">sudo swtpm socket  -d --tpmstate dir&#x3D;$tpm --tpm2 \</span><br><span class="line">             --ctrl type&#x3D;unixio,path&#x3D;&#x2F;$tpm&#x2F;swtpm-sock &amp;</span><br><span class="line">sleep 2 # this should be changed to a netstat query</span><br></pre></td></tr></table></figure><p>之后应该可以在<code>/tmp/</code>下看见设备。    </p><h2 id="为虚拟机添加设备"><a href="#为虚拟机添加设备" class="headerlink" title="为虚拟机添加设备"></a>为虚拟机添加设备</h2><p>获取 VNC 端口号：</p><blockquote><p>我也不知道这是什么，但后面添加参数需要这个数字，求大佬告知。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">vncport&#x3D;0</span><br><span class="line">port&#x3D;5900</span><br><span class="line">while nc -z 127.0.0.1 $port; do</span><br><span class="line">    port&#x3D;$((port + 1))</span><br><span class="line">    vncport&#x3D;$((vncport + 1))</span><br><span class="line">done</span><br><span class="line">echo $vncport</span><br></pre></td></tr></table></figure><p>之后再虚拟机配置文件里加一行：</p><pre><code>args: -drive file=$&#123;disk&#125;,format=raw,if=virtio,cache=none -chardev socket,id=chrtpm,path=/$tpm/swtpm-sock -tpmdev emulator,id=tpm0,chardev=chrtpm -device tpm-tis,tpmdev=tpm0 -vnc :$nextvnc -m 2048</code></pre><p><code>$&#123;disk&#125;</code>为虚拟机磁盘镜像路径，<code>$tpm</code>为 tpm 设备路径，<code>$nextvnc</code>是上面脚本的输出。全部为绝对路径。<br>启动虚拟机，就可以再 sealBIOS 里看到TPM 设置了。</p><h2 id="关于脚本的说明"><a href="#关于脚本的说明" class="headerlink" title="关于脚本的说明"></a>关于脚本的说明</h2><p>脚本不是我写的，原帖在这里：<br><a href="https://s3hh.wordpress.com/2018/06/03/tpm-2-0-in-qemu/">S3hh’s Blog</a><br>但该脚本似乎无法直接使用，于是我把它拆成上面的几个脚本和操作。</p><h1 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h1><p>进行上述操作后，如果将虚拟机以裸机启动后再强行关机，会导致无法再启动，需要重新创建设备。</p>]]></content>
    
    
    <summary type="html">！！注意 ！！
PVE 7.0 已经添加了 TPM 支持，只需在 Web 界面添加设备即可。
本文已经过时！
本文已经过时！
本文已经过时！

前言
虽然 Windows 11 的镜像早就泄露了，但在 6 月 24 日 23 点 Microsoft 才正式发布。发布会结束后，MS 官网放出了 Windows 11 的系统要求，其中一个必须要求是 TPM 2.0。
然而，Proxmox VE 并没有官方支持 vTPM ， 虽然有qemu 有相应支持，但网上对此的文档很少。因此，本文在此写出让 PVE 支持 qemu vTPM 的方法以在虚拟机安装 Windows 11 预览版。 

关于 Pro</summary>
    
    
    
    <category term="杂谈" scheme="https://williamgong.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="杂谈" scheme="https://williamgong.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="Proxmox VE" scheme="https://williamgong.github.io/tags/Proxmox-VE/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建 Home Lab 3 安装 Gentoo 中的那些坑</title>
    <link href="https://williamgong.github.io/2021/05/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab3/"/>
    <id>https://williamgong.github.io/2021/05/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab3/</id>
    <published>2021-05-12T22:57:20.000Z</published>
    <updated>2021-11-15T10:11:25.098Z</updated>
    
    <content type="html"><![CDATA[<p>当 Proxmox VE 已经搭建完成后，就可以准备开发机了。</p><h1 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h1><p>其实 PVE 虚拟机创建向导很舒服，在一般情况下照着来就行。但对于 Gentoo，从这里开始就有坑了。<br>首先是 CPU，这个虽然不是坑，但这是我的一个小小的建议，将 CPU 类型设置为 host。毕竟由于 Gentoo 的特性，可以针对 CPU 进行优化，对于像好好玩 Gentoo 的人来说，个人认为这一点蛮重要的。而且由于要编译嘛，CPU 性能能榨干一点是一点。<br>此外就是各驱动了。<strong>千万不要选 VirtIO 驱动！除非你第一次安装就自己配置内核而且不使用 genkernel 生成的 initramfs。</strong><br>因为以前被坑过无数次了，所以这次第一次安装我选择 genkernel 直接搞定。而 genkernel 在不加参数的情况下是不会选中任何 virtIO 相关选项的……（这是我后来才知道的）。所以如果不想被 genkernel 坑死的话就不要上 virtIO 驱动，至少安装系统时不要选。</p><h1 id="安装-Gentoo-的指导"><a href="#安装-Gentoo-的指导" class="headerlink" title="安装 Gentoo 的指导"></a>安装 Gentoo 的指导</h1><p>本文不会完整记录安装 Gentoo 的流程，因为相比于我自己写的，官方的安装手册要专业得多。而对于大多数流程来说，参考手册就行了。<br>此外，相比几年前 Gentoo 安装手册中的不完整而且烂的翻译，现在的中文手册已经看不到英文了，而且中文的翻译质量也不差。所以大可以安心照手册安装，不会有什么让人摸不着头脑的地方的。<br>此处为安装手册的链接：<a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/zh-cn">Gentoo AMD64 Handbook</a> 感谢每一位翻译贡献者的努力！    </p><h1 id="安装-Gentoo-的过程"><a href="#安装-Gentoo-的过程" class="headerlink" title="安装 Gentoo 的过程"></a>安装 Gentoo 的过程</h1><p>由于我本次安装使用的 init 是 systemd，而手册默认是为 openRC 准备的，因此我会写下不同于手册的，有关于 systemd 的配置。  </p><h2 id="选择-stage3"><a href="#选择-stage3" class="headerlink" title="选择 stage3"></a>选择 stage3</h2><p>如果要用 systemd 的话，记得选带 systemd 的 stage3。<br>虽然使用 openRC 的也行，但是切换完配置后会下载编译 systemd 及其相关依赖，挺耗时间的。<br>对了，建议到镜像站下载，比如 tuna。</p><h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p>由于 PVE 默认使用 SeaBIOS，所以就不用 ESP 了。但如果硬盘使用 GPT 的话记得加一个 BIOS 启动分区。</p><h2 id="选择配置文件"><a href="#选择配置文件" class="headerlink" title="选择配置文件"></a>选择配置文件</h2><p>如果你使用的是最新的 stage3 而且类型选择正确的话，这一步是可以跳过的。不过保险起见，还是用<code>eselect profile list</code>看一眼吧。<br>如果你发现系统默认的配置文件不是你想要的话，恭喜你，你多半选错 stage3 了！但其实也没什么，重新选择配置就行了，就是要多等一会了（指至少 1 小时，具体时间取决于机器配置，XD。</p><h2 id="locale-配置"><a href="#locale-配置" class="headerlink" title="locale 配置"></a>locale 配置</h2><p>在更改<code>/etc/locale.gen</code>，运行<code>locale-gen</code>后，最后的选择 locale 就不能按照手册来了。直接修改/创建<code>/etc/locale.conf</code>，在里面输入<code>LANG=&quot;en_US.utf8&quot;</code>即可。</p><blockquote><p>此处非常不建议选择有关 zh_CN 的任何 locale。除非在安装时就安装好了桌面环境并确保一旦重新启动就能进入桌面，不然就等着满屏幕的口口口吧。</p></blockquote><h2 id="内核配置"><a href="#内核配置" class="headerlink" title="内核配置"></a>内核配置</h2><p>如果在这时配置 kernel 也是可以的，但我更喜欢在系统能正常使用的时候再折腾，所以使用 genkernel 一条龙服务吧。<br>而如果选择 genkernel 的话，之前的驱动选择就十分重要了。当然，如果你和我一样在安装时选择了 virtIO 驱动，很快就会看到我之前被卡了无数次的错误，以及 genkernel 对于 virtIO 无尽的坑。</p><h2 id="主机名与-machine-ID"><a href="#主机名与-machine-ID" class="headerlink" title="主机名与 machine ID"></a>主机名与 machine ID</h2><p>systemd 需要一个 machine ID，运行<code>systemd-machine-id-setup</code>。<br>对于主机名，直接在<code>/etc/hostname</code>写就行了。默认该文件是自己创建的，所以看到 nano 显示是新文件时不用惊慌。<br>对了，记得把<code>/etc/hosts</code>中的<code>localhost</code>改为自己的主机名。</p><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><p>如果使用 dhcp 的话，记得重启后一波<code>systemctl enable dhcpcd.service</code>和<code>systemctl start dhcpcd.service</code>二连就行。<br>但如果你和我一样使用静态 IP 的话，就不能使用 dhcpcd 了。</p><blockquote><p>其实按照 wiki，是可以使用 dhcpcd 配置静态 IP 的，但我尝试了没成功。</p></blockquote><p>此处使用 systemd-networkd 配置静态 IP。在<code>/etc/systemd/network</code>下创建 network 配置文件，比如下面的配置文件<code>20-wired.network</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Match]</span><br><span class="line">Name&#x3D;enp1s0</span><br><span class="line"></span><br><span class="line">[Network]</span><br><span class="line">Address&#x3D;10.1.10.9&#x2F;24</span><br><span class="line">Gateway&#x3D;10.1.10.1</span><br><span class="line">DNS&#x3D;10.1.10.1</span><br><span class="line">#DNS&#x3D;8.8.8.8</span><br></pre></td></tr></table></figure><p>记得把<code>Name</code>改为自己的网卡名称。<br>对了，重启后也要进行<code>systemctl enable systemd-networkd.service</code>与<code>systemctl start systemd-networkd.service</code>二连。</p><h2 id="日志工具"><a href="#日志工具" class="headerlink" title="日志工具"></a>日志工具</h2><p>因为 systemd 已经自带了，所以手册关于安装日志工具的部分跳过就好。</p><h1 id="关于错误：block-device-is-not-a-valid-root-device-的解决方法"><a href="#关于错误：block-device-is-not-a-valid-root-device-的解决方法" class="headerlink" title="关于错误：block device is not a valid root device 的解决方法"></a>关于错误：block device is not a valid root device 的解决方法</h1><p>如果你和我一样在安装时 scsi 控制器选择了 virtIO 驱动时，就会在开机时看到以下类似错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;dev&#x2F;loop0: TYPE&#x3D;&quot;squashfs&quot;</span><br><span class="line">&#x2F;dev&#x2F;sda2: UUID&#x3D;&quot;eefd6088-354b-4b5b-97d8-5df2df******&quot; TYPE&#x3D;&quot;swap&quot; PARTLABEL&#x3D;&quot;primary&quot; PARTUUID&#x3D;&quot;ea452ed8-8b99-4a26-a662-ab43c******&quot;</span><br><span class="line">............</span><br><span class="line"></span><br><span class="line">block device is not a valid root device</span><br></pre></td></tr></table></figure><p>并且只能进入紧急命令行。<br>不要急，进入紧急命令行，看看<code>/dev/</code>下有什么。<br>如果我没猜错，安装根文件的 sda，要么不见了，要么变成了 hda。<br>对于我的情况，是直接不见了。<br>这种情况一般是 scsi 控制器出问题了，而且多半是驱动问题，导致根文件所在的硬盘无法加载。<br>而我的情况是，内核没有打入任何 virtIO 驱动，initramfs 也没有。<br>这就是 genkernel 对于 virtIO 的巨坑，因为它对 genkernel 支持不佳，内核编译时不会选中相关选项，就算自己选上了，在制作 initramfs 时也不会打入 virtIO 相关模块。<br>如果想要 genkernel 加上 virtIO 选项以及在 initramfs 中打入相关模块，请加上<code>--virtio</code>的选项。<br>同时，要自己配置内核时，也要选中 virtIO 的相关选项。<br>具体可参见<a href="https://wiki.gentoo.org/wiki/User:Flow/Gentoo_as_KVM_guest">User:Flow/Gentoo as KVM guest</a></p>]]></content>
    
    
    <summary type="html">当 Proxmox VE 已经搭建完成后，就可以准备开发机了。

创建虚拟机
其实 PVE 虚拟机创建向导很舒服，在一般情况下照着来就行。但对于 Gentoo，从这里开始就有坑了。
首先是 CPU，这个虽然不是坑，但这是我的一个小小的建议，将 CPU 类型设置为 host。毕竟由于 Gentoo 的特性，可以针对 CPU 进行优化，对于像好好玩 Gentoo 的人来说，个人认为这一点蛮重要的。而且由于要编译嘛，CPU 性能能榨干一点是一点。
此外就是各驱动了。千万不要选 VirtIO 驱动！除非你第一次安装就自己配置内核而且不使用 genkernel 生成的 initramfs。
因为以前被坑</summary>
    
    
    
    <category term="Home Lab" scheme="https://williamgong.github.io/categories/Home-Lab/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="Gentoo" scheme="https://williamgong.github.io/tags/Gentoo/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建 Home Lab 2 Proxmox VE 的搭建</title>
    <link href="https://williamgong.github.io/2021/05/05/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab2/"/>
    <id>https://williamgong.github.io/2021/05/05/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab2/</id>
    <published>2021-05-05T23:03:24.000Z</published>
    <updated>2021-11-15T10:11:25.098Z</updated>
    
    <content type="html"><![CDATA[<p>在硬件和 BIOS 配置完成后，就要着手开始搭建 Hypervisor 了。<br>因为要跑的客户机基本都是 Linux，所以使用基于 KVM 和 QEMU 的 Hypervisor 显然要更好。<br>所以我选择了 PVE，虽然每次管理都要看一遍订阅提醒就很烦。     </p><blockquote><p>当然，用 QEMU 加上 WebVirtMgr 自己糊一个 Hypervisor 也是可以的，我之前本来要使用这个方案的。<br>但毕竟稳定性最重要，而自己糊的肯定比不上专业的，而且看了看 PVE 的手册后……真香。      </p></blockquote><h1 id="Proxmox-VE-的安装"><a href="#Proxmox-VE-的安装" class="headerlink" title="Proxmox VE 的安装"></a>Proxmox VE 的安装</h1><blockquote><p>本 Blog 不会写出完整安装过程，只有在安装时的注意事项和各种坑。毕竟安装这玩意就比安装 Debian 复杂一点，看手册就行了。<br>推荐这篇 Proxmox VE 6.2 的翻译版手册，虽然是 6.2 版本稍微有点老，但可参考性还是不用担心的。<br>这里是链接：<a href="https://www.proxmox.wiki/?thread-137.htm">Proxmox6.2中文手册</a><br>在此感谢翻译该手册的大佬。</p></blockquote><h2 id="挂载安装-ISO"><a href="#挂载安装-ISO" class="headerlink" title="挂载安装 ISO"></a>挂载安装 ISO</h2><p>HPE Gen 10 Plus 具有网络挂载 ISO 的功能，直接提供 ISO 的 URL 就行了。但这功能只有在网速极快（比如千兆/万兆内网内有装有 ISO 的 NAS）的环境下才有意义。<br>如果在大多数情况下使用该功能的话，就是一杯茶，一包烟，ISO 载入看一天了。     </p><blockquote><p>因为这个功能是直接挂载，而不是下载到本地再加载。<br>毕竟想想也是，硬盘都还没分区表呢下载的文件放哪？<br>天真的我之前一度以为这功能是自动下载后在加载……蠢哭了。</p></blockquote><p>所以老老实实做启动 U 盘吧。记得插在机器后面的 USB 插槽上。<br>当然，从 Debian 上安装 Proxmox VE 也是可以的，但此处不过多说明，详情请见手册。</p><h2 id="分区设置"><a href="#分区设置" class="headerlink" title="分区设置"></a>分区设置</h2><p>Proxmox VE 的分区设置很奇怪，坑也很多，所以我也没研究透，但此处我在此写下我遇到的坑以及些许建议。<br>首先，安装 PVE 时，只能在一块盘上进行分区，所以像我这样有多硬盘的数据盘在安装完成后再分区吧。<br>在选择分区硬盘的旁边有 Options 的高级设置，可以设置分区的文件系统，但此处不建议改动，最多取消掉 swap 分区（此机器的 Hypervisor 上使用 swap 没有意义，尤其是我上了 32G 内存），除非你知道自己在做什么。<br>在 PVE 的默认分区方案下，硬盘会分别生成一个 bios 启动分区，一个 EFI 分区，剩下的空间会被划分为叫做 pve 的 lVM 卷组，里面是 root, data, swap 逻辑卷。<br>对于 data 卷，该分区就是 PVE 存储各种数据的分区，在安装后的管理界面上有两个卷，分别是 local 和 local-lvm，就是在 data 卷里的。其中 local 卷存储各种 ISO 镜像和容器模板，而 local-lvm 则存储虚拟机硬盘和容器。<br>如要取消 swap，则将 Options 中的 swapsize 设置为 0。<br>当然，在多硬盘情况下，可以取消 data 卷，将 maxvz 设置为 0 即可（但我没试验过，慎用）。      </p><blockquote><p>别问我为什么会同时有 bios 启动分区和 esp，我也不知道。</p></blockquote><h2 id="地点，时区设置"><a href="#地点，时区设置" class="headerlink" title="地点，时区设置"></a>地点，时区设置</h2><p>PVE 的地点设置不是选择的，需要自己输入，输入 China 就好。<br>对于时区，选择 Asia/Shanghai 或 Asia/Hong_Kong 都行，都是 GMT+8。      </p><h1 id="安装后的配置"><a href="#安装后的配置" class="headerlink" title="安装后的配置"></a>安装后的配置</h1><h2 id="网络管理界面"><a href="#网络管理界面" class="headerlink" title="网络管理界面"></a>网络管理界面</h2><p>PVE 的网络管理界面地址默认是本机 IP:8006，开机后机器如果链接 tty 的话会显示这个地址。</p><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><p>在 PVE 的管理界面，设置用户很简单，但在我的使用场景下，只用 root 就足够了。如果有多个用户要维护 PVE 的话，可以看看 PVE 复杂的权限系统。      </p><h2 id="ZFS-配置"><a href="#ZFS-配置" class="headerlink" title="ZFS 配置"></a>ZFS 配置</h2><p>管理界面创建 zpool 储存池也很方便，单盘创建 zpool 或创建 raidz 都不难，还可以设置各种参数和选项，比如我就打开了压缩功能。<br>对了，zpool 创建时是以硬盘为单位，创建 zpool 需要至少一块硬盘。<br>此外，ZFS 对内存的要求很高，现在推荐的使用 ZFS 的最小内存容量为基础 4G，zpool 总容量每 1T 额外加 1G。<br>而且 ZFS 在使用时会将大量内存用作缓存，我的机器平时运行就用了 20G+，而其中虚拟机的内存一共 10G。不过可以设置 ZFS 的内存使用上限，在 /etc/modprobe.d/zfs.conf 中输入<code>options zfs zfs_arc_max=[number]</code>即可。<code>[number]</code>为你想要设置的上限。<br>当然，也可以为储存池设置 SSD 缓存盘或 ZIL 日志盘，比如在我的分区方案下，SSD 上不设置 data 卷，剩余空间作为缓存盘，可以改善 ZFS 的性能。    </p><blockquote><p>但我还是想把一部分虚拟机硬盘放在 SSD 上。</p></blockquote>]]></content>
    
    
    <summary type="html">在硬件和 BIOS 配置完成后，就要着手开始搭建 Hypervisor 了。
因为要跑的客户机基本都是 Linux，所以使用基于 KVM 和 QEMU 的 Hypervisor 显然要更好。
所以我选择了 PVE，虽然每次管理都要看一遍订阅提醒就很烦。 

当然，用 QEMU 加上 WebVirtMgr 自己糊一个 Hypervisor 也是可以的，我之前本来要使用这个方案的。
但毕竟稳定性最重要，而自己糊的肯定比不上专业的，而且看了看 PVE 的手册后……真香。 

Proxmox VE 的安装
本 Blog 不会写出完整安装过程，只有在安装时的注意事项和各种坑。毕竟安装这玩意就比安装 De</summary>
    
    
    
    <category term="Home Lab" scheme="https://williamgong.github.io/categories/Home-Lab/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="Proxmox VE" scheme="https://williamgong.github.io/tags/Proxmox-VE/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建 Home Lab 1 HPE Gen 10 Plus 安装与配置</title>
    <link href="https://williamgong.github.io/2021/03/31/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab1/"/>
    <id>https://williamgong.github.io/2021/03/31/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab1/</id>
    <published>2021-03-31T22:47:08.000Z</published>
    <updated>2021-11-15T10:11:25.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主机的拆卸"><a href="#主机的拆卸" class="headerlink" title="主机的拆卸"></a>主机的拆卸</h1><p>这是 HPE Gen 10 Plus 正面：<br><img src="gen10p-front.jpg" alt="前面照"><br>前面板背后是四个横置的硬盘柜，面板上铭牌处的凹槽其实是个提手，往外一拉就可以拆卸。在外壳打开后侧面会有两个卡扣用以锁定前面板防止在正常使用时把面板抽出来（虽然可能性很小）。左下角是两个 USB3.2 接口，而且据称在后面的 USB 插槽还有空余的时候就不会识别插在这两个端口的 WTG 设备。       </p><blockquote><p>具体可以参考这篇文章：<a href="https://www.chiphell.com/thread-2246322-1-1.html">[整机搭建] &lt;更新软件篇&gt;HPE ProLiant MicroServer Gen10 Plus 开箱与扩展 </a></p></blockquote><p>主机的背后是风扇和各种插槽。包括四个 USB 2.0 插槽，一个 VGA 接口，一个 DP 1.0 接口，四个 RJ45 端口，速度应该是千兆。此外还有两个预置插槽，但上面的是 ILO 网卡预置的，下面的才是标准 PCI-E。<br>机身背后有两颗手拧螺丝和两颗涂黑的螺丝。卸下手拧螺丝后就可以卸下外壳，但只有在卸下那两颗黑色的螺丝后才能抽出主板。      </p><blockquote><p>整台机器的所有螺丝都是六角形的，但有一字刻痕，所以没有六角螺丝刀的话也可以试试大一些的一字螺丝刀。</p></blockquote><p>这是抽出主板后的侧面照：<br><img src="gen10p-side.jpg" alt="主板"><br>上面的内存就是用了国产颗粒的光威奕 Pro：<br><img src="ram.jpg" alt="内存"><br>包装也是充满中国风的：<br><img src="ram-pack.jpg" alt="中国风的包装"></p><p>硬盘柜是标准 3.5 英寸的。不过当我把硬盘插在上面的口时，硬盘一晃一晃的，有点糟心。不过范围很小，只要不是天天搬机器玩应该问题不大。<br>不过如果要插 2.5 英寸的硬盘就只能买硬盘盒了。<strong>不要买硬盘支架！</strong> SATA 接口是固定在硬盘柜内侧的，而一般的支架是为用连接线的硬盘柜而设计的，如果非要装的话，硬盘柜的接口与硬盘接口会有近 1 厘米的偏差。老老实实买硬盘盒吧，别贪便宜。</p><h1 id="ILO-破解卡"><a href="#ILO-破解卡" class="headerlink" title="ILO 破解卡"></a>ILO 破解卡</h1><p>主机上的 ILO 不是直接能用的，按<strong>正常</strong>方法，开启 ILO只能插专用的 ILO 网卡。这玩意在某宝/某鱼上不到 50 块就能买。<br>但，也有邪门的方法。<br>根据<a href="http://ylys.net/post/1114.html">这篇文章</a>，只需短接两个端口，就可以以共享网卡的形式使用 ILO。如果动手能力强的话，可以在槽内插铜线或者飞线，不过前者不稳定后者要改回来又太麻烦。<br>于是有位老哥自己画了一个破解卡的 PCB 设计图，送去嘉立创 5 块钱就可以激活 ILO。这是原帖：<br><a href="https://www.chiphell.com/thread-2308433-1-1.html"> [NAS] HPE MicroServer Gen10+ ILO5破解卡制作方式共享，包括电路板文件 </a><br>这是我自己下单的成品：<br><img src="ilo.jpg" alt="嘉立创最小下单数量是 5 个，剩下的拿去当钥匙扣了。（大雾）"></p><blockquote><p>也就是说 ILO 控制芯片是集成在主板内的，那个 ILO 网卡里只有一个网卡模块。<br>反正我觉得这个网卡纯属智商税……</p></blockquote><h1 id="ILO-设置"><a href="#ILO-设置" class="headerlink" title="ILO 设置"></a>ILO 设置</h1><p>在设置 ILO 前，路由器要先分配静态 IP，毕竟没人想每次登录都要进路由器看看 IP 不是？<br>开机按 F9 和 F10 都可以进入 BIOS。不过按 F9 是直接的 BIOS 界面，F10 进入的是 Intelligent Provisioning 界面。后者界面更友好也支持鼠标操作。有鼠标的话建议后者。<br>如果使用共享端口的话，请注意这个端口只能是端口 1 或 2 而且默认是 1。</p>]]></content>
    
    
    <summary type="html">主机的拆卸
这是 HPE Gen 10 Plus 正面：

前面板背后是四个横置的硬盘柜，面板上铭牌处的凹槽其实是个提手，往外一拉就可以拆卸。在外壳打开后侧面会有两个卡扣用以锁定前面板防止在正常使用时把面板抽出来（虽然可能性很小）。左下角是两个 USB3.2 接口，而且据称在后面的 USB 插槽还有空余的时候就不会识别插在这两个端口的 WTG 设备。 

具体可以参考这篇文章：[整机搭建] &lt;更新软件篇&gt;HPE ProLiant MicroServer Gen10 Plus 开箱与扩展 

主机的背后是风扇和各种插槽。包括四个 USB 2.0 插槽，一个 VGA 接口，一个 DP 1.0 接口</summary>
    
    
    
    <category term="Home Lab" scheme="https://williamgong.github.io/categories/Home-Lab/"/>
    
    
    <category term="硬件" scheme="https://williamgong.github.io/tags/%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建 Home Lab 0 硬件的选择与架构方案的确定</title>
    <link href="https://williamgong.github.io/2021/03/28/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab0/"/>
    <id>https://williamgong.github.io/2021/03/28/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhomelab0/</id>
    <published>2021-03-28T22:06:20.000Z</published>
    <updated>2021-11-15T10:11:25.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>搭建 Home Lab 的想法，起源于我有一次运行虚拟机的时候。<br>虽然我现在的主力笔记本性能不差，16G 内存 + 256G SSD，但众所周知 Chrome 是著名的性能消耗大户，导致我的内存有一半被它吞了；而且由于笔记本上安装的重型软件和游戏实在太多了，尤其是游戏，占了 60G+ 的空间，导致剩余硬盘空间捉襟见肘。因此每一次使用虚拟机时，都要扣扣索索的盘算着分配的内存和虚拟磁盘的容量。更令人恼火的是，每次创建虚拟机，都要删掉一个游戏或者是占用了大量磁盘空间的软件，而且每次跑虚拟机只是测试一下而已，没过多久就要删，而删去虚拟机的时候再去下载这些程序是十分痛苦的事情。因此我便产生了专门买服务器跑虚拟机的想法。<br>而搭建 Home Lab 的另外一个原因，是因为折腾。<br>曾经我一直在一台 10 年前购入的 Lenovo 笔记本上跑 Gentoo，但由于<strong>各 种 各 样</strong>的原因，Gentoo 一直没安装成功，这称为了我心中的一根刺；而且我手头缺少一台 Linux 开发机，虽然 WSL 已经能满足大部分需求，但有些东西是 WSL 做不到的。而搭建一台 Home Lab，能做到All in One，开发机什么的将不再是问题。      </p><blockquote><p>虽然缺少 Linux 开发机是一个伪需求……</p></blockquote><h1 id="对于Home-Lab的需求"><a href="#对于Home-Lab的需求" class="headerlink" title="对于Home Lab的需求"></a>对于Home Lab的需求</h1><p>既然要选择买服务器搭建 Home Lab，那就一步到位吧。<br>那我对 Home Lab的需求是什么呢？</p><ol><li><strong>NAS</strong>。我喜欢屯资源，什么无损音乐，番剧电影，盗版游戏加起来快有几百 G 了，虽然手头有个 2T 的移动硬盘，但每一次连接和卸载移动硬盘十分麻烦；而且我经常挂机下载，一挂机就是几天，对于笔记本而言总会有稳定性问题，用专用的机器进行显然要好很多。</li><li><strong>开发机</strong>。毕竟我要折腾 Gentoo，天天跑编译，CPU 性能还是挺重要的，至少成品 NAS 常用的 Atom，赛扬会有些吃力。</li><li><strong>测试机</strong>。有时我需要一台 Windows 测试机试毒养蛊，有时又会开一台 Linux 虚拟机折腾。不过由于只是测试，性能需求会小很多。</li></ol><h1 id="硬件的选择"><a href="#硬件的选择" class="headerlink" title="硬件的选择"></a>硬件的选择</h1><p>本人学生党，对硬件的选择自然是越便宜越好，但在金钱与性能之间权衡是一件很痛苦的事情。死来想去，确认了如下方案。</p><h2 id="服务器主机"><a href="#服务器主机" class="headerlink" title="服务器主机"></a>服务器主机</h2><p>看了几个月，最终确认了购入服务器的型号：HPE ProLiant MicroServer Gen10 Plus。<br>为什么要选择这台机器呢？</p><ol><li><strong>小</strong>。机身设计十分紧凑，应该是四盘位微型服务器的极限了，而且高度只有它的前代产品的一半左右。放在宿舍里也不占空间，也容易搬。</li><li><strong>性能不差</strong>。高配的版本使用的 E3-2200 CPU 性能肯定不辍，但多达 71W 的 TDP 和价钱使我果断放弃，但低配的 G5420 性能也不差。</li><li><strong>易于拆装和升级</strong>。不像一部分　NAS　将　CPU　焊在主板上，这台机器　CPU　可以拆卸，而且接口是　LGA1151，虽然不能换大部分至强 CPU，但可以装大部分桌面级 CPU 和一部分 E3，并且高性能服务器级 CPU 与我无缘。虽然我不会上桌面级的 U，但至少还有的选。内存标准最大容量 32G，而且实测最高可以到 64G（当然也与选择的 CPU 有关）。两个标准的 DDR4 内存插槽，支持双通道和 ECC。此外还配有一个标准的 PCI-E 3.0 插槽和一个专用于 ILO 的阉割版 PCI-E 插槽（等于除了插 ILO 网卡外没什么用）。不过这也是它的一个缺点。（但至少还有一个插槽不是吗？）</li></ol><p>我的机器是在闲鱼上买的二手未开封机器，相比与狗东上 6000+ 的价格，闲鱼上的价格只有三分之二，而且和全新的没区别。（除了容易被坑，毕竟虽然只有三分之二还是 将近 4000 RMB，被骗了就真的难受了。）</p><h2 id="内存与硬盘"><a href="#内存与硬盘" class="headerlink" title="内存与硬盘"></a>内存与硬盘</h2><p>内存本来是准备一条 16G 的，但下单的时候没注意买成了两条，于是变成了 32G。型号的光威奕 PRO，国产颗粒。虽说支持国产是一个因素，但更重要的原因是便宜。<br>至于硬盘，由于要建 NAS，硬盘不敢买差的，于是选择了 2T 的希捷酷狼和一个金士顿的 128G SATA SSD 用作系统盘。</p><h2 id="网络设备"><a href="#网络设备" class="headerlink" title="网络设备"></a>网络设备</h2><p>由于要开各种网络服务，一个路由器是很有必要的，但只需要有就行了。不过由于需要校园网拨号，于是买了一个二手小娱 C3 刷 Open WRT，不到 100 RMB。</p><h1 id="系统架构的确定"><a href="#系统架构的确定" class="headerlink" title="系统架构的确定"></a>系统架构的确定</h1><p>曾经我打算在主机上直接装 Gentoo，其他的开虚拟机，但毕竟实验/开发环境天天挂，最后还是选择在主机上装 Hypervisor，各种服务跑虚拟机上的方案。这个 Hypervisor 将同时运行至少两台虚拟机，NAS 和开发机。有时还要同时运行测试机和跑各种 docker/LXC 的虚拟机。<br>Hypervisor 我最终选择了 Proxmox VE。这玩意如果不订阅每次登录都要弹警告很烦人，因此我曾一度打算装 kvm 和 qemu 自己糊，但实际用起来后我直呼真香。NAS 我选择了OpenMediaVault，开发机不用多说自然是 Gentoo。</p>]]></content>
    
    
    <summary type="html">前言
搭建 Home Lab 的想法，起源于我有一次运行虚拟机的时候。
虽然我现在的主力笔记本性能不差，16G 内存 + 256G SSD，但众所周知 Chrome 是著名的性能消耗大户，导致我的内存有一半被它吞了；而且由于笔记本上安装的重型软件和游戏实在太多了，尤其是游戏，占了 60G+ 的空间，导致剩余硬盘空间捉襟见肘。因此每一次使用虚拟机时，都要扣扣索索的盘算着分配的内存和虚拟磁盘的容量。更令人恼火的是，每次创建虚拟机，都要删掉一个游戏或者是占用了大量磁盘空间的软件，而且每次跑虚拟机只是测试一下而已，没过多久就要删，而删去虚拟机的时候再去下载这些程序是十分痛苦的事情。因此我便产生了专门买</summary>
    
    
    
    <category term="Home Lab" scheme="https://williamgong.github.io/categories/Home-Lab/"/>
    
    
    <category term="Linux" scheme="https://williamgong.github.io/tags/Linux/"/>
    
    <category term="硬件" scheme="https://williamgong.github.io/tags/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="网络" scheme="https://williamgong.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>“O泡果奶”app解析2 lua文件解密与反编译</title>
    <link href="https://williamgong.github.io/2020/10/21/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%902_lua%E6%96%87%E4%BB%B6%E8%A7%A3%E5%AF%86%E4%B8%8E%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    <id>https://williamgong.github.io/2020/10/21/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%902_lua%E6%96%87%E4%BB%B6%E8%A7%A3%E5%AF%86%E4%B8%8E%E5%8F%8D%E7%BC%96%E8%AF%91/</id>
    <published>2020-10-21T18:14:29.000Z</published>
    <updated>2021-11-15T10:11:25.002Z</updated>
    
    <content type="html"><![CDATA[<p>当发现lua文件才是本体后，接下来的步骤就是解析lua文件，但预料之中这个过程远比我预想的要困难</p><h1 id="尝试直接打开lua文件"><a href="#尝试直接打开lua文件" class="headerlink" title="尝试直接打开lua文件"></a>尝试直接打开lua文件</h1><p>我们先尝试直接打开main.lua:<img src="lua-encrypt.jpg" alt="lua-encrypt"><br>???<br>lua不是门脚本语言吗，为什么像用记事本打开二进制文件一样的全是乱码？<br>一通Google之后，我发现原来lua是可以编译为字节码的，编译后文件叫做luac。<br>那么反编译不就行了？     </p><h1 id="尝试反编译"><a href="#尝试反编译" class="headerlink" title="尝试反编译"></a>尝试反编译</h1><p>于是我用unluac反编译时，得到了这个：<img src="unluac-err.jpg" alt="unluac-err"><br>意思是这不是luac文件喽？<br>二进制文件的文件头都会标注文件类型，那用16进制编辑器打开看看：<img src="hex-encrypt.jpg" alt="hex-encrypt"><br>没有文件头？<br>既然没有文件头，程序却能以lua文件运行，那只能说明被加密了。    </p><h1 id="解密luac文件"><a href="#解密luac文件" class="headerlink" title="解密luac文件"></a>解密luac文件</h1><p>但我在外壳程序怎么都找不到解密的代码。<br>绝望的我只好上知乎寻找已经逆向成功的大佬。<br>幸好，一位好心的大佬一语点醒梦中人：<img src="zhihu.jpg" alt="zhihu"></p><blockquote><p>请无视那个“2条回复”。第二条是我成功后对他的感谢</p></blockquote><p>那意思是这个apk和去年那个几乎一样喽？<br>不管了先试试吧。</p><p>于是经过一下午的百度后，我找到了<a href="https://blog.csdn.net/gooding300/article/details/101540988">这篇文章</a>：<br>这位博主根据壳里的解密代码写了一个程序：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">decrypt</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *buff, <span class="keyword">size_t</span> size)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> *buff1 = (<span class="keyword">unsigned</span> <span class="keyword">char</span> *) <span class="built_in">malloc</span>(size);</span><br><span class="line">    buff1[<span class="number">0</span>] = <span class="number">27</span>;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; size; i++) &#123;</span><br><span class="line">        t += size;</span><br><span class="line">        buff1[i] = buff[i] ^ (t</span><br><span class="line">                              + ((<span class="keyword">unsigned</span> <span class="keyword">int</span>) (((<span class="keyword">unsigned</span> <span class="keyword">long</span>) (<span class="number">-2139062143L</span>L * t) &gt;&gt; <span class="number">32</span>) + t) &gt;&gt; <span class="number">7</span>)</span><br><span class="line">                              + ((<span class="keyword">signed</span> <span class="keyword">int</span>) (((<span class="keyword">unsigned</span> <span class="keyword">long</span>) (<span class="number">-2139062143L</span>L * t) &gt;&gt; <span class="number">32</span>) + t) &lt; <span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> buff1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buff[<span class="number">20480</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> filename[<span class="number">20</span>] = <span class="string">&quot;main.lua&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">strcpy</span>(filename,argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;File name: %s \n&quot;</span>, filename);</span><br><span class="line"></span><br><span class="line">    FILE *fp = fopen(filename, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">size_t</span> size = <span class="number">0</span>;</span><br><span class="line">    size = fread(buff, <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">char</span>), <span class="number">20480</span>, fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;File size: %ld \n&quot;</span>, size);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> *res = decrypt(buff, size);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">strcat</span>(filename, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    FILE *fp1 = fopen(filename, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    fwrite(res, <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">char</span>), size, fp1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Output: %s&quot;</span>, filename);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按照这篇blog的使用方法，编译后运行，果然成功解密了。<img src="hex-decrypt.jpg" alt="hex-decrypt"></p><h1 id="还原lua文件"><a href="#还原lua文件" class="headerlink" title="还原lua文件"></a>还原lua文件</h1><p>那么就能成功反编译了。<br>以下是main.lua反编译后的代码：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> L0, L1, L2, L3</span><br><span class="line">L0 = <span class="built_in">require</span></span><br><span class="line">L1 = <span class="string">&quot;import&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.app.*&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.os.*&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.widget.*&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.view.*&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.view.View&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.content.Context&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.media.MediaPlayer&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;android.media.AudioManager&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = import</span><br><span class="line">L1 = <span class="string">&quot;com.androlua.Ticker&quot;</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = activity</span><br><span class="line">L0 = L0.getSystemService</span><br><span class="line">L1 = Context</span><br><span class="line">L1 = L1.AUDIO_SERVICE</span><br><span class="line">L0 = L0(L1)</span><br><span class="line">L0 = L0.setStreamVolume</span><br><span class="line">L1 = AudioManager</span><br><span class="line">L1 = L1.STREAM_MUSIC</span><br><span class="line">L2 = <span class="number">15</span></span><br><span class="line">L3 = AudioManager</span><br><span class="line">L3 = L3.FLAG_SHOW_UI</span><br><span class="line">L0(L1, L2, L3)</span><br><span class="line">L0 = activity</span><br><span class="line">L0 = L0.getDecorView</span><br><span class="line">L0 = L0()</span><br><span class="line">L0 = L0.setSystemUiVisibility</span><br><span class="line">L1 = View</span><br><span class="line">L1 = L1.SYSTEM_UI_FLAG_HIDE_NAVIGATION</span><br><span class="line">L2 = View</span><br><span class="line">L2 = L2.SYSTEM_UI_FLAG_IMMERSIVE</span><br><span class="line">L1 = L1 | L2</span><br><span class="line">L0(L1)</span><br><span class="line">L0 = MediaPlayer</span><br><span class="line">L0 = L0()</span><br><span class="line">m = L0</span><br><span class="line">L0 = m</span><br><span class="line">L0 = L0.reset</span><br><span class="line">L0()</span><br><span class="line">L0 = m</span><br><span class="line">L0 = L0.setDataSource</span><br><span class="line">L1 = activity</span><br><span class="line">L1 = L1.getLuaDir</span><br><span class="line">L1 = L1()</span><br><span class="line">L2 = <span class="string">&quot;/mc.mp3&quot;</span></span><br><span class="line">L1 = L1 .. L2</span><br><span class="line">L0(L1)</span><br><span class="line">L0 = m</span><br><span class="line">L0 = L0.prepare</span><br><span class="line">L0()</span><br><span class="line">L0 = m</span><br><span class="line">L0 = L0.start</span><br><span class="line">L0()</span><br><span class="line">L0 = m</span><br><span class="line">L0 = L0.setLooping</span><br><span class="line">L1 = <span class="literal">true</span></span><br><span class="line">L0(L1)</span><br><span class="line">L0 = Ticker</span><br><span class="line">L0 = L0()</span><br><span class="line">ti = L0</span><br><span class="line">L0 = ti</span><br><span class="line">L0.Period = <span class="number">10</span></span><br><span class="line">L0 = ti</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">L1</span><span class="params">()</span></span></span><br><span class="line">  <span class="keyword">local</span> L0, L1, L2, L3</span><br><span class="line">  L0 = activity</span><br><span class="line">  L0 = L0.getSystemService</span><br><span class="line">  L1 = Context</span><br><span class="line">  L1 = L1.AUDIO_SERVICE</span><br><span class="line">  L0 = L0(L1)</span><br><span class="line">  L0 = L0.setStreamVolume</span><br><span class="line">  L1 = AudioManager</span><br><span class="line">  L1 = L1.STREAM_MUSIC</span><br><span class="line">  L2 = <span class="number">15</span></span><br><span class="line">  L3 = AudioManager</span><br><span class="line">  L3 = L3.FLAG_SHOW_UI</span><br><span class="line">  L0(L1, L2, L3)</span><br><span class="line">  L0 = activity</span><br><span class="line">  L0 = L0.getDecorView</span><br><span class="line">  L0 = L0()</span><br><span class="line">  L0 = L0.setSystemUiVisibility</span><br><span class="line">  L1 = View</span><br><span class="line">  L1 = L1.SYSTEM_UI_FLAG_HIDE_NAVIGATION</span><br><span class="line">  L2 = View</span><br><span class="line">  L2 = L2.SYSTEM_UI_FLAG_IMMERSIVE</span><br><span class="line">  L1 = L1 | L2</span><br><span class="line">  L0(L1)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">L0.onTick = L1</span><br><span class="line">L0 = ti</span><br><span class="line">L0 = L0.start</span><br><span class="line">L0()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">L0</span><span class="params">(A0, A1)</span></span></span><br><span class="line">  <span class="keyword">local</span> L2, L3, L4, L5</span><br><span class="line">  L2 = <span class="built_in">string</span></span><br><span class="line">  L2 = L2.<span class="built_in">find</span></span><br><span class="line">  L3 = <span class="built_in">tostring</span></span><br><span class="line">  L4 = A1</span><br><span class="line">  L3 = L3(L4)</span><br><span class="line">  L4 = <span class="string">&quot;KEYCODE_BACK&quot;</span></span><br><span class="line">  L2 = L2(L3, L4)</span><br><span class="line">  <span class="keyword">if</span> L2 ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">    L2 = activity</span><br><span class="line">    L2 = L2.getSystemService</span><br><span class="line">    L3 = Context</span><br><span class="line">    L3 = L3.AUDIO_SERVICE</span><br><span class="line">    L2 = L2(L3)</span><br><span class="line">    L2 = L2.setStreamVolume</span><br><span class="line">    L3 = AudioManager</span><br><span class="line">    L3 = L3.STREAM_MUSIC</span><br><span class="line">    L4 = <span class="number">15</span></span><br><span class="line">    L5 = AudioManager</span><br><span class="line">    L5 = L5.FLAG_SHOW_UI</span><br><span class="line">    L2(L3, L4, L5)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  L2 = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">return</span> L2</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">onKeyDown = L0</span><br></pre></td></tr></table></figure><blockquote><p>别问我那些L0，L1哪来的，这是unluac自己加的，而且我也懒得修饰了。</p></blockquote><h1 id="关于其它的lua文件"><a href="#关于其它的lua文件" class="headerlink" title="关于其它的lua文件"></a>关于其它的lua文件</h1><p>以下是同文件夹内的另一个lua文件init.lua：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> L0, L1</span><br><span class="line">appname = <span class="string">&quot;\230\143\146\228\187\1829.0&quot;</span></span><br><span class="line">appver = <span class="string">&quot;9.0&quot;</span></span><br><span class="line">packagename = <span class="string">&quot;com.ta.cnm&quot;</span></span><br><span class="line">appcode = <span class="string">&quot;9&quot;</span></span><br><span class="line">appsdk = <span class="string">&quot;15&quot;</span></span><br><span class="line">theme = <span class="string">&quot;Theme_DeviceDefault_Light_NoActionBar&quot;</span></span><br><span class="line">L0 = &#123;&#125;</span><br><span class="line">L1 = <span class="string">&quot;WRITE_EXTERNAL_STORAGE&quot;</span></span><br><span class="line">L0[<span class="number">1</span>] = L1</span><br><span class="line">user_permission = L0</span><br></pre></td></tr></table></figure><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>关于这个app与去年“927”中那个app的区别，我会在后面说明的。<br>下一篇我们来逆向另外一“存档人物修改2.0.apk”</p>]]></content>
    
    
    <summary type="html">当发现lua文件才是本体后，接下来的步骤就是解析lua文件，但预料之中这个过程远比我预想的要困难

尝试直接打开lua文件
我们先尝试直接打开main.lua:
???
lua不是门脚本语言吗，为什么像用记事本打开二进制文件一样的全是乱码？
一通Google之后，我发现原来lua是可以编译为字节码的，编译后文件叫做luac。
那么反编译不就行了？ 

尝试反编译
于是我用unluac反编译时，得到了这个：
意思是这不是luac文件喽？
二进制文件的文件头都会标注文件类型，那用16进制编辑器打开看看：
没有文件头？
既然没有文件头，程序却能以lua文件运行，那只能说明被加密了。 

解密luac</summary>
    
    
    
    <category term="Android" scheme="https://williamgong.github.io/categories/Android/"/>
    
    
    <category term="Android" scheme="https://williamgong.github.io/tags/Android/"/>
    
    <category term="逆向工程" scheme="https://williamgong.github.io/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="杂谈" scheme="https://williamgong.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>“O泡果奶”app解析1 apk文件逆向</title>
    <link href="https://williamgong.github.io/2020/10/14/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%901_apk%E6%96%87%E4%BB%B6%E9%80%86%E5%90%91/"/>
    <id>https://williamgong.github.io/2020/10/14/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%901_apk%E6%96%87%E4%BB%B6%E9%80%86%E5%90%91/</id>
    <published>2020-10-14T17:47:30.000Z</published>
    <updated>2021-11-15T10:11:24.998Z</updated>
    
    <content type="html"><![CDATA[<p>当比对完hash后，接下来就是对整个apk进行逆向了。<br>首先我们对“一份礼物.apk”进行逆向</p><h1 id="需要的工具"><a href="#需要的工具" class="headerlink" title="需要的工具"></a>需要的工具</h1><ul><li><a href="https://github.com/skylot/jadx">Jadx</a><h1 id="分析apk文件结构"><a href="#分析apk文件结构" class="headerlink" title="分析apk文件结构"></a>分析apk文件结构</h1>apk本质上是一个加了签名和元数据的压缩包，用普通的解压工具解压即可得到内部的文件。<br>内部的文件结构如下所示：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── AndroidManifest.xml</span><br><span class="line">├── META-INF</span><br><span class="line">├── assets</span><br><span class="line">├── classes.dex</span><br><span class="line">├── com</span><br><span class="line">├── lib</span><br><span class="line">├── lua</span><br><span class="line">└── res</span><br></pre></td></tr></table></figure>再看看/assets下的文件：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── icon.png</span><br><span class="line">├── init.lua</span><br><span class="line">├── layout.lua</span><br><span class="line">├── main.lua</span><br><span class="line">└── mc.mp3</span><br></pre></td></tr></table></figure><code>mc.mp3</code>就是O泡果奶的广告音频。</li></ul><h1 id="查看app信息"><a href="#查看app信息" class="headerlink" title="查看app信息"></a>查看app信息</h1><p>我们打AndroidManifest.xml，查看apk包名等信息。<br>AndroidManifest.xml文件如下:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">package</span>=<span class="string">&quot;com.lc.nb&quot;</span> <span class="attr">android:versionCode</span>=<span class="string">&quot;9&quot;</span> <span class="attr">android:versionName</span>=<span class="string">&quot;凉城fork by Keven&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">&quot;21&quot;</span> <span class="attr">android:targetSdkVersion</span>=<span class="string">&quot;21&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:label</span>=<span class="string">&quot;一份礼物&quot;</span> <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/icon&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.LuaApplication&quot;</span> <span class="attr">android:persistent</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:largeHeap</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:resizeableActivity</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:supportsPictureInPicture</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;android.max_aspect&quot;</span> <span class="attr">android:value</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Holo.Light.NoActionBar&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;插件9.0&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.Main&quot;</span> <span class="attr">android:screenOrientation</span>=<span class="string">&quot;user&quot;</span> <span class="attr">android:configChanges</span>=<span class="string">&quot;keyboardHidden|orientation|screenSize&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;.*\\.alp&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;content&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;.*\\.alp&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;application/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;audio/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;video/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;text/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;*/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;.*\\.alp&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;content&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;application/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;audio/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;video/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;text/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;*/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;.*\\.alp&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Translucent.NoTitleBar&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.tencent.connect.common.AssistActivity&quot;</span> <span class="attr">android:screenOrientation</span>=<span class="string">&quot;behind&quot;</span> <span class="attr">android:configChanges</span>=<span class="string">&quot;keyboardHidden|orientation&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.tencent.tauth.AuthActivity&quot;</span> <span class="attr">android:launchMode</span>=<span class="string">&quot;singleTask&quot;</span> <span class="attr">android:noHistory</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;tencent222222&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Holo.Light.NoActionBar&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;插件9.0&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.LuaActivity&quot;</span> <span class="attr">android:configChanges</span>=<span class="string">&quot;keyboardHidden|orientation|screenSize&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;com.andlua.ly&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.EDIT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;content&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;text/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;content&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:mimeType</span>=<span class="string">&quot;text/*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:host</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:pathPattern</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Holo.Light.NoActionBar&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;一份礼物&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.LuaActivityX&quot;</span> <span class="attr">android:excludeFromRecents</span>=<span class="string">&quot;false&quot;</span> <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span> <span class="attr">android:configChanges</span>=<span class="string">&quot;keyboardHidden|orientation|screenSize&quot;</span> <span class="attr">android:documentLaunchMode</span>=<span class="string">&quot;intoExisting&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.NoDisplay&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;一份礼物&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.Welcome&quot;</span> <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Translucent.NoTitleBar&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.branch.www.screencapture.ScreenCaptureActivity&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.LuaService&quot;</span> <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:label</span>=<span class="string">&quot;一份礼物&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.LuaAccessibilityService&quot;</span> <span class="attr">android:permission</span>=<span class="string">&quot;&quot;</span> <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;android.accessibilityservice&quot;</span> <span class="attr">android:resource</span>=<span class="string">&quot;@xml/accessibility_service_config&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.accessibilityservice.AccessibilityService&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.accessibilityservice.category.FEEDBACK_AUDIBLE&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.accessibilityservice.category.FEEDBACK_HAPTIC&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.accessibilityservice.category.FEEDBACK_SPOKEN&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">provider</span> <span class="attr">android:name</span>=<span class="string">&quot;android.content.FileProvider&quot;</span> <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span> <span class="attr">android:authorities</span>=<span class="string">&quot;com.lc.nb&quot;</span> <span class="attr">android:grantUriPermissions</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;android.support.FILE_PROVIDER_PATHS&quot;</span> <span class="attr">android:resource</span>=<span class="string">&quot;@anim/abc_fade_out&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到作者把ID留在了<code>versionName</code>里，心够大的。<br>以及可以看到申请的权限只有储存权限，这样看来估计没有窃取信息等行为了。<br>不过</p><pre><code>package=&quot;com.lc.nb&quot;</code></pre><p>凉城NB！（个鬼）</p><h1 id="使用Jadx对整个apk进行逆向"><a href="#使用Jadx对整个apk进行逆向" class="headerlink" title="使用Jadx对整个apk进行逆向"></a>使用Jadx对整个apk进行逆向</h1><p>下载好Jadx后，用它打开这个apk<img src="jadx.jpg" alt="jadx"><br>看，一键反编译，自动反混淆！<br>文件里有很多第三方包，看上去很可疑。</p><h1 id="定位入口文件"><a href="#定位入口文件" class="headerlink" title="定位入口文件"></a>定位入口文件</h1><p>注意AndroidManifest.xml中的这一个标签：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Holo.Light.NoActionBar&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:label</span>=<span class="string">&quot;插件9.0&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;com.androlua.Main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;user&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:configChanges</span>=<span class="string">&quot;keyboardHidden|orientation|screenSize&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见入口文件在<code>com.android.Main</code>中。<br>那么打开看看：<img src="jadx-main.jpg" alt="Jadx-main"><br>确定了，这是AndroidLua应用，而<code>/asset</code>中的lua脚本才是本体。<br>OK，先到这里，下次我们重点解析作为本体的lua文件。</p>]]></content>
    
    
    <summary type="html">当比对完hash后，接下来就是对整个apk进行逆向了。
首先我们对“一份礼物.apk”进行逆向

需要的工具
 * Jadx分析apk文件结构
   apk本质上是一个加了签名和元数据的压缩包，用普通的解压工具解压即可得到内部的文件。
   内部的文件结构如下所示：1
   2
   3
   4
   5
   6
   7
   8
   9
   
   
   .
   ├── AndroidManifest.xml
   ├── META-INF
   ├── assets
   ├── classes.dex
   ├── com
   ├── lib
   ├── lua
   </summary>
    
    
    
    <category term="Android" scheme="https://williamgong.github.io/categories/Android/"/>
    
    
    <category term="Android" scheme="https://williamgong.github.io/tags/Android/"/>
    
    <category term="逆向工程" scheme="https://williamgong.github.io/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="杂谈" scheme="https://williamgong.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>“O泡果奶”app解析0 hash比对</title>
    <link href="https://williamgong.github.io/2020/10/14/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%900_hash%E6%AF%94%E5%AF%B9/"/>
    <id>https://williamgong.github.io/2020/10/14/O%E6%B3%A1%E6%9E%9C%E5%A5%B6app%E8%A7%A3%E6%9E%900_hash%E6%AF%94%E5%AF%B9/</id>
    <published>2020-10-14T02:22:30.000Z</published>
    <updated>2021-11-15T10:11:24.998Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>当我关注到这个app时，是我一个现居异地的朋友发的一条说说。<br>其实早在几个小时前，宿舍里放出O泡果奶广告的声音时，我就体会过这个app的威力了，但我以为它只在我们学校内传播。<br>直到我看见了那条说说。<br>当我顺手转发了之后，十多条评论纷纷抱怨他们的经历，我一个朋友还给我发了他们大学流传的apk，我逐渐意识到不对劲。<br>但真正使我打算认真分析这个app的，是我另一个朋友让我发这个apk的hash的消息。<br>于是，我便走上了逆向工程之路。</p><h1 id="hash比对的原因"><a href="#hash比对的原因" class="headerlink" title="hash比对的原因"></a>hash比对的原因</h1><p>不同地方流传的apk，名字可能会不一样。就比如我手上的两个apk：“一份礼物.apk”和“存档人物修改2.0.apk”，要验证这两个apk是否是同一个，就只能比对hash。    </p><h1 id="获取hash"><a href="#获取hash" class="headerlink" title="获取hash"></a>获取hash</h1><p>这是“一份礼物.apk”的hash：<img src="hash-gift.jpg" alt="hash-gift"><br>这是“存档人物修改2.0.apk”的hash:<img src="hash-save.jpg" alt="hash-save"><br>显然二者不是同一个apk。<br>后来跟朋友的hash比对，“一份礼物.apk”的hash与他的一致。</p>]]></content>
    
    
    <summary type="html">前言
当我关注到这个app时，是我一个现居异地的朋友发的一条说说。
其实早在几个小时前，宿舍里放出O泡果奶广告的声音时，我就体会过这个app的威力了，但我以为它只在我们学校内传播。
直到我看见了那条说说。
当我顺手转发了之后，十多条评论纷纷抱怨他们的经历，我一个朋友还给我发了他们大学流传的apk，我逐渐意识到不对劲。
但真正使我打算认真分析这个app的，是我另一个朋友让我发这个apk的hash的消息。
于是，我便走上了逆向工程之路。

hash比对的原因
不同地方流传的apk，名字可能会不一样。就比如我手上的两个apk：“一份礼物.apk”和“存档人物修改2.0.apk”，要验证这两个apk是</summary>
    
    
    
    <category term="Android" scheme="https://williamgong.github.io/categories/Android/"/>
    
    
    <category term="Android" scheme="https://williamgong.github.io/tags/Android/"/>
    
    <category term="逆向工程" scheme="https://williamgong.github.io/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="杂谈" scheme="https://williamgong.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Blog搭建实录-2 配置Github Actions</title>
    <link href="https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-2_%E9%85%8D%E7%BD%AEGithub_Actions/"/>
    <id>https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-2_%E9%85%8D%E7%BD%AEGithub_Actions/</id>
    <published>2020-10-10T23:06:57.000Z</published>
    <updated>2021-11-15T10:11:24.998Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Github-Actions介绍"><a href="#Github-Actions介绍" class="headerlink" title="Github Actions介绍"></a>Github Actions介绍</h1><blockquote><p>注：以下内容大部分参考了<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">这篇post</a>，这篇post讲的比我清楚多了，人家是专业的。</p></blockquote><h2 id="什么是Github-Actions"><a href="#什么是Github-Actions" class="headerlink" title="什么是Github Actions?"></a>什么是Github Actions?</h2><p>Github Actions是Github自己推出的<a href="http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html">持续集成服务</a>，可以自动地进行各种各样的构建并发布到正确的地方。<br>在本Blog中，我就使用了Github Actions来自动构建Hexo的静态网页并将它发布到Github Pages上。<br>这些构建，发布之类的操作，在Github Actions中被称为actions。用户可以将actions写成独立的脚本并供给其他人使用。Github建立了一个官方市场，可以找到我们需要的actions。</p><h2 id="术语介绍"><a href="#术语介绍" class="headerlink" title="术语介绍"></a>术语介绍</h2><ul><li>workflow（工作流）：指运行一次的所有流程；</li><li>job（任务）：组成workflow的单元，一个workflow由多个job组成；</li><li>step（步骤）：job执行时执行的单元，由多个action组成；</li><li>action：这就不多说了吧。</li></ul><h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><h2 id="获取-Personal-Access-Token"><a href="#获取-Personal-Access-Token" class="headerlink" title="获取 Personal Access Token"></a>获取 Personal Access Token</h2><p>打开你的Github 账户设置页，转到Developer settings -&gt; Personal access tokens，生成时记得勾选repo项，admin:repo_hook和workflow项。<br>之后复制生成的字符串，回到hexo仓库，打开仓库设置，转到Secrets，把字符串以环境变量的形式存储。变量名凭喜好自取。</p><h2 id="配置Actions"><a href="#配置Actions" class="headerlink" title="配置Actions"></a>配置Actions</h2><p>首先我们在GitHub打开Hexo的仓库，转到actions选项。<br>根据网页的提示，建立一个workflow。这样你就会进入一个编辑.yml文件的界面，文件就是workflow的配置文件。<br>这时在右边有市场界面，让我们在里面搜”hexo”，可以看到许多发布hexo博客的actions，这里我选择的是<a href="https://github.com/Solybum/hexo-deploy">hexo-deploy</a>,选择版本，将代码框的内容粘贴到workflow文件中，按注释改一下配置，保存。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>根据actions的不同，所需要的token/key类型也不同。有的使用Personal Access Token(PAT)，有的使用ssh key，具体看action的说明。<br>我倾向于使用PAT，因为PAT只用存储在hexo仓库上。相比之下，用ssh key需要将公钥放在hexo仓库，私钥放在pages仓库，较为麻烦。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>将hexo仓库push一下，actions就会自动运作，几分钟后Blog就可以访问了。</p>]]></content>
    
    
    <summary type="html">Github Actions介绍
注：以下内容大部分参考了这篇post，这篇post讲的比我清楚多了，人家是专业的。

什么是Github Actions?
Github Actions是Github自己推出的持续集成服务，可以自动地进行各种各样的构建并发布到正确的地方。
在本Blog中，我就使用了Github Actions来自动构建Hexo的静态网页并将它发布到Github Pages上。
这些构建，发布之类的操作，在Github Actions中被称为actions。用户可以将actions写成独立的脚本并供给其他人使用。Github建立了一个官方市场，可以找到我们需要的actions。</summary>
    
    
    
    <category term="博客搭建" scheme="https://williamgong.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="博客" scheme="https://williamgong.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Blog搭建实录-1 初始化hexo与建立git仓库</title>
    <link href="https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-1_%E5%88%9D%E5%A7%8B%E5%8C%96hexo%E4%B8%8E%E5%BB%BA%E7%AB%8Bgit%E4%BB%93%E5%BA%93/"/>
    <id>https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-1_%E5%88%9D%E5%A7%8B%E5%8C%96hexo%E4%B8%8E%E5%BB%BA%E7%AB%8Bgit%E4%BB%93%E5%BA%93/</id>
    <published>2020-10-10T22:32:51.000Z</published>
    <updated>2021-11-15T10:11:24.998Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初始化Hexo文件夹"><a href="#初始化Hexo文件夹" class="headerlink" title="初始化Hexo文件夹"></a>初始化Hexo文件夹</h1><h2 id="准备node-js"><a href="#准备node-js" class="headerlink" title="准备node.js"></a>准备node.js</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>在<a href="https://nodejs.org/en/">这里</a>下载，然后一路安装。</p><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>包管理工具，请。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><pre><code>npm install hexo-cli -g</code></pre><h2 id="建立Hexo文件夹"><a href="#建立Hexo文件夹" class="headerlink" title="建立Hexo文件夹"></a>建立Hexo文件夹</h2><p>首先，在本地见一个文件夹，名字最好是英文,然后    </p><pre><code>npx hexo install &lt;folder&gt;</code></pre><p>之后    </p><pre><code>cd &lt;folder&gt;</code></pre><p>最后   </p><pre><code>npm install</code></pre><p>一个Hexo文件夹就这样初始化好了。    </p><h2 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h2><blockquote><p>其实是不需要的，我只是好奇而已。<br>当然，之后这个操作是非常重要的，你可以把它当作熟悉Hexo操作。</p></blockquote><p>首先，让Hexo生成静态网页</p><pre><code>npx hexo generate</code></pre><p>然后，启动Hexo的本地服务</p><pre><code>npx hexo server</code></pre><p>之后就可以访问localhost:4000访问本地的网页了。</p><h1 id="建立Git仓库并上传到Github"><a href="#建立Git仓库并上传到Github" class="headerlink" title="建立Git仓库并上传到Github"></a>建立Git仓库并上传到Github</h1><blockquote><p>如果你不知道什么是git, Github，你现在就可以把本Blog关了。</p></blockquote><h2 id="建立Github-Pages发布仓库"><a href="#建立Github-Pages发布仓库" class="headerlink" title="建立Github Pages发布仓库"></a>建立Github Pages发布仓库</h2><p>在<a href="https://github.com/">Github</a>上，建立一个名为<code>\&lt;username&gt;.github.io</code>的仓库，然后放着。<br>之后，Hexo文件夹用git初始化，commit之后push到Github。<br>OK，其余的操作就主要在Github上进行了。</p>]]></content>
    
    
    <summary type="html">初始化Hexo文件夹
准备node.js
Windows
在这里下载，然后一路安装。

Linux
包管理工具，请。

安装Hexo
npm install hexo-cli -g

建立Hexo文件夹
首先，在本地见一个文件夹，名字最好是英文,然后 

npx hexo install &lt;folder&gt;

之后 

cd &lt;folder&gt;

最后 

npm install

一个Hexo文件夹就这样初始化好了。 

本地测试
其实是不需要的，我只是好奇而已。
当然，之后这个操作是非常重要的，你可以把它当作熟悉Hexo操作。

首先，让Hexo生成静态网页

npx hexo generat</summary>
    
    
    
    <category term="博客搭建" scheme="https://williamgong.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="博客" scheme="https://williamgong.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Blog搭建实录-0 序言</title>
    <link href="https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-0_%E5%BA%8F%E8%A8%80/"/>
    <id>https://williamgong.github.io/2020/10/10/Blog%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95-0_%E5%BA%8F%E8%A8%80/</id>
    <published>2020-10-10T13:30:29.000Z</published>
    <updated>2021-11-15T10:11:24.998Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>从0开始搭建这个博客到限制，已经折腾两天了。折腾的时候踩了不少坑，所以我想记录下我搭建这个Blog的过程，把搭建Blog的过程，我踩到的坑po出来，算是以示后人吧。（当然，我相信没什么人会看的）</p><h1 id="关于这个Blog"><a href="#关于这个Blog" class="headerlink" title="关于这个Blog"></a>关于这个Blog</h1><p>这个Blog由hexo搭建，通过Github Actions自动发布到Github Pages上。使用的主题用submodule的形式插入。</p><h1 id="关于更新"><a href="#关于更新" class="headerlink" title="关于更新"></a>关于更新</h1><p>我会不定期更新，打算先把在写这篇post前过程写出来，之后满满填坑。<br>所谓不定期更新呢，就是我想鸽多久就鸽多久啦！（咕咕咕咕咕咕咕）<br>反正没人看（</p><h1 id="当前Blog状态"><a href="#当前Blog状态" class="headerlink" title="当前Blog状态"></a>当前Blog状态</h1><p><img src="/images/current_status.jpg" alt="current_status"><br>（这是本地的）</p>]]></content>
    
    
    <summary type="html">写在前面
从0开始搭建这个博客到限制，已经折腾两天了。折腾的时候踩了不少坑，所以我想记录下我搭建这个Blog的过程，把搭建Blog的过程，我踩到的坑po出来，算是以示后人吧。（当然，我相信没什么人会看的）

关于这个Blog
这个Blog由hexo搭建，通过Github Actions自动发布到Github Pages上。使用的主题用submodule的形式插入。

关于更新
我会不定期更新，打算先把在写这篇post前过程写出来，之后满满填坑。
所谓不定期更新呢，就是我想鸽多久就鸽多久啦！（咕咕咕咕咕咕咕）
反正没人看（

当前Blog状态

（这是本地的）</summary>
    
    
    
    <category term="博客搭建" scheme="https://williamgong.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="博客" scheme="https://williamgong.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
